---
swagger: "2.0"
info:
  description: "An OpenAPI for EVE Online"
  version: "1.7.2"
  title: "EVE Swagger Interface"
host: "esi.evetech.net"
basePath: "/v7"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /characters/{character_id}/wallet/journal/:
    get:
      tags:
      - "Wallet"
      summary: "Get character wallet journal"
      description: "Retrieve the given character's wallet journal going 30 days back\n\
        \n---\nAlternate route: `/dev/characters/{character_id}/wallet/journal/`\n\
        \nAlternate route: `/latest/characters/{character_id}/wallet/journal/`\n\n\
        Alternate route: `/v6/characters/{character_id}/wallet/journal/`\n\n---\n\
        This route is cached for up to 3600 seconds\n\n---\n[Diff of the upcoming\
        \ changes](https://esi.evetech.net/diff/v7/dev/#GET-/characters/{character_id}/wallet/journal/)"
      operationId: "get_characters_character_id_wallet_journal"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        - "singularity"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Journal entries"
          schema:
            type: "array"
            description: "Wallet journal entries"
            title: "get_characters_character_id_wallet_journal_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_wallet_journal_200_ok"
            maxItems: 2500
          examples:
            application/json:
            - amount: -100000
              balance: 500000.4316
              context_id: 4
              context_id_type: "contract_id"
              date: "2018-02-23T14:31:32Z"
              description: "Contract Deposit"
              first_party_id: 2112625428
              id: 89
              ref_type: "contract_deposit"
              second_party_id: 1000132
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-wallet.read_character_wallet.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "v6"
      x-cached-seconds: 3600
securityDefinitions:
  evesso:
    type: "oauth2"
    authorizationUrl: "https://login.eveonline.com/v2/oauth/authorize"
    flow: "implicit"
    scopes:
      esi-wallet.read_character_wallet.v1: "EVE SSO scope esi-wallet.read_character_wallet.v1"
definitions:
  bad_request:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Bad request message"
    title: "Bad request"
    description: "Bad request model"
  error_limited:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Error limited message"
    title: "Error limited"
    description: "Error limited model"
  forbidden:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Forbidden message"
      sso_status:
        type: "integer"
        description: "status code received from SSO"
    title: "Forbidden"
    description: "Forbidden model"
  gateway_timeout:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Gateway timeout message"
      timeout:
        type: "integer"
        description: "number of seconds the request was given"
    title: "Gateway timeout"
    description: "Gateway timeout model"
  internal_server_error:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Internal server error message"
    title: "Internal server error"
    description: "Internal server error model"
  service_unavailable:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Service unavailable message"
    title: "Service unavailable"
    description: "Service unavailable model"
  unauthorized:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Unauthorized message"
    title: "Unauthorized"
    description: "Unauthorized model"
  get_characters_character_id_wallet_journal_200_ok:
    properties:
      amount:
        type: "number"
        format: "double"
        description: "The amount of ISK given or taken from the wallet as a result\
          \ of the given transaction. Positive when ISK is deposited into the wallet\
          \ and negative when ISK is withdrawn"
        title: "get_characters_character_id_wallet_journal_amount"
      balance:
        type: "number"
        format: "double"
        description: "Wallet balance after transaction occurred"
        title: "get_characters_character_id_wallet_journal_balance"
      context_id:
        type: "integer"
        format: "int64"
        description: "An ID that gives extra context to the particular transaction.\
          \ Because of legacy reasons the context is completely different per ref_type\
          \ and means different things. It is also possible to not have a context_id"
        title: "get_characters_character_id_wallet_journal_context_id"
      context_id_type:
        type: "string"
        description: "The type of the given context_id if present"
        title: "get_characters_character_id_wallet_journal_context_id_type"
        enum:
        - "structure_id"
        - "station_id"
        - "market_transaction_id"
        - "character_id"
        - "corporation_id"
        - "alliance_id"
        - "eve_system"
        - "industry_job_id"
        - "contract_id"
        - "planet_id"
        - "system_id"
        - "type_id"
      date:
        type: "string"
        format: "date-time"
        description: "Date and time of transaction"
        title: "get_characters_character_id_wallet_journal_date"
      description:
        type: "string"
        description: "The reason for the transaction, mirrors what is seen in the\
          \ client"
        title: "get_characters_character_id_wallet_journal_description"
      first_party_id:
        type: "integer"
        format: "int32"
        description: "The id of the first party involved in the transaction. This\
          \ attribute has no consistency and is different or non existant for particular\
          \ ref_types. The description attribute will help make sense of what this\
          \ attribute means. For more info about the given ID it can be dropped into\
          \ the /universe/names/ ESI route to determine its type and name"
        title: "get_characters_character_id_wallet_journal_first_party_id"
      id:
        type: "integer"
        format: "int64"
        description: "Unique journal reference ID"
        title: "get_characters_character_id_wallet_journal_id"
      reason:
        type: "string"
        description: "The user stated reason for the transaction. Only applies to\
          \ some ref_types"
        title: "get_characters_character_id_wallet_journal_reason"
      ref_type:
        type: "string"
        description: "\"The transaction type for the given. transaction. Different\
          \ transaction types will populate different attributes. Note: If you have\
          \ an existing XML API application that is using ref_types, you will need\
          \ to know which string ESI ref_type maps to which integer. You can look\
          \ at the following file to see string->int mappings: github.com/ccpgames/eve-glue/blob/master/eve_glue/wallet_journal_ref.py\""
        title: "get_characters_character_id_wallet_journal_ref_type"
      second_party_id:
        type: "integer"
        format: "int32"
        description: "The id of the second party involved in the transaction. This\
          \ attribute has no consistency and is different or non existant for particular\
          \ ref_types. The description attribute will help make sense of what this\
          \ attribute means. For more info about the given ID it can be dropped into\
          \ the /universe/names/ ESI route to determine its type and name"
        title: "get_characters_character_id_wallet_journal_second_party_id"
      tax:
        type: "number"
        format: "double"
        description: "Tax amount received. Only applies to tax related transactions"
        title: "get_characters_character_id_wallet_journal_tax"
      tax_receiver_id:
        type: "integer"
        format: "int32"
        description: "The corporation ID receiving any tax paid. Only applies to tax\
          \ related transactions"
        title: "get_characters_character_id_wallet_journal_tax_receiver_id"
    description: "200 ok object"
parameters:
  If-None-Match:
    name: "If-None-Match"
    in: "header"
    description: "ETag from a previous request. A 304 will be returned if this matches\
      \ the current ETag"
    required: false
    type: "string"
    x-exportParamName: "IfNoneMatch"
  character_id:
    name: "character_id"
    in: "path"
    description: "An EVE character ID"
    required: true
    type: "integer"
    minimum: 1
    format: "int32"
    x-exportParamName: "CharacterId"
  corporation_id:
    name: "corporation_id"
    in: "path"
    description: "An EVE corporation ID"
    required: true
    type: "integer"
    minimum: 1
    format: "int32"
  datasource:
    name: "datasource"
    in: "query"
    description: "The server name you would like data from"
    required: false
    type: "string"
    default: "tranquility"
    enum:
    - "tranquility"
    - "singularity"
    x-exportParamName: "Datasource"
  page:
    name: "page"
    in: "query"
    description: "Which page of results to return"
    required: false
    type: "integer"
    default: 1
    minimum: 1
    format: "int32"
  token:
    name: "token"
    in: "query"
    description: "Access token to use if unable to set a header"
    required: false
    type: "string"
    x-exportParamName: "Token"
