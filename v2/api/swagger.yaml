---
swagger: "2.0"
info:
  description: "An OpenAPI for EVE Online"
  version: "1.7.14"
  title: "EVE Swagger Interface"
host: "esi.evetech.net"
basePath: "/v2"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /alliances/:
    get:
      tags:
      - "Alliance"
      summary: "List all alliances"
      description: "List all active player alliances\n\n---\nAlternate route: `/dev/alliances/`\n\
        \nAlternate route: `/latest/alliances/`\n\nAlternate route: `/legacy/alliances/`\n\
        \nAlternate route: `/v1/alliances/`\n\n---\nThis route is cached for up to\
        \ 3600 seconds"
      operationId: "get_alliances"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "List of Alliance IDs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_alliances_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_alliances_200_ok"
              minimum: 0
            maxItems: 5000
          examples:
            application/json:
            - 99000001
            - 99000002
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 3600
  /alliances/{alliance_id}/contacts/:
    get:
      tags:
      - "Contacts"
      summary: "Get alliance contacts"
      description: "Return contacts of an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/contacts/`\n\
        \nAlternate route: `/latest/alliances/{alliance_id}/contacts/`\n\n---\nThis\
        \ route is cached for up to 300 seconds"
      operationId: "get_alliances_alliance_id_contacts"
      parameters:
      - name: "alliance_id"
        in: "path"
        description: "An EVE alliance ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "AllianceId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of contacts"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_alliances_alliance_id_contacts_ok"
            items:
              $ref: "#/definitions/get_alliances_alliance_id_contacts_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - contact_id: 2112625428
              contact_type: "character"
              standing: 9.9
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-alliances.read_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 300
  /alliances/{alliance_id}/corporations/:
    get:
      tags:
      - "Alliance"
      summary: "List alliance's corporations"
      description: "List all current member corporations of an alliance\n\n---\nAlternate\
        \ route: `/dev/alliances/{alliance_id}/corporations/`\n\nAlternate route:\
        \ `/latest/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/corporations/`\n\
        \nAlternate route: `/v1/alliances/{alliance_id}/corporations/`\n\n---\nThis\
        \ route is cached for up to 3600 seconds"
      operationId: "get_alliances_alliance_id_corporations"
      parameters:
      - name: "alliance_id"
        in: "path"
        description: "An EVE alliance ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "AllianceId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "List of corporation IDs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_alliances_alliance_id_corporations_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_alliances_alliance_id_corporations_200_ok"
              minimum: 0
            maxItems: 1000
          examples:
            application/json:
            - 98000001
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 3600
  /alliances/{alliance_id}/icons/:
    get:
      tags:
      - "Alliance"
      summary: "Get alliance icon"
      description: "Get the icon urls for a alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/icons/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_alliances_alliance_id_icons"
      parameters:
      - name: "alliance_id"
        in: "path"
        description: "An EVE alliance ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "AllianceId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Icon URLs for the given alliance id and server"
          schema:
            $ref: "#/definitions/get_alliances_alliance_id_icons_ok"
          examples:
            application/json:
              px128x128: "https://images.evetech.net/alliances/503818424/logo?tenant=tranquility&size=128"
              px64x64: "https://images.evetech.net/alliances/503818424/logo?tenant=tranquility&size=64"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "No image server for this datasource"
          schema:
            $ref: "#/definitions/get_alliances_alliance_id_icons_not_found"
          examples:
            application/json:
              error: "No image server for this datasource"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /characters/affiliation/:
    post:
      tags:
      - "Character"
      summary: "Character affiliation"
      description: "Bulk lookup of character IDs to corporation, alliance and faction\n\
        \n---\nAlternate route: `/dev/characters/affiliation/`\n\n---\nThis route\
        \ is cached for up to 3600 seconds"
      operationId: "post_characters_affiliation"
      parameters:
      - in: "body"
        name: "characters"
        description: "The character IDs to fetch affiliations for. All characters\
          \ must exist, or none will be returned"
        required: true
        schema:
          title: "post_characters_affiliation_characters"
          type: "array"
          description: "characters array"
          items:
            type: "integer"
            format: "int32"
            description: "character integer"
            title: "post_characters_affiliation_character"
        x-exportParamName: "Characters"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      responses:
        200:
          description: "Character corporation, alliance and faction IDs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "post_characters_affiliation_ok"
            items:
              $ref: "#/definitions/post_characters_affiliation_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - alliance_id: 434243723
              character_id: 95538921
              corporation_id: 109299958
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /characters/{character_id}/agents_research/:
    get:
      tags:
      - "Character"
      summary: "Get agents research"
      description: "Return a list of agents research information for a character.\
        \ The formula for finding the current research points with an agent is: currentPoints\
        \ = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n\
        \n---\nAlternate route: `/dev/characters/{character_id}/agents_research/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_agents_research"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of agents research information"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_agents_research_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_agents_research_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - agent_id: 3009358
              points_per_day: 53.5346162146776
              remainder_points: 53604.0634303189
              skill_type_id: 11450
              started_at: "2017-03-23T14:47:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_agents_research.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /characters/{character_id}/assets/locations/:
    post:
      tags:
      - "Assets"
      summary: "Get character asset locations"
      description: "Return locations for a set of item ids, which you can get from\
        \ character assets endpoint. Coordinates for items in hangars or stations\
        \ are set to (0,0,0)\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/locations/`\n\
        \nAlternate route: `/latest/characters/{character_id}/assets/locations/`\n"
      operationId: "post_characters_character_id_assets_locations"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - in: "body"
        name: "item_ids"
        description: "A list of item ids"
        required: true
        schema:
          title: "post_characters_character_id_assets_locations_item_ids"
          type: "array"
          description: "item_ids array"
          items:
            type: "integer"
            format: "int64"
            description: "item_id integer"
            title: "post_characters_character_id_assets_locations_item_id"
        x-exportParamName: "ItemIds"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of asset locations"
          schema:
            type: "array"
            description: "200 ok array"
            title: "post_characters_character_id_assets_locations_ok"
            items:
              $ref: "#/definitions/post_characters_character_id_assets_locations_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - item_id: 12345
              position:
                x: 1.2
                y: 2.3
                z: -3.4
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-assets.read_assets.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
  /characters/{character_id}/blueprints/:
    get:
      tags:
      - "Character"
      summary: "Get blueprints"
      description: "Return a list of blueprints the character owns\n\n---\nAlternate\
        \ route: `/latest/characters/{character_id}/blueprints/`\n\n---\nThis route\
        \ is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_blueprints"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of blueprints"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_blueprints_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_blueprints_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - item_id: 1000000010495
              location_flag: "Hangar"
              location_id: 60014719
              material_efficiency: 0
              quantity: 1
              runs: -1
              time_efficiency: 0
              type_id: 691
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_blueprints.v1"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
  /characters/{character_id}/bookmarks/:
    get:
      tags:
      - "Bookmarks"
      summary: "List bookmarks"
      description: "A list of your character's personal bookmarks\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/bookmarks/`\n\nAlternate route: `/latest/characters/{character_id}/bookmarks/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_bookmarks"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of bookmarks"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_bookmarks_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_bookmarks_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - bookmark_id: 4
              created: "2016-08-09T11:57:47Z"
              creator_id: 2112625428
              folder_id: 5
              item:
                item_id: 50006722
                type_id: 29633
              label: "Stargate"
              location_id: 30003430
              notes: "This is a stargate"
            - bookmark_id: 5
              coordinates:
                x: -2958928814000
                y: -338367275823
                z: 2114538075090
              created: "2016-08-09T11:57:47Z"
              creator_id: 2112625428
              folder_id: 5
              label: "Random location"
              location_id: 30003430
              notes: "This is a random location in space"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-bookmarks.read_character_bookmarks.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 3600
  /characters/{character_id}/bookmarks/folders/:
    get:
      tags:
      - "Bookmarks"
      summary: "List bookmark folders"
      description: "A list of your character's personal bookmark folders\n\n---\n\
        Alternate route: `/dev/characters/{character_id}/bookmarks/folders/`\n\nAlternate\
        \ route: `/latest/characters/{character_id}/bookmarks/folders/`\n\n---\nThis\
        \ route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_bookmarks_folders"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of bookmark folders"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_bookmarks_folders_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_bookmarks_folders_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - folder_id: 5
              name: "Icecream"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-bookmarks.read_character_bookmarks.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 3600
  /characters/{character_id}/calendar/:
    get:
      tags:
      - "Calendar"
      summary: "List calendar event summaries"
      description: "Get 50 event summaries from the calendar. If no from_event ID\
        \ is given, the resource will return the next 50 chronological event summaries\
        \ from now. If a from_event ID is specified, it will return the next 50 chronological\
        \ event summaries from after that event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/`\n\
        \nAlternate route: `/latest/characters/{character_id}/calendar/`\n\nAlternate\
        \ route: `/legacy/characters/{character_id}/calendar/`\n\nAlternate route:\
        \ `/v1/characters/{character_id}/calendar/`\n\n---\nThis route is cached for\
        \ up to 5 seconds"
      operationId: "get_characters_character_id_calendar"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "from_event"
        in: "query"
        description: "The event ID to retrieve events from"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "FromEvent"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A collection of event summaries"
          schema:
            type: "array"
            description: "Up to 50 events from now or the event you requested"
            title: "get_characters_character_id_calendar_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_calendar_200_ok"
            maxItems: 50
          examples:
            application/json:
            - event_date: "2016-06-26T20:00:00Z"
              event_id: 1386435
              event_response: "accepted"
              importance: 0
              title: "o7 The EVE Online Show"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-calendar.read_calendar_events.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 5
  /characters/{character_id}/calendar/{event_id}/attendees/:
    get:
      tags:
      - "Calendar"
      summary: "Get attendees"
      description: "Get all invited attendees for a given event\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/calendar/{event_id}/attendees/`\n\
        \nAlternate route: `/latest/characters/{character_id}/calendar/{event_id}/attendees/`\n\
        \nAlternate route: `/legacy/characters/{character_id}/calendar/{event_id}/attendees/`\n\
        \nAlternate route: `/v1/characters/{character_id}/calendar/{event_id}/attendees/`\n\
        \n---\nThis route is cached for up to 600 seconds"
      operationId: "get_characters_character_id_calendar_event_id_attendees"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "event_id"
        in: "path"
        description: "The id of the event requested"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventId"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of attendees"
          schema:
            type: "array"
            description: "List of attendees for a given event"
            title: "get_characters_character_id_calendar_event_id_attendees_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_calendar_event_id_attendees_200_ok"
            maxItems: 100
          examples:
            application/json:
            - character_id: 2112625428
              event_response: "accepted"
            - character_id: 95465499
              event_response: "tentative"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/get_characters_character_id_calendar_event_id_attendees_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-calendar.read_calendar_events.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 600
  /characters/{character_id}/clones/:
    get:
      tags:
      - "Clones"
      summary: "Get clones"
      description: "A list of the character's clones\n\n---\nAlternate route: `/legacy/characters/{character_id}/clones/`\n\
        \n---\nThis route is cached for up to 120 seconds\n\n---\nWarning: This route\
        \ is deprecated\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/characters/{character_id}/clones/)"
      operationId: "get_characters_character_id_clones"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Clone information for the given character"
          schema:
            $ref: "#/definitions/get_characters_character_id_clones_ok"
          examples:
            application/json:
              home_location:
                location_id: 1021348135816
                location_type: "structure"
              jump_clones:
              - implants:
                - 22118
                location_id: 60003463
                location_type: "station"
              - implants: []
                location_id: 1021348135816
                location_type: "structure"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-clones.read_clones.v1"
      deprecated: true
      x-alternate-versions:
      - "legacy"
      x-cached-seconds: 120
  /characters/{character_id}/contacts/:
    get:
      tags:
      - "Contacts"
      summary: "Get contacts"
      description: "Return contacts of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\
        \nAlternate route: `/latest/characters/{character_id}/contacts/`\n\n---\n\
        This route is cached for up to 300 seconds"
      operationId: "get_characters_character_id_contacts"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of contacts"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_contacts_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_contacts_200_ok"
            maxItems: 1024
          examples:
            application/json:
            - contact_id: 123
              contact_type: "character"
              is_blocked: true
              is_watched: true
              standing: 9.9
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 300
    post:
      tags:
      - "Contacts"
      summary: "Add contacts"
      description: "Bulk add contacts with same settings\n\n---\nAlternate route:\
        \ `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n"
      operationId: "post_characters_character_id_contacts"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - in: "body"
        name: "contact_ids"
        description: "A list of contacts"
        required: true
        schema:
          title: "post_characters_character_id_contacts_contact_ids"
          type: "array"
          description: "contact_ids array"
          items:
            type: "integer"
            format: "int32"
            description: "ID of the contact to edit"
            title: "post_characters_character_id_contacts_contact_id"
        x-exportParamName: "ContactIds"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "label_ids"
        in: "query"
        description: "Add custom labels to the new contact"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        maxItems: 63
        x-exportParamName: "LabelIds"
      - name: "standing"
        in: "query"
        description: "Standing for the contact"
        required: true
        type: "number"
        maximum: 10
        minimum: -10
        format: "float"
        x-exportParamName: "Standing"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      - name: "watched"
        in: "query"
        description: "Whether the contact should be watched, note this is only effective\
          \ on characters"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Watched"
      responses:
        201:
          description: "A list of contact ids that successfully created"
          schema:
            type: "array"
            description: "201 created array"
            title: "post_characters_character_id_contacts_created"
            items:
              type: "integer"
              format: "int32"
              description: "201 created integer"
              title: "post_characters_character_id_contacts_201_created"
            maxItems: 100
          examples:
            application/json:
            - 123
            - 456
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
        520:
          description: "Internal error thrown from the EVE server"
          schema:
            $ref: "#/definitions/post_characters_character_id_contacts_error_520"
          examples:
            application/json:
              error: "Error 520 message"
      security:
      - evesso:
        - "esi-characters.write_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
    put:
      tags:
      - "Contacts"
      summary: "Edit contacts"
      description: "Bulk edit contacts with same settings\n\n---\nAlternate route:\
        \ `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/latest/characters/{character_id}/contacts/`\n"
      operationId: "put_characters_character_id_contacts"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - in: "body"
        name: "contact_ids"
        description: "A list of contacts"
        required: true
        schema:
          title: "put_characters_character_id_contacts_contact_ids"
          type: "array"
          description: "contact_ids array"
          items:
            type: "integer"
            format: "int32"
            description: "ID of the contact to edit"
            title: "put_characters_character_id_contacts_contact_id"
        x-exportParamName: "ContactIds"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "label_ids"
        in: "query"
        description: "Add custom labels to the contact"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        maxItems: 63
        x-exportParamName: "LabelIds"
      - name: "standing"
        in: "query"
        description: "Standing for the contact"
        required: true
        type: "number"
        maximum: 10
        minimum: -10
        format: "float"
        x-exportParamName: "Standing"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      - name: "watched"
        in: "query"
        description: "Whether the contact should be watched, note this is only effective\
          \ on characters"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Watched"
      responses:
        204:
          description: "Contacts updated"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.write_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
    delete:
      tags:
      - "Contacts"
      summary: "Delete contacts"
      description: "Bulk delete contacts\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\
        \nAlternate route: `/latest/characters/{character_id}/contacts/`\n"
      operationId: "delete_characters_character_id_contacts"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "contact_ids"
        in: "query"
        description: "A list of contacts to delete"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 20
        minItems: 1
        x-exportParamName: "ContactIds"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        204:
          description: "Contacts deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.write_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
  /characters/{character_id}/corporationhistory/:
    get:
      tags:
      - "Character"
      summary: "Get corporation history"
      description: "Get a list of all the corporations a character has been a member\
        \ of\n\n---\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\
        \n---\nThis route is cached for up to 86400 seconds"
      operationId: "get_characters_character_id_corporationhistory"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Corporation history for the given character"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_corporationhistory_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_corporationhistory_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - corporation_id: 90000001
              is_deleted: true
              record_id: 500
              start_date: "2016-06-26T20:00:00Z"
            - corporation_id: 90000002
              record_id: 501
              start_date: "2016-07-26T20:00:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 86400
  /characters/{character_id}/fatigue/:
    get:
      tags:
      - "Character"
      summary: "Get jump fatigue"
      description: "Return a character's jump activation and fatigue information\n\
        \n---\nAlternate route: `/dev/characters/{character_id}/fatigue/`\n\n---\n\
        This route is cached for up to 300 seconds"
      operationId: "get_characters_character_id_fatigue"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Jump activation and fatigue information"
          schema:
            $ref: "#/definitions/get_characters_character_id_fatigue_ok"
          examples:
            application/json:
              jump_fatigue_expire_date: "2017-07-06T15:47:00Z"
              last_jump_date: "2017-07-05T15:47:00Z"
              last_update_date: "2017-07-05T15:42:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_fatigue.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 300
  /characters/{character_id}/fittings/:
    get:
      tags:
      - "Fittings"
      summary: "Get fittings"
      description: "Return fittings of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\
        \nAlternate route: `/latest/characters/{character_id}/fittings/`\n\n---\n\
        This route is cached for up to 300 seconds"
      operationId: "get_characters_character_id_fittings"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of fittings"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_fittings_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_fittings_200_ok"
            maxItems: 250
          examples:
            application/json:
            - description: "Awesome Vindi fitting"
              fitting_id: 1
              items:
              - flag: "Cargo"
                quantity: 1
                type_id: 1234
              name: "Best Vindicator"
              ship_type_id: 123
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-fittings.read_fittings.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 300
    post:
      tags:
      - "Fittings"
      summary: "Create fitting"
      description: "Save a new fitting for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\
        \nAlternate route: `/latest/characters/{character_id}/fittings/`\n"
      operationId: "post_characters_character_id_fittings"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - in: "body"
        name: "fitting"
        description: "Details about the new fitting"
        required: true
        schema:
          $ref: "#/definitions/post_characters_character_id_fittings_fitting"
        x-exportParamName: "Fitting"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        201:
          description: "A list of fittings"
          schema:
            $ref: "#/definitions/post_characters_character_id_fittings_created"
          examples:
            application/json:
              fitting_id: 2
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-fittings.write_fittings.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
  /characters/{character_id}/fleet/:
    get:
      tags:
      - "Fleets"
      summary: "Get character fleet info"
      description: "Return the fleet ID the character is in, if any.\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/fleet/`\n\n---\nThis route is cached\
        \ for up to 60 seconds"
      operationId: "get_characters_character_id_fleet"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Details about the character's fleet"
          schema:
            $ref: "#/definitions/get_characters_character_id_fleet_ok"
          examples:
            application/json:
              fleet_boss_id: 2112000001
              fleet_id: 1234567890
              role: "fleet_commander"
              squad_id: -1
              wing_id: -1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        404:
          description: "The character is not in a fleet"
          schema:
            $ref: "#/definitions/get_characters_character_id_fleet_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-fleets.read_fleet.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 60
  /characters/{character_id}/fw/stats/:
    get:
      tags:
      - "Faction Warfare"
      summary: "Overview of a character involved in faction warfare"
      description: "Statistical overview of a character involved in faction warfare\n\
        \n---\nAlternate route: `/dev/characters/{character_id}/fw/stats/`\n\nAlternate\
        \ route: `/latest/characters/{character_id}/fw/stats/`\n\nAlternate route:\
        \ `/legacy/characters/{character_id}/fw/stats/`\n\nAlternate route: `/v1/characters/{character_id}/fw/stats/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_characters_character_id_fw_stats"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Faction warfare statistics for a given character"
          schema:
            $ref: "#/definitions/get_characters_character_id_fw_stats_ok"
          examples:
            application/json:
              enlisted_on: "2017-10-17T00:00:00Z"
              faction_id: 500001
              kills:
                last_week: 893
                total: 684350
                yesterday: 136
              victory_points:
                last_week: 102640
                total: 52658260
                yesterday: 15980
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_fw_stats.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /characters/{character_id}/implants/:
    get:
      tags:
      - "Clones"
      summary: "Get active implants"
      description: "Return implants on the active clone of a character\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/implants/`\n\nAlternate route: `/latest/characters/{character_id}/implants/`\n\
        \nAlternate route: `/legacy/characters/{character_id}/implants/`\n\nAlternate\
        \ route: `/v1/characters/{character_id}/implants/`\n\n---\nThis route is cached\
        \ for up to 120 seconds"
      operationId: "get_characters_character_id_implants"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of implant type ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_implants_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_characters_character_id_implants_200_ok"
            maxItems: 11
          examples:
            application/json:
            - 1
            - 2
            - 3
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-clones.read_implants.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 120
  /characters/{character_id}/location/:
    get:
      tags:
      - "Location"
      summary: "Get character location"
      description: "Information about the characters current location. Returns the\
        \ current solar system id, and also the current station or structure ID if\
        \ applicable\n\n---\nAlternate route: `/dev/characters/{character_id}/location/`\n\
        \nAlternate route: `/latest/characters/{character_id}/location/`\n\nAlternate\
        \ route: `/legacy/characters/{character_id}/location/`\n\nAlternate route:\
        \ `/v1/characters/{character_id}/location/`\n\n---\nThis route is cached for\
        \ up to 5 seconds"
      operationId: "get_characters_character_id_location"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Information about the characters current location. Returns\
            \ the current solar system id, and also the current station or structure\
            \ ID if applicable"
          schema:
            $ref: "#/definitions/get_characters_character_id_location_ok"
          examples:
            application/json:
              solar_system_id: 30002505
              structure_id: 1000000016989
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-location.read_location.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 5
  /characters/{character_id}/mail/labels/:
    get:
      tags:
      - "Mail"
      summary: "Get mail labels"
      description: "Return a list of the users mail labels\n\n---\nAlternate route:\
        \ `/legacy/characters/{character_id}/mail/labels/`\n\n---\nThis route is cached\
        \ for up to 30 seconds\n\n---\nWarning: This route is deprecated\n\n---\n\
        [Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/characters/{character_id}/mail/labels/)"
      operationId: "get_characters_character_id_mail_labels"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of mail labels"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_mail_labels_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_mail_labels_200_ok"
            maxItems: 30
          examples:
            application/json:
            - color: "#660066"
              label_id: 16
              name: "PINK"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-mail.read_mail.v1"
      deprecated: true
      x-alternate-versions:
      - "legacy"
      x-cached-seconds: 30
    post:
      tags:
      - "Mail"
      summary: "Create a mail label"
      description: "Create a mail label\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n\
        \nAlternate route: `/latest/characters/{character_id}/mail/labels/`\n\nAlternate\
        \ route: `/legacy/characters/{character_id}/mail/labels/`\n"
      operationId: "post_characters_character_id_mail_labels"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - in: "body"
        name: "label"
        description: "Label to create"
        required: true
        schema:
          $ref: "#/definitions/post_characters_character_id_mail_labels_label"
        x-exportParamName: "Label"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        201:
          description: "Label created"
          schema:
            type: "integer"
            format: "int32"
            description: "Label ID"
            title: "post_characters_character_id_mail_labels_created"
          examples:
            application/json: 128
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-mail.organize_mail.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
  /characters/{character_id}/medals/:
    get:
      tags:
      - "Character"
      summary: "Get medals"
      description: "Return a list of medals the character has\n\n---\nAlternate route:\
        \ `/dev/characters/{character_id}/medals/`\n\n---\nThis route is cached for\
        \ up to 3600 seconds"
      operationId: "get_characters_character_id_medals"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of medals"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_medals_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_medals_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - corporation_id: 98000001
              date: "2017-03-16T15:01:45Z"
              description: "For 33 corp!"
              graphics:
              - color: -1
                graphic: "caldari.1_1"
                layer: 0
                part: 1
              - color: -330271
                graphic: "caldari.1_2"
                layer: 1
                part: 1
              - color: -1
                graphic: "compass.1_2"
                layer: 0
                part: 2
              issuer_id: 2112000002
              medal_id: 3
              reason: "Thanks!"
              status: "private"
              title: "33 tester medal"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_medals.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /characters/{character_id}/notifications/contacts/:
    get:
      tags:
      - "Character"
      summary: "Get new contact notifications"
      description: "Return notifications about having been added to someone's contact\
        \ list\n\n---\nAlternate route: `/dev/characters/{character_id}/notifications/contacts/`\n\
        \n---\nThis route is cached for up to 600 seconds"
      operationId: "get_characters_character_id_notifications_contacts"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of contact notifications"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_notifications_contacts_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_notifications_contacts_200_ok"
            maxItems: 50
          examples:
            application/json:
            - message: "hello friend :3"
              notification_id: 1
              send_date: "2017-08-16T10:08:00Z"
              sender_character_id: 95465499
              standing_level: 1.5
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_notifications.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 600
  /characters/{character_id}/online/:
    get:
      tags:
      - "Location"
      summary: "Get character online"
      description: "Checks if the character is currently online\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/online/`\n\nAlternate route: `/latest/characters/{character_id}/online/`\n\
        \nAlternate route: `/v3/characters/{character_id}/online/`\n\n---\nThis route\
        \ is cached for up to 60 seconds"
      operationId: "get_characters_character_id_online"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Object describing the character's online status"
          schema:
            $ref: "#/definitions/get_characters_character_id_online_ok"
          examples:
            application/json:
              last_login: "2017-01-02T03:04:05Z"
              last_logout: "2017-01-02T04:05:06Z"
              logins: 9001
              online: true
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-location.read_online.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "v3"
      x-cached-seconds: 60
  /characters/{character_id}/orders/:
    get:
      tags:
      - "Market"
      summary: "List open orders from a character"
      description: "List open market orders placed by a character\n\n---\nAlternate\
        \ route: `/dev/characters/{character_id}/orders/`\n\nAlternate route: `/latest/characters/{character_id}/orders/`\n\
        \n---\nThis route is cached for up to 1200 seconds"
      operationId: "get_characters_character_id_orders"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Open market orders placed by a character"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_orders_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_orders_200_ok"
            maxItems: 305
          examples:
            application/json:
            - duration: 30
              escrow: 45.6
              is_buy_order: true
              is_corporation: false
              issued: "2016-09-03T05:12:25Z"
              location_id: 456
              min_volume: 1
              order_id: 123
              price: 33.3
              range: "station"
              region_id: 123
              type_id: 456
              volume_remain: 4422
              volume_total: 123456
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-markets.read_character_orders.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 1200
  /characters/{character_id}/portrait/:
    get:
      tags:
      - "Character"
      summary: "Get character portraits"
      description: "Get portrait urls for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/portrait/`\n\
        \nAlternate route: `/latest/characters/{character_id}/portrait/`\n\nAlternate\
        \ route: `/v3/characters/{character_id}/portrait/`\n\n---\nThis route expires\
        \ daily at 11:05"
      operationId: "get_characters_character_id_portrait"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Public data for the given character"
          schema:
            $ref: "#/definitions/get_characters_character_id_portrait_ok"
          examples:
            application/json:
              px128x128: "https://images.evetech.net/characters/95465499/portrait?tenant=tranquility&size=128"
              px256x256: "https://images.evetech.net/characters/95465499/portrait?tenant=tranquility&size=256"
              px512x512: "https://images.evetech.net/characters/95465499/portrait?tenant=tranquility&size=512"
              px64x64: "https://images.evetech.net/characters/95465499/portrait?tenant=tranquility&size=64"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "No image server for this datasource"
          schema:
            $ref: "#/definitions/get_characters_character_id_portrait_not_found"
          examples:
            application/json:
              error: "No image server for this datasource"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "v3"
  /characters/{character_id}/roles/:
    get:
      tags:
      - "Character"
      summary: "Get character corporation roles"
      description: "Returns a character's corporation roles\n\n---\nAlternate route:\
        \ `/latest/characters/{character_id}/roles/`\n\n---\nThis route is cached\
        \ for up to 3600 seconds"
      operationId: "get_characters_character_id_roles"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "The character's roles in thier corporation"
          schema:
            $ref: "#/definitions/get_characters_character_id_roles_ok"
          examples:
            application/json:
              roles:
              - "Director"
              - "Station_Manager"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_corporation_roles.v1"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
  /characters/{character_id}/ship/:
    get:
      tags:
      - "Location"
      summary: "Get current ship"
      description: "Get the current ship type, name and id\n\n---\nAlternate route:\
        \ `/dev/characters/{character_id}/ship/`\n\nAlternate route: `/latest/characters/{character_id}/ship/`\n\
        \nAlternate route: `/legacy/characters/{character_id}/ship/`\n\nAlternate\
        \ route: `/v1/characters/{character_id}/ship/`\n\n---\nThis route is cached\
        \ for up to 5 seconds"
      operationId: "get_characters_character_id_ship"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Get the current ship type, name and id"
          schema:
            $ref: "#/definitions/get_characters_character_id_ship_ok"
          examples:
            application/json:
              ship_item_id: 1000000016991
              ship_name: "SPACESHIPS!!!"
              ship_type_id: 1233
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-location.read_ship_type.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 5
  /characters/{character_id}/skillqueue/:
    get:
      tags:
      - "Skills"
      summary: "Get character's skill queue"
      description: "List the configured skill queue for the given character\n\n---\n\
        Alternate route: `/dev/characters/{character_id}/skillqueue/`\n\nAlternate\
        \ route: `/latest/characters/{character_id}/skillqueue/`\n\nAlternate route:\
        \ `/legacy/characters/{character_id}/skillqueue/`\n\n---\nThis route is cached\
        \ for up to 120 seconds"
      operationId: "get_characters_character_id_skillqueue"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "The current skill queue, sorted ascending by finishing time"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_skillqueue_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_skillqueue_200_ok"
            maxItems: 51
          examples:
            application/json:
            - finish_date: "2016-06-29T10:47:00Z"
              finished_level: 3
              queue_position: 0
              skill_id: 1
              start_date: "2016-06-29T10:46:00Z"
            - finish_date: "2016-07-15T10:47:00Z"
              finished_level: 4
              queue_position: 1
              skill_id: 1
              start_date: "2016-06-29T10:47:00Z"
            - finish_date: "2016-08-30T10:47:00Z"
              finished_level: 2
              queue_position: 2
              skill_id: 2
              start_date: "2016-07-15T10:47:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-skills.read_skillqueue.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      x-cached-seconds: 120
  /characters/{character_id}/standings/:
    get:
      tags:
      - "Character"
      summary: "Get standings"
      description: "Return character standings from agents, NPC corporations, and\
        \ factions\n\n---\nAlternate route: `/dev/characters/{character_id}/standings/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_standings"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of standings"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_standings_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_standings_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - from_id: 3009841
              from_type: "agent"
              standing: 0.1
            - from_id: 1000061
              from_type: "npc_corp"
              standing: 0
            - from_id: 500003
              from_type: "faction"
              standing: -1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_standings.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /characters/{character_id}/titles/:
    get:
      tags:
      - "Character"
      summary: "Get character corporation titles"
      description: "Returns a character's titles\n\n---\nAlternate route: `/dev/characters/{character_id}/titles/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_titles"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of titles"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_characters_character_id_titles_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_titles_200_ok"
            maxItems: 16
          examples:
            application/json:
            - name: "Awesome Title"
              title_id: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-characters.read_titles.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /characters/{character_id}/wallet/:
    get:
      tags:
      - "Wallet"
      summary: "Get a character's wallet balance"
      description: "Returns a character's wallet balance\n\n---\nAlternate route:\
        \ `/dev/characters/{character_id}/wallet/`\n\nAlternate route: `/latest/characters/{character_id}/wallet/`\n\
        \nAlternate route: `/legacy/characters/{character_id}/wallet/`\n\nAlternate\
        \ route: `/v1/characters/{character_id}/wallet/`\n\n---\nThis route is cached\
        \ for up to 120 seconds"
      operationId: "get_characters_character_id_wallet"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Wallet balance"
          schema:
            type: "number"
            format: "double"
            description: "Wallet balance"
            title: "get_characters_character_id_wallet_ok"
          examples:
            application/json: 29500.01
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-wallet.read_character_wallet.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 120
  /characters/{character_id}/wallet/transactions/:
    get:
      tags:
      - "Wallet"
      summary: "Get wallet transactions"
      description: "Get wallet transactions of a character going 30 days back\n\n\
        ---\nAlternate route: `/dev/characters/{character_id}/wallet/transactions/`\n\
        \nAlternate route: `/latest/characters/{character_id}/wallet/transactions/`\n\
        \nAlternate route: `/legacy/characters/{character_id}/wallet/transactions/`\n\
        \nAlternate route: `/v1/characters/{character_id}/wallet/transactions/`\n\n\
        ---\nThis route is cached for up to 3600 seconds"
      operationId: "get_characters_character_id_wallet_transactions"
      parameters:
      - name: "character_id"
        in: "path"
        description: "An EVE character ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CharacterId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "from_id"
        in: "query"
        description: "Only show transactions happened before the one referenced by\
          \ this id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FromId"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Wallet transactions"
          schema:
            type: "array"
            description: "Wallet transactions"
            title: "get_characters_character_id_wallet_transactions_ok"
            items:
              $ref: "#/definitions/get_characters_character_id_wallet_transactions_200_ok"
            maxItems: 2500
          examples:
            application/json:
            - client_id: 54321
              date: "2016-10-24T09:00:00Z"
              is_buy: true
              is_personal: true
              journal_ref_id: 67890
              location_id: 60014719
              quantity: 1
              transaction_id: 1234567890
              type_id: 587
              unit_price: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-wallet.read_character_wallet.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 3600
  /corporations/npccorps/:
    get:
      tags:
      - "Corporation"
      summary: "Get npc corporations"
      description: "Get a list of npc corporations\n\n---\nAlternate route: `/dev/corporations/npccorps/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_corporations_npccorps"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of npc corporation ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_npccorps_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_corporations_npccorps_200_ok"
            maxItems: 500
          examples:
            application/json:
            - 1000001
            - 1000002
            - 1000003
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /corporations/{corporation_id}/alliancehistory/:
    get:
      tags:
      - "Corporation"
      summary: "Get alliance history"
      description: "Get a list of all the alliances a corporation has been a member\
        \ of\n\n---\nAlternate route: `/latest/corporations/{corporation_id}/alliancehistory/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_corporations_corporation_id_alliancehistory"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Alliance history for the given corporation"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_alliancehistory_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_alliancehistory_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - alliance_id: 99000006
              is_deleted: true
              record_id: 23
              start_date: "2016-10-25T14:46:00Z"
            - record_id: 1
              start_date: "2015-07-06T20:56:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
  /corporations/{corporation_id}/assets/locations/:
    post:
      tags:
      - "Assets"
      summary: "Get corporation asset locations"
      description: "Return locations for a set of item ids, which you can get from\
        \ corporation assets endpoint. Coordinates for items in hangars or stations\
        \ are set to (0,0,0)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/locations/`\n\
        \nAlternate route: `/latest/corporations/{corporation_id}/assets/locations/`\n\
        \n\n---\nRequires one of the following EVE corporation role(s): Director\n"
      operationId: "post_corporations_corporation_id_assets_locations"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - in: "body"
        name: "item_ids"
        description: "A list of item ids"
        required: true
        schema:
          title: "post_corporations_corporation_id_assets_locations_item_ids"
          type: "array"
          description: "item_ids array"
          items:
            type: "integer"
            format: "int64"
            description: "item_id integer"
            title: "post_corporations_corporation_id_assets_locations_item_id"
        x-exportParamName: "ItemIds"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of asset locations"
          schema:
            type: "array"
            description: "200 ok array"
            title: "post_corporations_corporation_id_assets_locations_ok"
            items:
              $ref: "#/definitions/post_corporations_corporation_id_assets_locations_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - item_id: 12345
              position:
                x: 1.2
                y: 2.3
                z: -3.4
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        404:
          description: "Invalid IDs"
          schema:
            $ref: "#/definitions/post_corporations_corporation_id_assets_locations_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-assets.read_corporation_assets.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/blueprints/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation blueprints"
      description: "Returns a list of blueprints the corporation owns\n\n---\nAlternate\
        \ route: `/latest/corporations/{corporation_id}/blueprints/`\n\n---\nThis\
        \ route is cached for up to 3600 seconds\n\n---\nRequires one of the following\
        \ EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_blueprints"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of corporation blueprints"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_blueprints_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_blueprints_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - item_id: 1000000010495
              location_flag: "CorpSAG1"
              location_id: 60014719
              material_efficiency: 0
              quantity: 1
              runs: -1
              time_efficiency: 0
              type_id: 691
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_blueprints.v1"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/contacts/:
    get:
      tags:
      - "Contacts"
      summary: "Get corporation contacts"
      description: "Return contacts of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contacts/`\n\
        \nAlternate route: `/latest/corporations/{corporation_id}/contacts/`\n\n---\n\
        This route is cached for up to 300 seconds"
      operationId: "get_corporations_corporation_id_contacts"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of contacts"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_contacts_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_contacts_200_ok"
            maxItems: 200
          examples:
            application/json:
            - contact_id: 123
              contact_type: "character"
              is_watched: true
              standing: 9.9
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_contacts.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 300
      x-required-roles: []
  /corporations/{corporation_id}/containers/logs/:
    get:
      tags:
      - "Corporation"
      summary: "Get all corporation ALSC logs"
      description: "Returns logs recorded in the past seven days from all audit log\
        \ secure containers (ALSC) owned by a given corporation\n\n---\nAlternate\
        \ route: `/latest/corporations/{corporation_id}/containers/logs/`\n\n---\n\
        This route is cached for up to 600 seconds\n\n---\nRequires one of the following\
        \ EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_containers_logs"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of corporation ALSC logs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_containers_logs_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_containers_logs_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - action: "set_password"
              character_id: 2112625428
              container_id: 1000000012279
              container_type_id: 17365
              location_flag: "CorpSAG1"
              location_id: 1000000012278
              logged_at: "2017-10-10T14:00:00Z"
              password_type: "general"
            - action: "lock"
              character_id: 2112625428
              container_id: 1000000012279
              container_type_id: 17365
              location_flag: "CorpSAG1"
              location_id: 1000000012278
              logged_at: "2017-10-11T12:04:33Z"
              quantity: 30
              type_id: 1230
            - action: "configure"
              character_id: 2112625428
              container_id: 1000000012279
              container_type_id: 17365
              location_flag: "CorpSAG2"
              location_id: 1000000012278
              logged_at: "2017-10-11T12:06:29Z"
              new_config_bitmask: 31
              old_config_bitmask: 23
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_container_logs.v1"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/divisions/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation divisions"
      description: "Return corporation hangar and wallet division names, only show\
        \ if a division is not using the default name\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/divisions/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_divisions"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of corporation division names"
          schema:
            $ref: "#/definitions/get_corporations_corporation_id_divisions_ok"
          examples:
            application/json:
              hangar:
              - division: 1
                name: "Awesome Hangar 1"
              wallet:
              - division: 1
                name: "Rich Wallet 1"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_divisions.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/facilities/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation facilities"
      description: "Return a corporation's facilities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/facilities/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Factory_Manager\n"
      operationId: "get_corporations_corporation_id_facilities"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of corporation facilities"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_facilities_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_facilities_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - facility_id: 123
              system_id: 45678
              type_id: 2502
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_facilities.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Factory_Manager"
  /corporations/{corporation_id}/fw/stats/:
    get:
      tags:
      - "Faction Warfare"
      summary: "Overview of a corporation involved in faction warfare"
      description: "Statistics about a corporation involved in faction warfare\n\n\
        ---\nAlternate route: `/dev/corporations/{corporation_id}/fw/stats/`\n\nAlternate\
        \ route: `/latest/corporations/{corporation_id}/fw/stats/`\n\nAlternate route:\
        \ `/legacy/corporations/{corporation_id}/fw/stats/`\n\nAlternate route: `/v1/corporations/{corporation_id}/fw/stats/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_corporations_corporation_id_fw_stats"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Faction warfare statistics for a given corporation"
          schema:
            $ref: "#/definitions/get_corporations_corporation_id_fw_stats_ok"
          examples:
            application/json:
              enlisted_on: "2017-10-17T00:00:00Z"
              faction_id: 500001
              kills:
                last_week: 893
                total: 684350
                yesterday: 136
              pilots: 28863
              victory_points:
                last_week: 102640
                total: 52658260
                yesterday: 15980
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_fw_stats.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /corporations/{corporation_id}/icons/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation icon"
      description: "Get the icon urls for a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/icons/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_corporations_corporation_id_icons"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Urls for icons for the given corporation id and server"
          schema:
            $ref: "#/definitions/get_corporations_corporation_id_icons_ok"
          examples:
            application/json:
              px128x128: "https://images.evetech.net/corporations/1000010/logo?tenant=tranquility&size=128"
              px256x256: "https://images.evetech.net/corporations/1000010/logo?tenant=tranquility&size=256"
              px64x64: "https://images.evetech.net/corporations/1000010/logo?tenant=tranquility&size=64"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "No image server for this datasource"
          schema:
            $ref: "#/definitions/get_corporations_corporation_id_icons_not_found"
          examples:
            application/json:
              error: "No image server for this datasource"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /corporations/{corporation_id}/medals/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation medals"
      description: "Returns a corporation's medals\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/medals/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_corporations_corporation_id_medals"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of medals"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_medals_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_medals_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - created_at: "2017-10-10T14:00:00Z"
              creator_id: 46578
              description: "An Awesome Medal"
              medal_id: 123
              title: "Awesome Medal"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_medals.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles: []
  /corporations/{corporation_id}/medals/issued/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation issued medals"
      description: "Returns medals issued by a corporation\n\n---\nAlternate route:\
        \ `/dev/corporations/{corporation_id}/medals/issued/`\n\n---\nThis route is\
        \ cached for up to 3600 seconds\n\n---\nRequires one of the following EVE\
        \ corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_medals_issued"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of issued medals"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_medals_issued_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_medals_issued_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - character_id: 45678
              issued_at: "2017-10-10T14:00:00Z"
              issuer_id: 67890
              medal_id: 123
              reason: "Awesome Reason"
              status: "private"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_medals.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/members/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation members"
      description: "Read the current list of members if the calling character is a\
        \ member.\n\n---\nAlternate route: `/legacy/corporations/{corporation_id}/members/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nWarning: This route\
        \ is deprecated\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/corporations/{corporation_id}/members/)"
      operationId: "get_corporations_corporation_id_members"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of member character IDs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_members_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_members_200_ok"
            maxItems: 12601
          examples:
            application/json:
            - character_id: 90000001
            - character_id: 90000002
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_corporation_membership.v1"
      deprecated: true
      x-alternate-versions:
      - "legacy"
      x-cached-seconds: 3600
  /corporations/{corporation_id}/members/limit/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation member limit"
      description: "Return a corporation's member limit, not including CEO himself\n\
        \n---\nAlternate route: `/dev/corporations/{corporation_id}/members/limit/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_members_limit"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "The corporation's member limit"
          schema:
            type: "integer"
            format: "int32"
            description: "200 ok integer"
            title: "get_corporations_corporation_id_members_limit_ok"
          examples:
            application/json: 40
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.track_members.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/members/titles/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation's members' titles"
      description: "Returns a corporation's members' titles\n\n---\nAlternate route:\
        \ `/dev/corporations/{corporation_id}/members/titles/`\n\n---\nThis route\
        \ is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE\
        \ corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_members_titles"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of members and theirs titles"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_members_titles_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_members_titles_200_ok"
            maxItems: 12601
          examples:
            application/json:
            - character_id: 12345
              titles: []
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_titles.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/membertracking/:
    get:
      tags:
      - "Corporation"
      summary: "Track corporation members"
      description: "Returns additional information about a corporation's members which\
        \ helps tracking their activities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/membertracking/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_membertracking"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of member character IDs"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_membertracking_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_membertracking_200_ok"
            maxItems: 12601
          examples:
            application/json:
            - character_id: 2112000001
              location_id: 30003657
              logoff_date: "2017-08-03T14:31:16Z"
              logon_date: "2017-08-03T14:22:03Z"
              ship_type_id: 22464
              start_date: "2017-07-10T14:46:00Z"
            - character_id: 2112000002
              location_id: 30003657
              logoff_date: "2017-07-25T11:07:40Z"
              logon_date: "2017-07-25T10:54:00Z"
              ship_type_id: 670
              start_date: "2017-07-10T14:50:00Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.track_members.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/orders/:
    get:
      tags:
      - "Market"
      summary: "List open orders from a corporation"
      description: "List open market orders placed on behalf of a corporation\n\n\
        ---\nAlternate route: `/legacy/corporations/{corporation_id}/orders/`\n\n\
        ---\nThis route is cached for up to 1200 seconds\n\n---\nRequires one of the\
        \ following EVE corporation role(s): Accountant, Trader\n\n\n---\nWarning:\
        \ This route is deprecated\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/corporations/{corporation_id}/orders/)"
      operationId: "get_corporations_corporation_id_orders"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of open market orders"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_orders_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_orders_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - duration: 30
              escrow: 45.6
              is_buy_order: true
              issued: "2016-09-03T05:12:25Z"
              location_id: 456
              min_volume: 1
              order_id: 123
              price: 33.3
              range: "station"
              region_id: 123
              type_id: 456
              volume_remain: 4422
              volume_total: 123456
              wallet_division: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-markets.read_corporation_orders.v1"
      deprecated: true
      x-alternate-versions:
      - "legacy"
      x-cached-seconds: 1200
      x-required-roles:
      - "Accountant"
      - "Trader"
  /corporations/{corporation_id}/orders/history/:
    get:
      tags:
      - "Market"
      summary: "List historical orders from a corporation"
      description: "List cancelled and expired market orders placed on behalf of a\
        \ corporation up to 90 days in the past.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/orders/history/`\n\
        \nAlternate route: `/latest/corporations/{corporation_id}/orders/history/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Accountant, Trader\n"
      operationId: "get_corporations_corporation_id_orders_history"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Expired and cancelled market orders placed on behalf of a\
            \ corporation"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_orders_history_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_orders_history_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - duration: 30
              escrow: 45.6
              is_buy_order: true
              issued: "2016-09-03T05:12:25Z"
              issued_by: 2112625428
              location_id: 456
              min_volume: 1
              order_id: 123
              price: 33.3
              range: "station"
              region_id: 123
              state: "expired"
              type_id: 456
              volume_remain: 4422
              volume_total: 123456
              wallet_division: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-markets.read_corporation_orders.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      x-cached-seconds: 3600
      x-required-roles:
      - "Accountant"
      - "Trader"
  /corporations/{corporation_id}/roles/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation member roles"
      description: "Return the roles of all members if the character has the personnel\
        \ manager role or any grantable role.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_corporations_corporation_id_roles"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of member character ID's and roles"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_roles_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_roles_200_ok"
            maxItems: 12601
          examples:
            application/json:
            - character_id: 1000171
              roles:
              - "Director"
              - "Station_Manager"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_corporation_membership.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /corporations/{corporation_id}/roles/history/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation member roles history"
      description: "Return how roles have changed for a coporation's members, up to\
        \ a month\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/history/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_roles_history"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of role changes"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_roles_history_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_roles_history_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - changed_at: "2016-10-25T14:46:00Z"
              character_id: 12345
              issuer_id: 45678
              new_roles:
              - "Station_Manager"
              old_roles:
              - "Diplomat"
              role_type: "roles"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_corporation_membership.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/standings/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation standings"
      description: "Return corporation standings from agents, NPC corporations, and\
        \ factions\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/standings/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_corporations_corporation_id_standings"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of standings"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_standings_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_standings_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - from_id: 3009841
              from_type: "agent"
              standing: 0.1
            - from_id: 1000061
              from_type: "npc_corp"
              standing: 0
            - from_id: 500003
              from_type: "faction"
              standing: -1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_standings.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles: []
  /corporations/{corporation_id}/starbases/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation starbases (POSes)"
      description: "Returns list of corporation starbases (POSes)\n\n---\nAlternate\
        \ route: `/dev/corporations/{corporation_id}/starbases/`\n\n---\nThis route\
        \ is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE\
        \ corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_starbases"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of starbases (POSes)"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_starbases_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_starbases_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - starbase_id: 12345
              system_id: 123456
              type_id: 456
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_starbases.v2"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/starbases/{starbase_id}/:
    get:
      tags:
      - "Corporation"
      summary: "Get starbase (POS) detail"
      description: "Returns various settings and fuels of a starbase (POS)\n\n---\n\
        Alternate route: `/dev/corporations/{corporation_id}/starbases/{starbase_id}/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_starbases_starbase_id"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "starbase_id"
        in: "path"
        description: "An EVE starbase (POS) ID"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StarbaseId"
      - name: "system_id"
        in: "query"
        description: "The solar system this starbase (POS) is located in,"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SystemId"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of starbases (POSes)"
          schema:
            $ref: "#/definitions/get_corporations_corporation_id_starbases_starbase_id_ok"
          examples:
            application/json:
              allow_alliance_members: false
              allow_corporation_members: true
              anchor: "config_starbase_equipment_role"
              attack_if_at_war: true
              attack_if_other_security_status_dropping: false
              fuel_bay_take: "config_starbase_equipment_role"
              fuel_bay_view: "config_starbase_equipment_role"
              offline: "config_starbase_equipment_role"
              online: "config_starbase_equipment_role"
              unanchor: "config_starbase_equipment_role"
              use_alliance_standings: false
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_starbases.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/structures/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation structures"
      description: "Get a list of corporation structures. This route's version includes\
        \ the changes to structures detailed in this blog: https://www.eveonline.com/article/upwell-2.0-structures-changes-coming-on-february-13th\
        \ Note: this route will not return any flex structures owned by a corporation,\
        \ use the v3 route to have those included in the response. A list of FLEX\
        \ structures can be found here: https://support.eveonline.com/hc/en-us/articles/213021829-Upwell-Structures\n\
        \n---\nAlternate route: `/legacy/corporations/{corporation_id}/structures/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Station_Manager\n\n\n---\nWarning:\
        \ This route is deprecated\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/corporations/{corporation_id}/structures/)"
      operationId: "get_corporations_corporation_id_structures"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "List of corporation structures' information"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_structures_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_structures_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - corporation_id: 667531913
              profile_id: 11237
              reinforce_hour: 22
              reinforce_weekday: 2
              state: "shield_vulnerable"
              structure_id: 1021975535893
              system_id: 30004763
              type_id: 35833
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_structures.v1"
      deprecated: true
      x-alternate-versions:
      - "legacy"
      x-cached-seconds: 3600
      x-required-roles:
      - "Station_Manager"
  /corporations/{corporation_id}/titles/:
    get:
      tags:
      - "Corporation"
      summary: "Get corporation titles"
      description: "Returns a corporation's titles\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/titles/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Director\n"
      operationId: "get_corporations_corporation_id_titles"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "A list of titles"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_corporations_corporation_id_titles_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_titles_200_ok"
            maxItems: 16
          examples:
            application/json:
            - name: "Awesome Title"
              roles:
              - "Hangar_Take_6"
              - "Hangar_Query_2"
              title_id: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-corporations.read_titles.v1"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
      x-required-roles:
      - "Director"
  /corporations/{corporation_id}/wallets/{division}/transactions/:
    get:
      tags:
      - "Wallet"
      summary: "Get corporation wallet transactions"
      description: "Get wallet transactions of a corporation going 30 days back\n\n\
        ---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{division}/transactions/`\n\
        \nAlternate route: `/latest/corporations/{corporation_id}/wallets/{division}/transactions/`\n\
        \nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/transactions/`\n\
        \nAlternate route: `/v1/corporations/{corporation_id}/wallets/{division}/transactions/`\n\
        \n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of\
        \ the following EVE corporation role(s): Accountant, Junior_Accountant\n"
      operationId: "get_corporations_corporation_id_wallets_division_transactions"
      parameters:
      - name: "corporation_id"
        in: "path"
        description: "An EVE corporation ID"
        required: true
        type: "integer"
        minimum: 1
        format: "int32"
        x-exportParamName: "CorporationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "division"
        in: "path"
        description: "Wallet key of the division to fetch journals from"
        required: true
        type: "integer"
        maximum: 7
        minimum: 1
        format: "int32"
        x-exportParamName: "Division"
      - name: "from_id"
        in: "query"
        description: "Only show journal entries happened before the transaction referenced\
          \ by this id"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "FromId"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Wallet transactions"
          schema:
            type: "array"
            description: "Wallet transactions"
            title: "get_corporations_corporation_id_wallets_division_transactions_ok"
            items:
              $ref: "#/definitions/get_corporations_corporation_id_wallets_division_transactions_200_ok"
            maxItems: 2500
          examples:
            application/json:
            - client_id: 54321
              date: "2016-10-24T09:00:00Z"
              is_buy: true
              journal_ref_id: 67890
              location_id: 60014719
              quantity: 1
              transaction_id: 1234567890
              type_id: 587
              unit_price: 1
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-wallet.read_corporation_wallets.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 3600
      x-required-roles:
      - "Accountant"
      - "Junior_Accountant"
  /dogma/effects/{effect_id}/:
    get:
      tags:
      - "Dogma"
      summary: "Get effect information"
      description: "Get information on a dogma effect\n\n---\nAlternate route: `/dev/dogma/effects/{effect_id}/`\n\
        \nAlternate route: `/latest/dogma/effects/{effect_id}/`\n\n---\nThis route\
        \ expires daily at 11:05"
      operationId: "get_dogma_effects_effect_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "effect_id"
        in: "path"
        description: "A dogma effect ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EffectId"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Information about a dogma effect"
          schema:
            $ref: "#/definitions/get_dogma_effects_effect_id_ok"
          examples:
            application/json:
              description: "Requires a high power slot."
              display_name: "High power"
              effect_category: 0
              effect_id: 12
              icon_id: 293
              name: "hiPower"
              post_expression: 131
              pre_expression: 131
              published: true
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Dogma effect not found"
          schema:
            $ref: "#/definitions/get_dogma_effects_effect_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
  /fw/leaderboards/:
    get:
      tags:
      - "Faction Warfare"
      summary: "List of the top factions in faction warfare"
      description: "Top 4 leaderboard of factions for kills and victory points separated\
        \ by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/`\n\
        \nAlternate route: `/latest/fw/leaderboards/`\n\nAlternate route: `/legacy/fw/leaderboards/`\n\
        \nAlternate route: `/v1/fw/leaderboards/`\n\n---\nThis route expires daily\
        \ at 11:05"
      operationId: "get_fw_leaderboards"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Corporation leaderboard of kills and victory points within\
            \ faction warfare"
          schema:
            $ref: "#/definitions/get_fw_leaderboards_ok"
          examples:
            application/json:
              kills:
                active_total:
                - amount: 832273
                  faction_id: 500004
                - amount: 687915
                  faction_id: 500001
                last_week:
                - amount: 730
                  faction_id: 500001
                - amount: 671
                  faction_id: 500004
                yesterday:
                - amount: 100
                  faction_id: 500001
                - amount: 50
                  faction_id: 500004
              victory_points:
                active_total:
                - amount: 53130500
                  faction_id: 500001
                - amount: 50964263
                  faction_id: 500004
                last_week:
                - amount: 97360
                  faction_id: 500001
                - amount: 84980
                  faction_id: 500004
                yesterday:
                - amount: 5000
                  faction_id: 500002
                - amount: 3500
                  faction_id: 500003
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /fw/leaderboards/characters/:
    get:
      tags:
      - "Faction Warfare"
      summary: "List of the top pilots in faction warfare"
      description: "Top 100 leaderboard of pilots for kills and victory points separated\
        \ by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/characters/`\n\
        \nAlternate route: `/latest/fw/leaderboards/characters/`\n\nAlternate route:\
        \ `/legacy/fw/leaderboards/characters/`\n\nAlternate route: `/v1/fw/leaderboards/characters/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_fw_leaderboards_characters"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Character leaderboard of kills and victory points within faction\
            \ warfare"
          schema:
            $ref: "#/definitions/get_fw_leaderboards_characters_ok"
          examples:
            application/json:
              kills:
                active_total:
                - amount: 10000
                  character_id: 2112625428
                - amount: 8500
                  character_id: 95465499
                last_week:
                - amount: 100
                  character_id: 2112625428
                - amount: 70
                  character_id: 95465499
                yesterday:
                - amount: 34
                  character_id: 2112625428
                - amount: 20
                  character_id: 95465499
              victory_points:
                active_total:
                - amount: 1239158
                  character_id: 2112625428
                - amount: 1139029
                  character_id: 95465499
                last_week:
                - amount: 2660
                  character_id: 2112625428
                - amount: 2000
                  character_id: 95465499
                yesterday:
                - amount: 620
                  character_id: 2112625428
                - amount: 550
                  character_id: 95465499
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /fw/leaderboards/corporations/:
    get:
      tags:
      - "Faction Warfare"
      summary: "List of the top corporations in faction warfare"
      description: "Top 10 leaderboard of corporations for kills and victory points\
        \ separated by total, last week and yesterday\n\n---\nAlternate route: `/dev/fw/leaderboards/corporations/`\n\
        \nAlternate route: `/latest/fw/leaderboards/corporations/`\n\nAlternate route:\
        \ `/legacy/fw/leaderboards/corporations/`\n\nAlternate route: `/v1/fw/leaderboards/corporations/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_fw_leaderboards_corporations"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Corporation leaderboard of kills and victory points within\
            \ faction warfare"
          schema:
            $ref: "#/definitions/get_fw_leaderboards_corporations_ok"
          examples:
            application/json:
              kills:
                active_total:
                - amount: 81692
                  corporation_id: 1000180
                - amount: 76793
                  corporation_id: 1000182
                last_week:
                - amount: 290
                  corporation_id: 1000180
                - amount: 169
                  corporation_id: 1000182
                yesterday:
                - amount: 51
                  corporation_id: 1000180
                - amount: 39
                  corporation_id: 1000182
              victory_points:
                active_total:
                - amount: 18640927
                  corporation_id: 1000180
                - amount: 18078265
                  corporation_id: 1000181
                last_week:
                - amount: 91980
                  corporation_id: 1000180
                - amount: 58920
                  corporation_id: 1000181
                yesterday:
                - amount: 12600
                  corporation_id: 1000180
                - amount: 8240
                  corporation_id: 1000181
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /fw/stats/:
    get:
      tags:
      - "Faction Warfare"
      summary: "An overview of statistics about factions involved in faction warfare"
      description: "Statistical overviews of factions involved in faction warfare\n\
        \n---\nAlternate route: `/dev/fw/stats/`\n\nAlternate route: `/latest/fw/stats/`\n\
        \nAlternate route: `/legacy/fw/stats/`\n\nAlternate route: `/v1/fw/stats/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_fw_stats"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Per faction breakdown of faction warfare statistics"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_fw_stats_ok"
            items:
              $ref: "#/definitions/get_fw_stats_200_ok"
            maxItems: 4
          examples:
            application/json:
            - faction_id: 500001
              kills:
                last_week: 893
                total: 684350
                yesterday: 136
              pilots: 28863
              systems_controlled: 20
              victory_points:
                last_week: 102640
                total: 52658260
                yesterday: 15980
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /fw/systems/:
    get:
      tags:
      - "Faction Warfare"
      summary: "Ownership of faction warfare systems"
      description: "An overview of the current ownership of faction warfare solar\
        \ systems\n\n---\nAlternate route: `/dev/fw/systems/`\n\nAlternate route:\
        \ `/latest/fw/systems/`\n\nAlternate route: `/legacy/fw/systems/`\n\nAlternate\
        \ route: `/v3/fw/systems/`\n\n---\nThis route is cached for up to 1800 seconds"
      operationId: "get_fw_systems"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "All faction warfare solar systems"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_fw_systems_ok"
            items:
              $ref: "#/definitions/get_fw_systems_200_ok"
            maxItems: 171
          examples:
            application/json:
            - contested: "uncontested"
              occupier_faction_id: 500001
              owner_faction_id: 500001
              solar_system_id: 30002096
              victory_points: 60
              victory_points_threshold: 3000
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v3"
      x-cached-seconds: 1800
  /fw/wars/:
    get:
      tags:
      - "Faction Warfare"
      summary: "Data about which NPC factions are at war"
      description: "Data about which NPC factions are at war\n\n---\nAlternate route:\
        \ `/dev/fw/wars/`\n\nAlternate route: `/latest/fw/wars/`\n\nAlternate route:\
        \ `/legacy/fw/wars/`\n\nAlternate route: `/v1/fw/wars/`\n\n---\nThis route\
        \ expires daily at 11:05"
      operationId: "get_fw_wars"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of NPC factions at war"
          schema:
            type: "array"
            description: "List of factions at war"
            title: "get_fw_wars_ok"
            items:
              $ref: "#/definitions/get_fw_wars_200_ok"
            maxItems: 8
          examples:
            application/json:
            - against_id: 500002
              faction_id: 500001
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
  /search/:
    get:
      tags:
      - "Search"
      summary: "Search on a string"
      description: "Search for entities that match a given sub-string.\n\n---\nAlternate\
        \ route: `/dev/search/`\n\nAlternate route: `/latest/search/`\n\nAlternate\
        \ route: `/legacy/search/`\n\n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_search"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "categories"
        in: "query"
        description: "Type of entities to search for"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "agent"
          - "alliance"
          - "character"
          - "constellation"
          - "corporation"
          - "faction"
          - "inventory_type"
          - "region"
          - "solar_system"
          - "station"
        maxItems: 10
        minItems: 1
        uniqueItems: true
        x-exportParamName: "Categories"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      - name: "search"
        in: "query"
        description: "The string to search on"
        required: true
        type: "string"
        minLength: 3
        x-exportParamName: "Search"
      - name: "strict"
        in: "query"
        description: "Whether the search should be a strict match"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Strict"
      responses:
        200:
          description: "A list of search results"
          schema:
            $ref: "#/definitions/get_search_ok"
          examples:
            application/json:
              solar_system:
              - 30002510
              station:
              - 60004588
              - 60004594
              - 60005725
              - 60009106
              - 60012721
              - 60012724
              - 60012727
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      x-cached-seconds: 3600
  /status/:
    get:
      tags:
      - "Status"
      summary: "Retrieve the uptime and player counts"
      description: "EVE Server status\n\n---\nAlternate route: `/dev/status/`\n\n\
        Alternate route: `/latest/status/`\n\nAlternate route: `/legacy/status/`\n\
        \nAlternate route: `/v1/status/`\n\n---\nThis route is cached for up to 30\
        \ seconds"
      operationId: "get_status"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Server status"
          schema:
            $ref: "#/definitions/get_status_ok"
          examples:
            application/json:
              players: 12345
              server_version: "1132976"
              start_time: "2017-01-02T12:34:56Z"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
      - "v1"
      x-cached-seconds: 30
  /ui/autopilot/waypoint/:
    post:
      tags:
      - "User Interface"
      summary: "Set Autopilot Waypoint"
      description: "Set a solar system as autopilot waypoint\n\n---\nAlternate route:\
        \ `/dev/ui/autopilot/waypoint/`\n\nAlternate route: `/latest/ui/autopilot/waypoint/`\n\
        \nAlternate route: `/legacy/ui/autopilot/waypoint/`\n"
      operationId: "post_ui_autopilot_waypoint"
      parameters:
      - name: "add_to_beginning"
        in: "query"
        description: "Whether this solar system should be added to the beginning of\
          \ all waypoints"
        required: true
        type: "boolean"
        default: false
        x-exportParamName: "AddToBeginning"
      - name: "clear_other_waypoints"
        in: "query"
        description: "Whether clean other waypoints beforing adding this one"
        required: true
        type: "boolean"
        default: false
        x-exportParamName: "ClearOtherWaypoints"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "destination_id"
        in: "query"
        description: "The destination to travel to, can be solar system, station or\
          \ structure's id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DestinationId"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        204:
          description: "Open window request received"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-ui.write_waypoint.v1"
      x-alternate-versions:
      - "dev"
      - "latest"
      - "legacy"
  /universe/ancestries/:
    get:
      tags:
      - "Universe"
      summary: "Get ancestries"
      description: "Get all character ancestries\n\n---\nAlternate route: `/dev/universe/ancestries/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_ancestries"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      responses:
        200:
          description: "A list of ancestries"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_ancestries_ok"
            items:
              $ref: "#/definitions/get_universe_ancestries_200_ok"
            maxItems: 100
          examples:
            application/json:
            - bloodline_id: 1
              description: "Acutely aware of the small population..."
              id: 12
              name: "Tube Child"
              short_description: "Manufactured citizens of the State."
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/asteroid_belts/{asteroid_belt_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get asteroid belt information"
      description: "Get information on an asteroid belt\n\n---\nAlternate route: `/dev/universe/asteroid_belts/{asteroid_belt_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_asteroid_belts_asteroid_belt_id"
      parameters:
      - name: "asteroid_belt_id"
        in: "path"
        description: "asteroid_belt_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AsteroidBeltId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "Information about an asteroid belt"
          schema:
            $ref: "#/definitions/get_universe_asteroid_belts_asteroid_belt_id_ok"
          examples:
            application/json:
              name: "Tanoo I - Asteroid Belt 1"
              position:
                x: 161967513600
                y: 21288837120
                z: -73505464320
              system_id: 30000001
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Asteroid belt not found"
          schema:
            $ref: "#/definitions/get_universe_asteroid_belts_asteroid_belt_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/bloodlines/:
    get:
      tags:
      - "Universe"
      summary: "Get bloodlines"
      description: "Get a list of bloodlines\n\n---\nAlternate route: `/dev/universe/bloodlines/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_bloodlines"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      responses:
        200:
          description: "A list of bloodlines"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_bloodlines_ok"
            items:
              $ref: "#/definitions/get_universe_bloodlines_200_ok"
            maxItems: 100
          examples:
            application/json:
            - bloodline_id: 1
              charisma: 6
              corporation_id: 1000006
              description: "The Deteis are regarded as ..."
              intelligence: 7
              memory: 7
              name: "Deteis"
              perception: 5
              race_id: 1
              ship_type_id: 601
              willpower: 5
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/categories/:
    get:
      tags:
      - "Universe"
      summary: "Get item categories"
      description: "Get a list of item categories\n\n---\nAlternate route: `/dev/universe/categories/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_categories"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of item category ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_categories_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_categories_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - 1
            - 2
            - 3
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/categories/{category_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get item category information"
      description: "Get information of an item category\n\n---\nAlternate route: `/dev/universe/categories/{category_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_categories_category_id"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "category_id"
        in: "path"
        description: "An Eve item category ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CategoryId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      responses:
        200:
          description: "Information about an item category"
          schema:
            $ref: "#/definitions/get_universe_categories_category_id_ok"
          examples:
            application/json:
              category_id: 6
              groups:
              - 25
              - 26
              - 27
              name: "Ship"
              published: true
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Category not found"
          schema:
            $ref: "#/definitions/get_universe_categories_category_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/constellations/:
    get:
      tags:
      - "Universe"
      summary: "Get constellations"
      description: "Get a list of constellations\n\n---\nAlternate route: `/dev/universe/constellations/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_constellations"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of constellation ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_constellations_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_constellations_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - 20000001
            - 20000002
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/constellations/{constellation_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get constellation information"
      description: "Get information on a constellation\n\n---\nAlternate route: `/dev/universe/constellations/{constellation_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_constellations_constellation_id"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "constellation_id"
        in: "path"
        description: "constellation_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ConstellationId"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      responses:
        200:
          description: "Information about a constellation"
          schema:
            $ref: "#/definitions/get_universe_constellations_constellation_id_ok"
          examples:
            application/json:
              constellation_id: 20000009
              name: "Mekashtad"
              position:
                x: 67796138757472320
                y: -70591121348560960
                z: -59587016159270070
              region_id: 10000001
              systems:
              - 20000302
              - 20000303
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Constellation not found"
          schema:
            $ref: "#/definitions/get_universe_constellations_constellation_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/factions/:
    get:
      tags:
      - "Universe"
      summary: "Get factions"
      description: "Get a list of factions\n\n---\nAlternate route: `/dev/universe/factions/`\n\
        \nAlternate route: `/latest/universe/factions/`\n\n---\nThis route expires\
        \ daily at 11:05"
      operationId: "get_universe_factions"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      responses:
        200:
          description: "A list of factions"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_factions_ok"
            items:
              $ref: "#/definitions/get_universe_factions_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - corporation_id: 456
              description: "blah blah"
              faction_id: 1
              is_unique: true
              name: "Faction"
              size_factor: 1.0
              solar_system_id: 123
              station_count: 1000
              station_system_count: 100
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
  /universe/graphics/:
    get:
      tags:
      - "Universe"
      summary: "Get graphics"
      description: "Get a list of graphics\n\n---\nAlternate route: `/dev/universe/graphics/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_graphics"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of graphic ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_graphics_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_graphics_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - 10
            - 4106
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/groups/:
    get:
      tags:
      - "Universe"
      summary: "Get item groups"
      description: "Get a list of item groups\n\n---\nAlternate route: `/dev/universe/groups/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_groups"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      responses:
        200:
          description: "A list of item group ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_groups_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_groups_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - 1
            - 2
            - 3
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/moons/{moon_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get moon information"
      description: "Get information on a moon\n\n---\nAlternate route: `/dev/universe/moons/{moon_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_moons_moon_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "moon_id"
        in: "path"
        description: "moon_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MoonId"
      responses:
        200:
          description: "Information about a moon"
          schema:
            $ref: "#/definitions/get_universe_moons_moon_id_ok"
          examples:
            application/json:
              moon_id: 40000042
              name: "Akpivem I - Moon 1"
              position:
                x: 58605102008
                y: -3066616285
                z: -55193617920
              system_id: 30000003
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Moon not found"
          schema:
            $ref: "#/definitions/get_universe_moons_moon_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/names/:
    post:
      tags:
      - "Universe"
      summary: "Get names and categories for a set of IDs"
      description: "Resolve a set of IDs to names and categories. Supported ID's for\
        \ resolving are: Characters, Corporations, Alliances, Stations, Solar Systems,\
        \ Constellations, Regions, Types\n\n---\nAlternate route: `/legacy/universe/names/`\n\
        \n\n---\nWarning: This route is deprecated\n\n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#POST-/universe/names/)"
      operationId: "post_universe_names"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - in: "body"
        name: "ids"
        description: "The ids to resolve"
        required: true
        schema:
          title: "post_universe_names_ids"
          type: "array"
          description: "ids array"
          items:
            type: "integer"
            format: "int32"
            description: "id integer"
            title: "post_universe_names_id"
          example: "[95465499,30000142]"
        x-exportParamName: "Ids"
      responses:
        200:
          description: "List of id/name associations for a set of IDs. All IDs must\
            \ resolve to a name, or nothing will be returned"
          schema:
            type: "array"
            description: "200 ok array"
            title: "post_universe_names_ok"
            items:
              $ref: "#/definitions/post_universe_names_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - category: "character"
              id: 95465499
              name: "CCP Bartender"
            - category: "solar_system"
              id: 30000142
              name: "Jita"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Ensure all IDs are valid before resolving"
          schema:
            $ref: "#/definitions/post_universe_names_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      deprecated: true
      x-alternate-versions:
      - "legacy"
  /universe/planets/{planet_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get planet information"
      description: "Get information on a planet\n\n---\nAlternate route: `/dev/universe/planets/{planet_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_planets_planet_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "planet_id"
        in: "path"
        description: "planet_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PlanetId"
      responses:
        200:
          description: "Information about a planet"
          schema:
            $ref: "#/definitions/get_universe_planets_planet_id_ok"
          examples:
            application/json:
              name: "Akpivem III"
              planet_id: 40000046
              position:
                x: -189226344497
                y: 9901605317
                z: -254852632979
              system_id: 30000003
              type_id: 13
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Planet not found"
          schema:
            $ref: "#/definitions/get_universe_planets_planet_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/regions/:
    get:
      tags:
      - "Universe"
      summary: "Get regions"
      description: "Get a list of regions\n\n---\nAlternate route: `/dev/universe/regions/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_regions"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of region ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_regions_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_regions_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - 11000001
            - 11000002
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/regions/{region_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get region information"
      description: "Get information on a region\n\n---\nAlternate route: `/dev/universe/regions/{region_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_regions_region_id"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      - name: "region_id"
        in: "path"
        description: "region_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RegionId"
      responses:
        200:
          description: "Information about a region"
          schema:
            $ref: "#/definitions/get_universe_regions_region_id_ok"
          examples:
            application/json:
              constellations:
              - 20000302
              - 20000303
              description: "It has long been an established fact of civilization..."
              name: "Metropolis"
              region_id: 10000042
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Region not found"
          schema:
            $ref: "#/definitions/get_universe_regions_region_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/stargates/{stargate_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get stargate information"
      description: "Get information on a stargate\n\n---\nAlternate route: `/dev/universe/stargates/{stargate_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_stargates_stargate_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "stargate_id"
        in: "path"
        description: "stargate_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "StargateId"
      responses:
        200:
          description: "Information about a stargate"
          schema:
            $ref: "#/definitions/get_universe_stargates_stargate_id_ok"
          examples:
            application/json:
              destination:
                stargate_id: 50000056
                system_id: 30000001
              name: "Stargate (Tanoo)"
              position:
                x: -101092761600
                y: 5279539200
                z: 1550503403520
              stargate_id: 50000342
              system_id: 30000003
              type_id: 29624
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Stargate not found"
          schema:
            $ref: "#/definitions/get_universe_stargates_stargate_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/stars/{star_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get star information"
      description: "Get information on a star\n\n---\nAlternate route: `/dev/universe/stars/{star_id}/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_stars_star_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "star_id"
        in: "path"
        description: "star_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "StarId"
      responses:
        200:
          description: "Information about a star"
          schema:
            $ref: "#/definitions/get_universe_stars_star_id_ok"
          examples:
            application/json:
              age: 9398686722
              luminosity: 0.06615000218153
              name: "BKG-Q2 - Star"
              radius: 346600000
              solar_system_id: 30004333
              spectral_class: "K2 V"
              temperature: 3953
              type_id: 45033
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/stations/{station_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get station information"
      description: "Get information on a station\n\n---\nAlternate route: `/dev/universe/stations/{station_id}/`\n\
        \nAlternate route: `/latest/universe/stations/{station_id}/`\n\n---\nThis\
        \ route expires daily at 11:05"
      operationId: "get_universe_stations_station_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "station_id"
        in: "path"
        description: "station_id integer"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "StationId"
      responses:
        200:
          description: "Information about a station"
          schema:
            $ref: "#/definitions/get_universe_stations_station_id_ok"
          examples:
            application/json:
              max_dockable_ship_volume: 50000000
              name: "Jakanerva III - Moon 15 - Prompt Delivery Storage"
              office_rental_cost: 10000
              owner: 1000003
              position:
                x: 165632286720
                y: 2771804160
                z: -2455331266560
              race_id: 1
              reprocessing_efficiency: 0.5
              reprocessing_stations_take: 0.05
              services:
              - "courier-missions"
              - "reprocessing-plant"
              - "market"
              - "repair-facilities"
              - "fitting"
              - "news"
              - "storage"
              - "insurance"
              - "docking"
              - "office-rental"
              - "loyalty-point-store"
              - "navy-offices"
              station_id: 60000277
              system_id: 30000148
              type_id: 1531
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Station not found"
          schema:
            $ref: "#/definitions/get_universe_stations_station_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      - "latest"
  /universe/structures/{structure_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get structure information"
      description: "Returns information on requested structure if you are on the ACL.\
        \ Otherwise, returns \"Forbidden\" for all inputs.\n\n---\nAlternate route:\
        \ `/latest/universe/structures/{structure_id}/`\n\n---\nThis route is cached\
        \ for up to 3600 seconds"
      operationId: "get_universe_structures_structure_id"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "structure_id"
        in: "path"
        description: "An Eve structure ID"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StructureId"
      - name: "token"
        in: "query"
        description: "Access token to use if unable to set a header"
        required: false
        type: "string"
        x-exportParamName: "Token"
      responses:
        200:
          description: "Data about a structure"
          schema:
            $ref: "#/definitions/get_universe_structures_structure_id_ok"
          examples:
            application/json:
              name: "V-3YG7 VI - The Capital"
              owner_id: 109299958
              solar_system_id: 30000142
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/unauthorized"
          examples:
            application/json:
              error: "Unauthorized message"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/forbidden"
          examples:
            application/json:
              error: "Forbidden message"
        404:
          description: "Structure not found"
          schema:
            $ref: "#/definitions/get_universe_structures_structure_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      security:
      - evesso:
        - "esi-universe.read_structures.v1"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
  /universe/system_jumps/:
    get:
      tags:
      - "Universe"
      summary: "Get system jumps"
      description: "Get the number of jumps in solar systems within the last hour\
        \ ending at the timestamp of the Last-Modified header, excluding wormhole\
        \ space. Only systems with jumps will be listed\n\n---\nAlternate route: `/dev/universe/system_jumps/`\n\
        \n---\nThis route is cached for up to 3600 seconds"
      operationId: "get_universe_system_jumps"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of systems and number of jumps"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_system_jumps_ok"
            items:
              $ref: "#/definitions/get_universe_system_jumps_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - ship_jumps: 42
              system_id: 30002410
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
      x-cached-seconds: 3600
  /universe/system_kills/:
    get:
      tags:
      - "Universe"
      summary: "Get system kills"
      description: "Get the number of ship, pod and NPC kills per solar system within\
        \ the last hour ending at the timestamp of the Last-Modified header, excluding\
        \ wormhole space. Only systems with kills will be listed\n\n---\nAlternate\
        \ route: `/latest/universe/system_kills/`\n\n---\nThis route is cached for\
        \ up to 3600 seconds"
      operationId: "get_universe_system_kills"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      responses:
        200:
          description: "A list of systems and number of ship, pod and NPC kills"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_system_kills_ok"
            items:
              $ref: "#/definitions/get_universe_system_kills_200_ok"
            maxItems: 10000
          examples:
            application/json:
            - npc_kills: 0
              pod_kills: 24
              ship_kills: 42
              system_id: 30002410
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "latest"
      x-cached-seconds: 3600
  /universe/types/:
    get:
      tags:
      - "Universe"
      summary: "Get types"
      description: "Get a list of type ids\n\n---\nAlternate route: `/dev/universe/types/`\n\
        \n---\nThis route expires daily at 11:05"
      operationId: "get_universe_types"
      parameters:
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "page"
        in: "query"
        description: "Which page of results to return"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "Page"
      responses:
        200:
          description: "A list of type ids"
          schema:
            type: "array"
            description: "200 ok array"
            title: "get_universe_types_ok"
            items:
              type: "integer"
              format: "int32"
              description: "200 ok integer"
              title: "get_universe_types_200_ok"
            maxItems: 1000
          examples:
            application/json:
            - 1
            - 2
            - 3
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
            X-Pages:
              type: "integer"
              format: "int32"
              description: "Maximum page number"
              default: 1
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      x-alternate-versions:
      - "dev"
  /universe/types/{type_id}/:
    get:
      tags:
      - "Universe"
      summary: "Get type information"
      description: "Get information on a type\n\n---\nAlternate route: `/legacy/universe/types/{type_id}/`\n\
        \n---\nThis route expires daily at 11:05\n\n---\nWarning: This route is deprecated\n\
        \n---\n[Diff of the upcoming changes](https://esi.evetech.net/diff/v2/dev/#GET-/universe/types/{type_id}/)"
      operationId: "get_universe_types_type_id"
      parameters:
      - name: "Accept-Language"
        in: "header"
        description: "Language to use in the response"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "AcceptLanguage"
      - name: "datasource"
        in: "query"
        description: "The server name you would like data from"
        required: false
        type: "string"
        default: "tranquility"
        enum:
        - "tranquility"
        x-exportParamName: "Datasource"
      - name: "If-None-Match"
        in: "header"
        description: "ETag from a previous request. A 304 will be returned if this\
          \ matches the current ETag"
        required: false
        type: "string"
        x-exportParamName: "IfNoneMatch"
      - name: "language"
        in: "query"
        description: "Language to use in the response, takes precedence over Accept-Language"
        required: false
        type: "string"
        default: "en-us"
        enum:
        - "de"
        - "en-us"
        - "fr"
        - "ja"
        - "ru"
        - "ko"
        x-exportParamName: "Language"
      - name: "type_id"
        in: "path"
        description: "An Eve item type ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TypeId"
      responses:
        200:
          description: "Information about a type"
          schema:
            $ref: "#/definitions/get_universe_types_type_id_ok"
          examples:
            application/json:
              description: "The Rifter is a..."
              group_id: 25
              name: "Rifter"
              published: true
              type_id: 587
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            Content-Language:
              type: "string"
              description: "The language used in the response"
              enum:
              - "de"
              - "en-us"
              - "fr"
              - "ja"
              - "ru"
              - "ko"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        304:
          description: "Not modified"
          headers:
            Cache-Control:
              type: "string"
              description: "The caching mechanism used"
            ETag:
              type: "string"
              description: "RFC7232 compliant entity tag"
            Expires:
              type: "string"
              description: "RFC7231 formatted datetime string"
            Last-Modified:
              type: "string"
              description: "RFC7231 formatted datetime string"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/bad_request"
          examples:
            application/json:
              error: "Bad request message"
        404:
          description: "Type not found"
          schema:
            $ref: "#/definitions/get_universe_types_type_id_not_found"
          examples:
            application/json:
              error: "Not found message"
        420:
          description: "Error limited"
          schema:
            $ref: "#/definitions/error_limited"
          examples:
            application/json:
              error: "Error limited message"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/internal_server_error"
          examples:
            application/json:
              error: "Internal server error message"
        503:
          description: "Service unavailable"
          schema:
            $ref: "#/definitions/service_unavailable"
          examples:
            application/json:
              error: "Service unavailable message"
        504:
          description: "Gateway timeout"
          schema:
            $ref: "#/definitions/gateway_timeout"
          examples:
            application/json:
              error: "Gateway timeout message"
      deprecated: true
      x-alternate-versions:
      - "legacy"
securityDefinitions:
  evesso:
    type: "oauth2"
    authorizationUrl: "https://login.eveonline.com/v2/oauth/authorize"
    flow: "implicit"
    scopes:
      esi-alliances.read_contacts.v1: "EVE SSO scope esi-alliances.read_contacts.v1"
      esi-assets.read_assets.v1: "EVE SSO scope esi-assets.read_assets.v1"
      esi-assets.read_corporation_assets.v1: "EVE SSO scope esi-assets.read_corporation_assets.v1"
      esi-bookmarks.read_character_bookmarks.v1: "EVE SSO scope esi-bookmarks.read_character_bookmarks.v1"
      esi-calendar.read_calendar_events.v1: "EVE SSO scope esi-calendar.read_calendar_events.v1"
      esi-characters.read_agents_research.v1: "EVE SSO scope esi-characters.read_agents_research.v1"
      esi-characters.read_blueprints.v1: "EVE SSO scope esi-characters.read_blueprints.v1"
      esi-characters.read_contacts.v1: "EVE SSO scope esi-characters.read_contacts.v1"
      esi-characters.read_corporation_roles.v1: "EVE SSO scope esi-characters.read_corporation_roles.v1"
      esi-characters.read_fatigue.v1: "EVE SSO scope esi-characters.read_fatigue.v1"
      esi-characters.read_fw_stats.v1: "EVE SSO scope esi-characters.read_fw_stats.v1"
      esi-characters.read_medals.v1: "EVE SSO scope esi-characters.read_medals.v1"
      esi-characters.read_notifications.v1: "EVE SSO scope esi-characters.read_notifications.v1"
      esi-characters.read_standings.v1: "EVE SSO scope esi-characters.read_standings.v1"
      esi-characters.read_titles.v1: "EVE SSO scope esi-characters.read_titles.v1"
      esi-characters.write_contacts.v1: "EVE SSO scope esi-characters.write_contacts.v1"
      esi-clones.read_clones.v1: "EVE SSO scope esi-clones.read_clones.v1"
      esi-clones.read_implants.v1: "EVE SSO scope esi-clones.read_implants.v1"
      esi-corporations.read_blueprints.v1: "EVE SSO scope esi-corporations.read_blueprints.v1"
      esi-corporations.read_contacts.v1: "EVE SSO scope esi-corporations.read_contacts.v1"
      esi-corporations.read_container_logs.v1: "EVE SSO scope esi-corporations.read_container_logs.v1"
      esi-corporations.read_corporation_membership.v1: "EVE SSO scope esi-corporations.read_corporation_membership.v1"
      esi-corporations.read_divisions.v1: "EVE SSO scope esi-corporations.read_divisions.v1"
      esi-corporations.read_facilities.v1: "EVE SSO scope esi-corporations.read_facilities.v1"
      esi-corporations.read_fw_stats.v1: "EVE SSO scope esi-corporations.read_fw_stats.v1"
      esi-corporations.read_medals.v1: "EVE SSO scope esi-corporations.read_medals.v1"
      esi-corporations.read_standings.v1: "EVE SSO scope esi-corporations.read_standings.v1"
      esi-corporations.read_starbases.v1: "EVE SSO scope esi-corporations.read_starbases.v1"
      esi-corporations.read_starbases.v2: "EVE SSO scope esi-corporations.read_starbases.v2"
      esi-corporations.read_structures.v1: "EVE SSO scope esi-corporations.read_structures.v1"
      esi-corporations.read_titles.v1: "EVE SSO scope esi-corporations.read_titles.v1"
      esi-corporations.track_members.v1: "EVE SSO scope esi-corporations.track_members.v1"
      esi-fittings.read_fittings.v1: "EVE SSO scope esi-fittings.read_fittings.v1"
      esi-fittings.write_fittings.v1: "EVE SSO scope esi-fittings.write_fittings.v1"
      esi-fleets.read_fleet.v1: "EVE SSO scope esi-fleets.read_fleet.v1"
      esi-location.read_location.v1: "EVE SSO scope esi-location.read_location.v1"
      esi-location.read_online.v1: "EVE SSO scope esi-location.read_online.v1"
      esi-location.read_ship_type.v1: "EVE SSO scope esi-location.read_ship_type.v1"
      esi-mail.organize_mail.v1: "EVE SSO scope esi-mail.organize_mail.v1"
      esi-mail.read_mail.v1: "EVE SSO scope esi-mail.read_mail.v1"
      esi-markets.read_character_orders.v1: "EVE SSO scope esi-markets.read_character_orders.v1"
      esi-markets.read_corporation_orders.v1: "EVE SSO scope esi-markets.read_corporation_orders.v1"
      esi-skills.read_skillqueue.v1: "EVE SSO scope esi-skills.read_skillqueue.v1"
      esi-ui.write_waypoint.v1: "EVE SSO scope esi-ui.write_waypoint.v1"
      esi-universe.read_structures.v1: "EVE SSO scope esi-universe.read_structures.v1"
      esi-wallet.read_character_wallet.v1: "EVE SSO scope esi-wallet.read_character_wallet.v1"
      esi-wallet.read_corporation_wallets.v1: "EVE SSO scope esi-wallet.read_corporation_wallets.v1"
definitions:
  bad_request:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Bad request message"
    title: "Bad request"
    description: "Bad request model"
  error_limited:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Error limited message"
    title: "Error limited"
    description: "Error limited model"
  forbidden:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Forbidden message"
      sso_status:
        type: "integer"
        description: "status code received from SSO"
    title: "Forbidden"
    description: "Forbidden model"
  gateway_timeout:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Gateway timeout message"
      timeout:
        type: "integer"
        description: "number of seconds the request was given"
    title: "Gateway timeout"
    description: "Gateway timeout model"
  internal_server_error:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Internal server error message"
    title: "Internal server error"
    description: "Internal server error model"
  service_unavailable:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Service unavailable message"
    title: "Service unavailable"
    description: "Service unavailable model"
  unauthorized:
    type: "object"
    required:
    - "error"
    properties:
      error:
        type: "string"
        description: "Unauthorized message"
    title: "Unauthorized"
    description: "Unauthorized model"
  get_alliances_alliance_id_contacts_200_ok:
    required:
    - "contact_id"
    - "contact_type"
    - "standing"
    properties:
      contact_id:
        type: "integer"
        format: "int32"
        description: "contact_id integer"
        title: "get_alliances_alliance_id_contacts_contact_id"
      contact_type:
        type: "string"
        description: "contact_type string"
        title: "get_alliances_alliance_id_contacts_contact_type"
        enum:
        - "character"
        - "corporation"
        - "alliance"
        - "faction"
      label_ids:
        type: "array"
        description: "label_ids array"
        title: "get_alliances_alliance_id_contacts_label_ids"
        items:
          type: "integer"
          format: "int64"
          description: "Label IDs applied to the contact"
          title: "get_alliances_alliance_id_contacts_label_id"
        maxItems: 63
      standing:
        type: "number"
        format: "float"
        description: "Standing of the contact"
        title: "get_alliances_alliance_id_contacts_standing"
    description: "200 ok object"
  get_alliances_alliance_id_icons_ok:
    properties:
      px128x128:
        type: "string"
        description: "px128x128 string"
        title: "get_alliances_alliance_id_icons_px128x128"
      px64x64:
        type: "string"
        description: "px64x64 string"
        title: "get_alliances_alliance_id_icons_px64x64"
    description: "200 ok object"
  get_alliances_alliance_id_icons_not_found:
    properties:
      error:
        type: "string"
        description: "error message"
        title: "get_alliances_alliance_id_icons_error"
    description: "No image server for this datasource"
  post_characters_affiliation_200_ok:
    required:
    - "character_id"
    - "corporation_id"
    properties:
      alliance_id:
        type: "integer"
        format: "int32"
        description: "The character's alliance ID, if their corporation is in an alliance"
        title: "post_characters_affiliation_alliance_id"
      character_id:
        type: "integer"
        format: "int32"
        description: "The character's ID"
        title: "post_characters_affiliation_character_id"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "The character's corporation ID"
        title: "post_characters_affiliation_corporation_id"
      faction_id:
        type: "integer"
        format: "int32"
        description: "The character's faction ID, if their corporation is in a faction"
        title: "post_characters_affiliation_faction_id"
    description: "200 ok object"
  get_characters_character_id_agents_research_200_ok:
    required:
    - "agent_id"
    - "points_per_day"
    - "remainder_points"
    - "skill_type_id"
    - "started_at"
    properties:
      agent_id:
        type: "integer"
        format: "int32"
        description: "agent_id integer"
        title: "get_characters_character_id_agents_research_agent_id"
      points_per_day:
        type: "number"
        format: "float"
        description: "points_per_day number"
        title: "get_characters_character_id_agents_research_points_per_day"
      remainder_points:
        type: "number"
        format: "float"
        description: "remainder_points number"
        title: "get_characters_character_id_agents_research_remainder_points"
      skill_type_id:
        type: "integer"
        format: "int32"
        description: "skill_type_id integer"
        title: "get_characters_character_id_agents_research_skill_type_id"
      started_at:
        type: "string"
        format: "date-time"
        description: "started_at string"
        title: "get_characters_character_id_agents_research_started_at"
    description: "200 ok object"
  post_characters_character_id_assets_locations_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "post_characters_character_id_assets_locations_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "post_characters_character_id_assets_locations_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "post_characters_character_id_assets_locations_z"
    description: "position object"
  post_characters_character_id_assets_locations_200_ok:
    required:
    - "item_id"
    - "position"
    properties:
      item_id:
        type: "integer"
        format: "int64"
        description: "item_id integer"
        title: "post_characters_character_id_assets_locations_item_id"
      position:
        $ref: "#/definitions/post_characters_character_id_assets_locations_position"
    description: "200 ok object"
  get_characters_character_id_blueprints_200_ok:
    required:
    - "item_id"
    - "location_flag"
    - "location_id"
    - "material_efficiency"
    - "quantity"
    - "runs"
    - "time_efficiency"
    - "type_id"
    properties:
      item_id:
        type: "integer"
        format: "int64"
        description: "Unique ID for this item."
        title: "get_characters_character_id_blueprints_item_id"
      location_flag:
        type: "string"
        description: "Type of the location_id"
        title: "get_characters_character_id_blueprints_location_flag"
        enum:
        - "AutoFit"
        - "Cargo"
        - "CorpseBay"
        - "DroneBay"
        - "FleetHangar"
        - "Deliveries"
        - "HiddenModifiers"
        - "Hangar"
        - "HangarAll"
        - "LoSlot0"
        - "LoSlot1"
        - "LoSlot2"
        - "LoSlot3"
        - "LoSlot4"
        - "LoSlot5"
        - "LoSlot6"
        - "LoSlot7"
        - "MedSlot0"
        - "MedSlot1"
        - "MedSlot2"
        - "MedSlot3"
        - "MedSlot4"
        - "MedSlot5"
        - "MedSlot6"
        - "MedSlot7"
        - "HiSlot0"
        - "HiSlot1"
        - "HiSlot2"
        - "HiSlot3"
        - "HiSlot4"
        - "HiSlot5"
        - "HiSlot6"
        - "HiSlot7"
        - "AssetSafety"
        - "Locked"
        - "Unlocked"
        - "Implant"
        - "QuafeBay"
        - "RigSlot0"
        - "RigSlot1"
        - "RigSlot2"
        - "RigSlot3"
        - "RigSlot4"
        - "RigSlot5"
        - "RigSlot6"
        - "RigSlot7"
        - "ShipHangar"
        - "SpecializedFuelBay"
        - "SpecializedOreHold"
        - "SpecializedGasHold"
        - "SpecializedMineralHold"
        - "SpecializedSalvageHold"
        - "SpecializedShipHold"
        - "SpecializedSmallShipHold"
        - "SpecializedMediumShipHold"
        - "SpecializedLargeShipHold"
        - "SpecializedIndustrialShipHold"
        - "SpecializedAmmoHold"
        - "SpecializedCommandCenterHold"
        - "SpecializedPlanetaryCommoditiesHold"
        - "SpecializedMaterialBay"
        - "SubSystemSlot0"
        - "SubSystemSlot1"
        - "SubSystemSlot2"
        - "SubSystemSlot3"
        - "SubSystemSlot4"
        - "SubSystemSlot5"
        - "SubSystemSlot6"
        - "SubSystemSlot7"
        - "FighterBay"
        - "FighterTube0"
        - "FighterTube1"
        - "FighterTube2"
        - "FighterTube3"
        - "FighterTube4"
        - "Module"
      location_id:
        type: "integer"
        format: "int64"
        description: "References a station, a ship or an item_id if this blueprint\
          \ is located within a container. If the return value is an item_id, then\
          \ the Character AssetList API must be queried to find the container using\
          \ the given item_id to determine the correct location of the Blueprint."
        title: "get_characters_character_id_blueprints_location_id"
      material_efficiency:
        type: "integer"
        format: "int32"
        description: "Material Efficiency Level of the blueprint."
        title: "get_characters_character_id_blueprints_material_efficiency"
        minimum: 0
        maximum: 25
      quantity:
        type: "integer"
        format: "int32"
        description: "A range of numbers with a minimum of -2 and no maximum value\
          \ where -1 is an original and -2 is a copy. It can be a positive integer\
          \ if it is a stack of blueprint originals fresh from the market (e.g. no\
          \ activities performed on them yet)."
        title: "get_characters_character_id_blueprints_quantity"
        minimum: -2
      runs:
        type: "integer"
        format: "int32"
        description: "Number of runs remaining if the blueprint is a copy, -1 if it\
          \ is an original."
        title: "get_characters_character_id_blueprints_runs"
        minimum: -1
      time_efficiency:
        type: "integer"
        format: "int32"
        description: "Time Efficiency Level of the blueprint."
        title: "get_characters_character_id_blueprints_time_efficiency"
        minimum: 0
        maximum: 20
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_characters_character_id_blueprints_type_id"
    description: "200 ok object"
  get_characters_character_id_bookmarks_coordinates:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_characters_character_id_bookmarks_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_characters_character_id_bookmarks_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_characters_character_id_bookmarks_z"
    description: "Optional object that is returned if a bookmark was made on a planet\
      \ or a random location in space."
  get_characters_character_id_bookmarks_item:
    required:
    - "item_id"
    - "type_id"
    properties:
      item_id:
        type: "integer"
        format: "int64"
        description: "item_id integer"
        title: "get_characters_character_id_bookmarks_item_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_characters_character_id_bookmarks_type_id"
    description: "Optional object that is returned if a bookmark was made on a particular\
      \ item."
  get_characters_character_id_bookmarks_200_ok:
    required:
    - "bookmark_id"
    - "created"
    - "creator_id"
    - "label"
    - "location_id"
    - "notes"
    properties:
      bookmark_id:
        type: "integer"
        format: "int32"
        description: "bookmark_id integer"
        title: "get_characters_character_id_bookmarks_bookmark_id"
      coordinates:
        $ref: "#/definitions/get_characters_character_id_bookmarks_coordinates"
      created:
        type: "string"
        format: "date-time"
        description: "created string"
        title: "get_characters_character_id_bookmarks_created"
      creator_id:
        type: "integer"
        format: "int32"
        description: "creator_id integer"
        title: "get_characters_character_id_bookmarks_creator_id"
      folder_id:
        type: "integer"
        format: "int32"
        description: "folder_id integer"
        title: "get_characters_character_id_bookmarks_folder_id"
      item:
        $ref: "#/definitions/get_characters_character_id_bookmarks_item"
      label:
        type: "string"
        description: "label string"
        title: "get_characters_character_id_bookmarks_label"
      location_id:
        type: "integer"
        format: "int32"
        description: "location_id integer"
        title: "get_characters_character_id_bookmarks_location_id"
      notes:
        type: "string"
        description: "notes string"
        title: "get_characters_character_id_bookmarks_notes"
    description: "200 ok object"
  get_characters_character_id_bookmarks_folders_200_ok:
    required:
    - "folder_id"
    - "name"
    properties:
      folder_id:
        type: "integer"
        format: "int32"
        description: "folder_id integer"
        title: "get_characters_character_id_bookmarks_folders_folder_id"
      name:
        type: "string"
        description: "name string"
        title: "get_characters_character_id_bookmarks_folders_name"
    description: "200 ok object"
  get_characters_character_id_calendar_200_ok:
    properties:
      event_date:
        type: "string"
        format: "date-time"
        description: "event_date string"
        title: "get_characters_character_id_calendar_event_date"
      event_id:
        type: "integer"
        format: "int32"
        description: "event_id integer"
        title: "get_characters_character_id_calendar_event_id"
      event_response:
        type: "string"
        description: "event_response string"
        title: "get_characters_character_id_calendar_event_response"
        enum:
        - "declined"
        - "not_responded"
        - "accepted"
        - "tentative"
      importance:
        type: "integer"
        format: "int32"
        description: "importance integer"
        title: "get_characters_character_id_calendar_importance"
      title:
        type: "string"
        description: "title string"
        title: "get_characters_character_id_calendar_title"
    description: "event"
  get_characters_character_id_calendar_event_id_attendees_200_ok:
    properties:
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_characters_character_id_calendar_event_id_attendees_character_id"
      event_response:
        type: "string"
        description: "event_response string"
        title: "get_characters_character_id_calendar_event_id_attendees_event_response"
        enum:
        - "declined"
        - "not_responded"
        - "accepted"
        - "tentative"
    description: "character_id and response of an attendee"
  get_characters_character_id_calendar_event_id_attendees_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_characters_character_id_calendar_event_id_attendees_404_not_found"
    description: "Not found"
  get_characters_character_id_clones_home_location:
    properties:
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_characters_character_id_clones_location_id"
      location_type:
        type: "string"
        description: "location_type string"
        title: "get_characters_character_id_clones_location_type"
        enum:
        - "station"
        - "structure"
    description: "home_location object"
  get_characters_character_id_clones_jump_clone:
    properties:
      implants:
        type: "array"
        description: "implants array"
        title: "get_characters_character_id_clones_implants"
        items:
          type: "integer"
          format: "int32"
          description: "implant integer"
          title: "get_characters_character_id_clones_implant"
        maxItems: 11
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_characters_character_id_clones_jump_clone_location_id"
      location_type:
        type: "string"
        description: "location_type string"
        title: "get_characters_character_id_clones_jump_clone_location_type"
        enum:
        - "station"
        - "structure"
    description: "jump_clone object"
  get_characters_character_id_clones_ok:
    required:
    - "jump_clones"
    properties:
      home_location:
        $ref: "#/definitions/get_characters_character_id_clones_home_location"
      jump_clones:
        type: "array"
        description: "jump_clones array"
        title: "get_characters_character_id_clones_jump_clones"
        items:
          $ref: "#/definitions/get_characters_character_id_clones_jump_clone"
        maxItems: 10
      last_jump_date:
        type: "string"
        format: "date-time"
        description: "last_jump_date string"
        title: "get_characters_character_id_clones_last_jump_date"
    description: "200 ok object"
  get_characters_character_id_contacts_200_ok:
    required:
    - "contact_id"
    - "contact_type"
    - "standing"
    properties:
      contact_id:
        type: "integer"
        format: "int32"
        description: "contact_id integer"
        title: "get_characters_character_id_contacts_contact_id"
      contact_type:
        type: "string"
        description: "contact_type string"
        title: "get_characters_character_id_contacts_contact_type"
        enum:
        - "character"
        - "corporation"
        - "alliance"
        - "faction"
      is_blocked:
        type: "boolean"
        description: "Whether this contact is in the blocked list. Note a missing\
          \ value denotes unknown, not true or false"
        title: "get_characters_character_id_contacts_is_blocked"
      is_watched:
        type: "boolean"
        description: "Whether this contact is being watched"
        title: "get_characters_character_id_contacts_is_watched"
      label_ids:
        type: "array"
        description: "label_ids array"
        title: "get_characters_character_id_contacts_label_ids"
        items:
          type: "integer"
          format: "int64"
          description: "Label IDs applied to the contact"
          title: "get_characters_character_id_contacts_label_id"
        maxItems: 63
      standing:
        type: "number"
        format: "float"
        description: "Standing of the contact"
        title: "get_characters_character_id_contacts_standing"
    description: "200 ok object"
  post_characters_character_id_contacts_error_520:
    properties:
      error:
        type: "string"
        description: "Error 520 message"
        title: "post_characters_character_id_contacts_520_error_520"
    description: "Error 520"
  get_characters_character_id_corporationhistory_200_ok:
    required:
    - "corporation_id"
    - "record_id"
    - "start_date"
    properties:
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_characters_character_id_corporationhistory_corporation_id"
      is_deleted:
        type: "boolean"
        description: "True if the corporation has been deleted"
        title: "get_characters_character_id_corporationhistory_is_deleted"
      record_id:
        type: "integer"
        format: "int32"
        description: "An incrementing ID that can be used to canonically establish\
          \ order of records in cases where dates may be ambiguous"
        title: "get_characters_character_id_corporationhistory_record_id"
      start_date:
        type: "string"
        format: "date-time"
        description: "start_date string"
        title: "get_characters_character_id_corporationhistory_start_date"
    description: "200 ok object"
  get_characters_character_id_fatigue_ok:
    properties:
      jump_fatigue_expire_date:
        type: "string"
        format: "date-time"
        description: "Character's jump fatigue expiry"
        title: "get_characters_character_id_fatigue_jump_fatigue_expire_date"
      last_jump_date:
        type: "string"
        format: "date-time"
        description: "Character's last jump activation"
        title: "get_characters_character_id_fatigue_last_jump_date"
      last_update_date:
        type: "string"
        format: "date-time"
        description: "Character's last jump update"
        title: "get_characters_character_id_fatigue_last_update_date"
    description: "200 ok object"
  get_characters_character_id_fittings_item:
    required:
    - "flag"
    - "quantity"
    - "type_id"
    properties:
      flag:
        type: "string"
        description: "flag string"
        title: "get_characters_character_id_fittings_flag"
        enum:
        - "Cargo"
        - "DroneBay"
        - "FighterBay"
        - "HiSlot0"
        - "HiSlot1"
        - "HiSlot2"
        - "HiSlot3"
        - "HiSlot4"
        - "HiSlot5"
        - "HiSlot6"
        - "HiSlot7"
        - "Invalid"
        - "LoSlot0"
        - "LoSlot1"
        - "LoSlot2"
        - "LoSlot3"
        - "LoSlot4"
        - "LoSlot5"
        - "LoSlot6"
        - "LoSlot7"
        - "MedSlot0"
        - "MedSlot1"
        - "MedSlot2"
        - "MedSlot3"
        - "MedSlot4"
        - "MedSlot5"
        - "MedSlot6"
        - "MedSlot7"
        - "RigSlot0"
        - "RigSlot1"
        - "RigSlot2"
        - "ServiceSlot0"
        - "ServiceSlot1"
        - "ServiceSlot2"
        - "ServiceSlot3"
        - "ServiceSlot4"
        - "ServiceSlot5"
        - "ServiceSlot6"
        - "ServiceSlot7"
        - "SubSystemSlot0"
        - "SubSystemSlot1"
        - "SubSystemSlot2"
        - "SubSystemSlot3"
      quantity:
        type: "integer"
        format: "int32"
        description: "quantity integer"
        title: "get_characters_character_id_fittings_quantity"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_characters_character_id_fittings_type_id"
    description: "item object"
  get_characters_character_id_fittings_200_ok:
    required:
    - "description"
    - "fitting_id"
    - "items"
    - "name"
    - "ship_type_id"
    properties:
      description:
        type: "string"
        description: "description string"
        title: "get_characters_character_id_fittings_description"
      fitting_id:
        type: "integer"
        format: "int32"
        description: "fitting_id integer"
        title: "get_characters_character_id_fittings_fitting_id"
      items:
        type: "array"
        description: "items array"
        title: "get_characters_character_id_fittings_items"
        items:
          $ref: "#/definitions/get_characters_character_id_fittings_item"
        maxItems: 255
      name:
        type: "string"
        description: "name string"
        title: "get_characters_character_id_fittings_name"
      ship_type_id:
        type: "integer"
        format: "int32"
        description: "ship_type_id integer"
        title: "get_characters_character_id_fittings_ship_type_id"
    description: "200 ok object"
  post_characters_character_id_fittings_item:
    required:
    - "flag"
    - "quantity"
    - "type_id"
    properties:
      flag:
        type: "string"
        description: "Fitting location for the item. Entries placed in 'Invalid' will\
          \ be discarded. If this leaves the fitting with nothing, it will cause an\
          \ error."
        title: "post_characters_character_id_fittings_flag"
        enum:
        - "Cargo"
        - "DroneBay"
        - "FighterBay"
        - "HiSlot0"
        - "HiSlot1"
        - "HiSlot2"
        - "HiSlot3"
        - "HiSlot4"
        - "HiSlot5"
        - "HiSlot6"
        - "HiSlot7"
        - "Invalid"
        - "LoSlot0"
        - "LoSlot1"
        - "LoSlot2"
        - "LoSlot3"
        - "LoSlot4"
        - "LoSlot5"
        - "LoSlot6"
        - "LoSlot7"
        - "MedSlot0"
        - "MedSlot1"
        - "MedSlot2"
        - "MedSlot3"
        - "MedSlot4"
        - "MedSlot5"
        - "MedSlot6"
        - "MedSlot7"
        - "RigSlot0"
        - "RigSlot1"
        - "RigSlot2"
        - "ServiceSlot0"
        - "ServiceSlot1"
        - "ServiceSlot2"
        - "ServiceSlot3"
        - "ServiceSlot4"
        - "ServiceSlot5"
        - "ServiceSlot6"
        - "ServiceSlot7"
        - "SubSystemSlot0"
        - "SubSystemSlot1"
        - "SubSystemSlot2"
        - "SubSystemSlot3"
      quantity:
        type: "integer"
        format: "int32"
        description: "quantity integer"
        title: "post_characters_character_id_fittings_quantity"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "post_characters_character_id_fittings_type_id"
    description: "item object"
  post_characters_character_id_fittings_fitting:
    type: "object"
    required:
    - "description"
    - "items"
    - "name"
    - "ship_type_id"
    properties:
      description:
        type: "string"
        description: "description string"
        title: "post_characters_character_id_fittings_description"
        minLength: 0
        maxLength: 500
      items:
        type: "array"
        description: "items array"
        title: "post_characters_character_id_fittings_items"
        items:
          $ref: "#/definitions/post_characters_character_id_fittings_item"
        maxItems: 255
        minItems: 1
      name:
        type: "string"
        description: "name string"
        title: "post_characters_character_id_fittings_name"
        minLength: 1
        maxLength: 50
      ship_type_id:
        type: "integer"
        format: "int32"
        description: "ship_type_id integer"
        title: "post_characters_character_id_fittings_ship_type_id"
    title: "post_characters_character_id_fittings_fitting"
    description: "fitting object"
  post_characters_character_id_fittings_created:
    required:
    - "fitting_id"
    properties:
      fitting_id:
        type: "integer"
        format: "int32"
        description: "fitting_id integer"
        title: "post_characters_character_id_fittings_fitting_id"
    description: "201 created object"
  get_characters_character_id_fleet_ok:
    required:
    - "fleet_boss_id"
    - "fleet_id"
    - "role"
    - "squad_id"
    - "wing_id"
    properties:
      fleet_boss_id:
        type: "integer"
        format: "int64"
        description: "Character ID of the current fleet boss"
        title: "get_characters_character_id_fleet_fleet_boss_id"
      fleet_id:
        type: "integer"
        format: "int64"
        description: "The character's current fleet ID"
        title: "get_characters_character_id_fleet_fleet_id"
      role:
        type: "string"
        description: "Member’s role in fleet"
        title: "get_characters_character_id_fleet_role"
        enum:
        - "fleet_commander"
        - "squad_commander"
        - "squad_member"
        - "wing_commander"
      squad_id:
        type: "integer"
        format: "int64"
        description: "ID of the squad the member is in. If not applicable, will be\
          \ set to -1"
        title: "get_characters_character_id_fleet_squad_id"
      wing_id:
        type: "integer"
        format: "int64"
        description: "ID of the wing the member is in. If not applicable, will be\
          \ set to -1"
        title: "get_characters_character_id_fleet_wing_id"
    description: "200 ok object"
  get_characters_character_id_fleet_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_characters_character_id_fleet_404_not_found"
    description: "Not found"
  get_characters_character_id_fw_stats_kills:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's total number of kills by a given character against\
          \ enemy factions"
        title: "get_characters_character_id_fw_stats_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total number of kills by a given character against enemy factions\
          \ since the character enlisted"
        title: "get_characters_character_id_fw_stats_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's total number of kills by a given character against\
          \ enemy factions"
        title: "get_characters_character_id_fw_stats_yesterday"
    description: "Summary of kills done by the given character against enemy factions"
  get_characters_character_id_fw_stats_victory_points:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's victory points gained by the given character"
        title: "get_characters_character_id_fw_stats_victory_points_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total victory points gained since the given character enlisted"
        title: "get_characters_character_id_fw_stats_victory_points_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's victory points gained by the given character"
        title: "get_characters_character_id_fw_stats_victory_points_yesterday"
    description: "Summary of victory points gained by the given character for the\
      \ enlisted faction"
  get_characters_character_id_fw_stats_ok:
    required:
    - "kills"
    - "victory_points"
    properties:
      current_rank:
        type: "integer"
        format: "int32"
        description: "The given character's current faction rank"
        title: "get_characters_character_id_fw_stats_current_rank"
        minimum: 0
        maximum: 9
      enlisted_on:
        type: "string"
        format: "date-time"
        description: "The enlistment date of the given character into faction warfare.\
          \ Will not be included if character is not enlisted in faction warfare"
        title: "get_characters_character_id_fw_stats_enlisted_on"
      faction_id:
        type: "integer"
        format: "int32"
        description: "The faction the given character is enlisted to fight for. Will\
          \ not be included if character is not enlisted in faction warfare"
        title: "get_characters_character_id_fw_stats_faction_id"
      highest_rank:
        type: "integer"
        format: "int32"
        description: "The given character's highest faction rank achieved"
        title: "get_characters_character_id_fw_stats_highest_rank"
        minimum: 0
        maximum: 9
      kills:
        $ref: "#/definitions/get_characters_character_id_fw_stats_kills"
      victory_points:
        $ref: "#/definitions/get_characters_character_id_fw_stats_victory_points"
    description: "200 ok object"
  get_characters_character_id_location_ok:
    required:
    - "solar_system_id"
    properties:
      solar_system_id:
        type: "integer"
        format: "int32"
        description: "solar_system_id integer"
        title: "get_characters_character_id_location_solar_system_id"
      station_id:
        type: "integer"
        format: "int32"
        description: "station_id integer"
        title: "get_characters_character_id_location_station_id"
      structure_id:
        type: "integer"
        format: "int64"
        description: "structure_id integer"
        title: "get_characters_character_id_location_structure_id"
    description: "200 ok object"
  get_characters_character_id_mail_labels_200_ok:
    properties:
      color:
        type: "string"
        description: "color string"
        title: "get_characters_character_id_mail_labels_color"
        default: "#ffffff"
        enum:
        - "#0000fe"
        - "#006634"
        - "#0099ff"
        - "#00ff33"
        - "#01ffff"
        - "#349800"
        - "#660066"
        - "#666666"
        - "#999999"
        - "#99ffff"
        - "#9a0000"
        - "#ccff9a"
        - "#e6e6e6"
        - "#fe0000"
        - "#ff6600"
        - "#ffff01"
        - "#ffffcd"
        - "#ffffff"
      label_id:
        type: "integer"
        format: "int32"
        description: "label_id integer"
        title: "get_characters_character_id_mail_labels_label_id"
        minimum: 0
      name:
        type: "string"
        description: "name string"
        title: "get_characters_character_id_mail_labels_name"
        maxLength: 40
    description: "200 ok object"
  post_characters_character_id_mail_labels_label:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Hexadecimal string representing label color, in RGB format"
        title: "post_characters_character_id_mail_labels_color"
        default: "#ffffff"
        enum:
        - "#0000fe"
        - "#006634"
        - "#0099ff"
        - "#00ff33"
        - "#01ffff"
        - "#349800"
        - "#660066"
        - "#666666"
        - "#999999"
        - "#99ffff"
        - "#9a0000"
        - "#ccff9a"
        - "#e6e6e6"
        - "#fe0000"
        - "#ff6600"
        - "#ffff01"
        - "#ffffcd"
        - "#ffffff"
      name:
        type: "string"
        description: "name string"
        title: "post_characters_character_id_mail_labels_name"
        minLength: 1
        maxLength: 40
    title: "post_characters_character_id_mail_labels_label"
    description: "label object"
  get_characters_character_id_medals_graphic:
    required:
    - "graphic"
    - "layer"
    - "part"
    properties:
      color:
        type: "integer"
        format: "int32"
        description: "color integer"
        title: "get_characters_character_id_medals_color"
      graphic:
        type: "string"
        description: "graphic string"
        title: "get_characters_character_id_medals_graphic_graphic"
      layer:
        type: "integer"
        format: "int32"
        description: "layer integer"
        title: "get_characters_character_id_medals_layer"
      part:
        type: "integer"
        format: "int32"
        description: "part integer"
        title: "get_characters_character_id_medals_part"
    description: "graphic object"
  get_characters_character_id_medals_200_ok:
    required:
    - "corporation_id"
    - "date"
    - "description"
    - "graphics"
    - "issuer_id"
    - "medal_id"
    - "reason"
    - "status"
    - "title"
    properties:
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_characters_character_id_medals_corporation_id"
      date:
        type: "string"
        format: "date-time"
        description: "date string"
        title: "get_characters_character_id_medals_date"
      description:
        type: "string"
        description: "description string"
        title: "get_characters_character_id_medals_description"
      graphics:
        type: "array"
        description: "graphics array"
        title: "get_characters_character_id_medals_graphics"
        items:
          $ref: "#/definitions/get_characters_character_id_medals_graphic"
        maxItems: 9
        minItems: 3
      issuer_id:
        type: "integer"
        format: "int32"
        description: "issuer_id integer"
        title: "get_characters_character_id_medals_issuer_id"
      medal_id:
        type: "integer"
        format: "int32"
        description: "medal_id integer"
        title: "get_characters_character_id_medals_medal_id"
      reason:
        type: "string"
        description: "reason string"
        title: "get_characters_character_id_medals_reason"
      status:
        type: "string"
        description: "status string"
        title: "get_characters_character_id_medals_status"
        enum:
        - "public"
        - "private"
      title:
        type: "string"
        description: "title string"
        title: "get_characters_character_id_medals_title"
    description: "200 ok object"
  get_characters_character_id_notifications_contacts_200_ok:
    required:
    - "message"
    - "notification_id"
    - "send_date"
    - "sender_character_id"
    - "standing_level"
    properties:
      message:
        type: "string"
        description: "message string"
        title: "get_characters_character_id_notifications_contacts_message"
      notification_id:
        type: "integer"
        format: "int32"
        description: "notification_id integer"
        title: "get_characters_character_id_notifications_contacts_notification_id"
      send_date:
        type: "string"
        format: "date-time"
        description: "send_date string"
        title: "get_characters_character_id_notifications_contacts_send_date"
      sender_character_id:
        type: "integer"
        format: "int32"
        description: "sender_character_id integer"
        title: "get_characters_character_id_notifications_contacts_sender_character_id"
      standing_level:
        type: "number"
        format: "float"
        description: "A number representing the standing level the receiver has been\
          \ added at by the sender. The standing levels are as follows: -10 -> Terrible\
          \ | -5 -> Bad |  0 -> Neutral |  5 -> Good |  10 -> Excellent"
        title: "get_characters_character_id_notifications_contacts_standing_level"
    description: "200 ok object"
  get_characters_character_id_online_ok:
    required:
    - "online"
    properties:
      last_login:
        type: "string"
        format: "date-time"
        description: "Timestamp of the last login"
        title: "get_characters_character_id_online_last_login"
      last_logout:
        type: "string"
        format: "date-time"
        description: "Timestamp of the last logout"
        title: "get_characters_character_id_online_last_logout"
      logins:
        type: "integer"
        format: "int32"
        description: "Total number of times the character has logged in"
        title: "get_characters_character_id_online_logins"
      online:
        type: "boolean"
        description: "If the character is online"
        title: "get_characters_character_id_online_online"
    description: "200 ok object"
  get_characters_character_id_orders_200_ok:
    required:
    - "duration"
    - "is_corporation"
    - "issued"
    - "location_id"
    - "order_id"
    - "price"
    - "range"
    - "region_id"
    - "type_id"
    - "volume_remain"
    - "volume_total"
    properties:
      duration:
        type: "integer"
        format: "int32"
        description: "Number of days for which order is valid (starting from the issued\
          \ date). An order expires at time issued + duration"
        title: "get_characters_character_id_orders_duration"
      escrow:
        type: "number"
        format: "double"
        description: "For buy orders, the amount of ISK in escrow"
        title: "get_characters_character_id_orders_escrow"
      is_buy_order:
        type: "boolean"
        description: "True if the order is a bid (buy) order"
        title: "get_characters_character_id_orders_is_buy_order"
      is_corporation:
        type: "boolean"
        description: "Signifies whether the buy/sell order was placed on behalf of\
          \ a corporation."
        title: "get_characters_character_id_orders_is_corporation"
      issued:
        type: "string"
        format: "date-time"
        description: "Date and time when this order was issued"
        title: "get_characters_character_id_orders_issued"
      location_id:
        type: "integer"
        format: "int64"
        description: "ID of the location where order was placed"
        title: "get_characters_character_id_orders_location_id"
      min_volume:
        type: "integer"
        format: "int32"
        description: "For buy orders, the minimum quantity that will be accepted in\
          \ a matching sell order"
        title: "get_characters_character_id_orders_min_volume"
      order_id:
        type: "integer"
        format: "int64"
        description: "Unique order ID"
        title: "get_characters_character_id_orders_order_id"
      price:
        type: "number"
        format: "double"
        description: "Cost per unit for this order"
        title: "get_characters_character_id_orders_price"
      range:
        type: "string"
        description: "Valid order range, numbers are ranges in jumps"
        title: "get_characters_character_id_orders_range"
        enum:
        - "1"
        - "10"
        - "2"
        - "20"
        - "3"
        - "30"
        - "4"
        - "40"
        - "5"
        - "region"
        - "solarsystem"
        - "station"
      region_id:
        type: "integer"
        format: "int32"
        description: "ID of the region where order was placed"
        title: "get_characters_character_id_orders_region_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "The type ID of the item transacted in this order"
        title: "get_characters_character_id_orders_type_id"
      volume_remain:
        type: "integer"
        format: "int32"
        description: "Quantity of items still required or offered"
        title: "get_characters_character_id_orders_volume_remain"
      volume_total:
        type: "integer"
        format: "int32"
        description: "Quantity of items required or offered at time order was placed"
        title: "get_characters_character_id_orders_volume_total"
    description: "200 ok object"
  get_characters_character_id_portrait_ok:
    properties:
      px128x128:
        type: "string"
        description: "px128x128 string"
        title: "get_characters_character_id_portrait_px128x128"
      px256x256:
        type: "string"
        description: "px256x256 string"
        title: "get_characters_character_id_portrait_px256x256"
      px512x512:
        type: "string"
        description: "px512x512 string"
        title: "get_characters_character_id_portrait_px512x512"
      px64x64:
        type: "string"
        description: "px64x64 string"
        title: "get_characters_character_id_portrait_px64x64"
    description: "200 ok object"
  get_characters_character_id_portrait_not_found:
    properties:
      error:
        type: "string"
        description: "error message"
        title: "get_characters_character_id_portrait_error"
    description: "No image server for this datasource"
  get_characters_character_id_roles_ok:
    properties:
      roles:
        type: "array"
        description: "roles array"
        title: "get_characters_character_id_roles_roles"
        items:
          type: "string"
          description: "role string"
          title: "get_characters_character_id_roles_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_base:
        type: "array"
        description: "roles_at_base array"
        title: "get_characters_character_id_roles_roles_at_base"
        items:
          type: "string"
          description: "roles_at_base string"
          title: "get_characters_character_id_roles_roles_at_base_roles_at_base"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_hq:
        type: "array"
        description: "roles_at_hq array"
        title: "get_characters_character_id_roles_roles_at_hq"
        items:
          type: "string"
          description: "roles_at_hq string"
          title: "get_characters_character_id_roles_roles_at_hq_roles_at_hq"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_other:
        type: "array"
        description: "roles_at_other array"
        title: "get_characters_character_id_roles_roles_at_other"
        items:
          type: "string"
          description: "roles_at_other string"
          title: "get_characters_character_id_roles_roles_at_other_roles_at_other"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
    description: "200 ok object"
  get_characters_character_id_ship_ok:
    required:
    - "ship_item_id"
    - "ship_name"
    - "ship_type_id"
    properties:
      ship_item_id:
        type: "integer"
        format: "int64"
        description: "Item id's are unique to a ship and persist until it is repackaged.\
          \ This value can be used to track repeated uses of a ship, or detect when\
          \ a pilot changes into a different instance of the same ship type."
        title: "get_characters_character_id_ship_ship_item_id"
      ship_name:
        type: "string"
        description: "ship_name string"
        title: "get_characters_character_id_ship_ship_name"
      ship_type_id:
        type: "integer"
        format: "int32"
        description: "ship_type_id integer"
        title: "get_characters_character_id_ship_ship_type_id"
    description: "200 ok object"
  get_characters_character_id_skillqueue_200_ok:
    required:
    - "finished_level"
    - "queue_position"
    - "skill_id"
    properties:
      finish_date:
        type: "string"
        format: "date-time"
        description: "Date on which training of the skill will complete. Omitted if\
          \ the skill queue is paused."
        title: "get_characters_character_id_skillqueue_finish_date"
      finished_level:
        type: "integer"
        format: "int32"
        description: "finished_level integer"
        title: "get_characters_character_id_skillqueue_finished_level"
        minimum: 0
        maximum: 5
      level_end_sp:
        type: "integer"
        format: "int32"
        description: "level_end_sp integer"
        title: "get_characters_character_id_skillqueue_level_end_sp"
      level_start_sp:
        type: "integer"
        format: "int32"
        description: "Amount of SP that was in the skill when it started training\
          \ it's current level. Used to calculate % of current level complete."
        title: "get_characters_character_id_skillqueue_level_start_sp"
      queue_position:
        type: "integer"
        format: "int32"
        description: "queue_position integer"
        title: "get_characters_character_id_skillqueue_queue_position"
      skill_id:
        type: "integer"
        format: "int32"
        description: "skill_id integer"
        title: "get_characters_character_id_skillqueue_skill_id"
      start_date:
        type: "string"
        format: "date-time"
        description: "start_date string"
        title: "get_characters_character_id_skillqueue_start_date"
      training_start_sp:
        type: "integer"
        format: "int32"
        description: "training_start_sp integer"
        title: "get_characters_character_id_skillqueue_training_start_sp"
    description: "200 ok object"
  get_characters_character_id_standings_200_ok:
    required:
    - "from_id"
    - "from_type"
    - "standing"
    properties:
      from_id:
        type: "integer"
        format: "int32"
        description: "from_id integer"
        title: "get_characters_character_id_standings_from_id"
      from_type:
        type: "string"
        description: "from_type string"
        title: "get_characters_character_id_standings_from_type"
        enum:
        - "agent"
        - "npc_corp"
        - "faction"
      standing:
        type: "number"
        format: "float"
        description: "standing number"
        title: "get_characters_character_id_standings_standing"
    description: "200 ok object"
  get_characters_character_id_titles_200_ok:
    properties:
      name:
        type: "string"
        description: "name string"
        title: "get_characters_character_id_titles_name"
      title_id:
        type: "integer"
        format: "int32"
        description: "title_id integer"
        title: "get_characters_character_id_titles_title_id"
    description: "200 ok object"
  get_characters_character_id_wallet_transactions_200_ok:
    required:
    - "client_id"
    - "date"
    - "is_buy"
    - "is_personal"
    - "journal_ref_id"
    - "location_id"
    - "quantity"
    - "transaction_id"
    - "type_id"
    - "unit_price"
    properties:
      client_id:
        type: "integer"
        format: "int32"
        description: "client_id integer"
        title: "get_characters_character_id_wallet_transactions_client_id"
      date:
        type: "string"
        format: "date-time"
        description: "Date and time of transaction"
        title: "get_characters_character_id_wallet_transactions_date"
      is_buy:
        type: "boolean"
        description: "is_buy boolean"
        title: "get_characters_character_id_wallet_transactions_is_buy"
      is_personal:
        type: "boolean"
        description: "is_personal boolean"
        title: "get_characters_character_id_wallet_transactions_is_personal"
      journal_ref_id:
        type: "integer"
        format: "int64"
        description: "journal_ref_id integer"
        title: "get_characters_character_id_wallet_transactions_journal_ref_id"
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_characters_character_id_wallet_transactions_location_id"
      quantity:
        type: "integer"
        format: "int32"
        description: "quantity integer"
        title: "get_characters_character_id_wallet_transactions_quantity"
      transaction_id:
        type: "integer"
        format: "int64"
        description: "Unique transaction ID"
        title: "get_characters_character_id_wallet_transactions_transaction_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_characters_character_id_wallet_transactions_type_id"
      unit_price:
        type: "number"
        format: "double"
        description: "Amount paid per unit"
        title: "get_characters_character_id_wallet_transactions_unit_price"
    description: "wallet transaction"
  get_corporations_corporation_id_alliancehistory_200_ok:
    required:
    - "record_id"
    - "start_date"
    properties:
      alliance_id:
        type: "integer"
        format: "int32"
        description: "alliance_id integer"
        title: "get_corporations_corporation_id_alliancehistory_alliance_id"
      is_deleted:
        type: "boolean"
        description: "True if the alliance has been closed"
        title: "get_corporations_corporation_id_alliancehistory_is_deleted"
      record_id:
        type: "integer"
        format: "int32"
        description: "An incrementing ID that can be used to canonically establish\
          \ order of records in cases where dates may be ambiguous"
        title: "get_corporations_corporation_id_alliancehistory_record_id"
      start_date:
        type: "string"
        format: "date-time"
        description: "start_date string"
        title: "get_corporations_corporation_id_alliancehistory_start_date"
    description: "200 ok object"
  post_corporations_corporation_id_assets_locations_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "post_corporations_corporation_id_assets_locations_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "post_corporations_corporation_id_assets_locations_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "post_corporations_corporation_id_assets_locations_z"
    description: "position object"
  post_corporations_corporation_id_assets_locations_200_ok:
    required:
    - "item_id"
    - "position"
    properties:
      item_id:
        type: "integer"
        format: "int64"
        description: "item_id integer"
        title: "post_corporations_corporation_id_assets_locations_item_id"
      position:
        $ref: "#/definitions/post_corporations_corporation_id_assets_locations_position"
    description: "200 ok object"
  post_corporations_corporation_id_assets_locations_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "post_corporations_corporation_id_assets_locations_404_not_found"
    description: "Not found"
  get_corporations_corporation_id_blueprints_200_ok:
    required:
    - "item_id"
    - "location_flag"
    - "location_id"
    - "material_efficiency"
    - "quantity"
    - "runs"
    - "time_efficiency"
    - "type_id"
    properties:
      item_id:
        type: "integer"
        format: "int64"
        description: "Unique ID for this item."
        title: "get_corporations_corporation_id_blueprints_item_id"
      location_flag:
        type: "string"
        description: "Type of the location_id"
        title: "get_corporations_corporation_id_blueprints_location_flag"
        enum:
        - "AssetSafety"
        - "AutoFit"
        - "Bonus"
        - "Booster"
        - "BoosterBay"
        - "Capsule"
        - "Cargo"
        - "CorpDeliveries"
        - "CorpSAG1"
        - "CorpSAG2"
        - "CorpSAG3"
        - "CorpSAG4"
        - "CorpSAG5"
        - "CorpSAG6"
        - "CorpSAG7"
        - "CrateLoot"
        - "Deliveries"
        - "DroneBay"
        - "DustBattle"
        - "DustDatabank"
        - "FighterBay"
        - "FighterTube0"
        - "FighterTube1"
        - "FighterTube2"
        - "FighterTube3"
        - "FighterTube4"
        - "FleetHangar"
        - "FrigateEscapeBay"
        - "Hangar"
        - "HangarAll"
        - "HiSlot0"
        - "HiSlot1"
        - "HiSlot2"
        - "HiSlot3"
        - "HiSlot4"
        - "HiSlot5"
        - "HiSlot6"
        - "HiSlot7"
        - "HiddenModifiers"
        - "Implant"
        - "Impounded"
        - "JunkyardReprocessed"
        - "JunkyardTrashed"
        - "LoSlot0"
        - "LoSlot1"
        - "LoSlot2"
        - "LoSlot3"
        - "LoSlot4"
        - "LoSlot5"
        - "LoSlot6"
        - "LoSlot7"
        - "Locked"
        - "MedSlot0"
        - "MedSlot1"
        - "MedSlot2"
        - "MedSlot3"
        - "MedSlot4"
        - "MedSlot5"
        - "MedSlot6"
        - "MedSlot7"
        - "OfficeFolder"
        - "Pilot"
        - "PlanetSurface"
        - "QuafeBay"
        - "QuantumCoreRoom"
        - "Reward"
        - "RigSlot0"
        - "RigSlot1"
        - "RigSlot2"
        - "RigSlot3"
        - "RigSlot4"
        - "RigSlot5"
        - "RigSlot6"
        - "RigSlot7"
        - "SecondaryStorage"
        - "ServiceSlot0"
        - "ServiceSlot1"
        - "ServiceSlot2"
        - "ServiceSlot3"
        - "ServiceSlot4"
        - "ServiceSlot5"
        - "ServiceSlot6"
        - "ServiceSlot7"
        - "ShipHangar"
        - "ShipOffline"
        - "Skill"
        - "SkillInTraining"
        - "SpecializedAmmoHold"
        - "SpecializedCommandCenterHold"
        - "SpecializedFuelBay"
        - "SpecializedGasHold"
        - "SpecializedIndustrialShipHold"
        - "SpecializedLargeShipHold"
        - "SpecializedMaterialBay"
        - "SpecializedMediumShipHold"
        - "SpecializedMineralHold"
        - "SpecializedOreHold"
        - "SpecializedPlanetaryCommoditiesHold"
        - "SpecializedSalvageHold"
        - "SpecializedShipHold"
        - "SpecializedSmallShipHold"
        - "StructureActive"
        - "StructureFuel"
        - "StructureInactive"
        - "StructureOffline"
        - "SubSystemBay"
        - "SubSystemSlot0"
        - "SubSystemSlot1"
        - "SubSystemSlot2"
        - "SubSystemSlot3"
        - "SubSystemSlot4"
        - "SubSystemSlot5"
        - "SubSystemSlot6"
        - "SubSystemSlot7"
        - "Unlocked"
        - "Wallet"
        - "Wardrobe"
      location_id:
        type: "integer"
        format: "int64"
        description: "References a station, a ship or an item_id if this blueprint\
          \ is located within a container."
        title: "get_corporations_corporation_id_blueprints_location_id"
      material_efficiency:
        type: "integer"
        format: "int32"
        description: "Material Efficiency Level of the blueprint."
        title: "get_corporations_corporation_id_blueprints_material_efficiency"
        minimum: 0
        maximum: 25
      quantity:
        type: "integer"
        format: "int32"
        description: "A range of numbers with a minimum of -2 and no maximum value\
          \ where -1 is an original and -2 is a copy. It can be a positive integer\
          \ if it is a stack of blueprint originals fresh from the market (e.g. no\
          \ activities performed on them yet)."
        title: "get_corporations_corporation_id_blueprints_quantity"
        minimum: -2
      runs:
        type: "integer"
        format: "int32"
        description: "Number of runs remaining if the blueprint is a copy, -1 if it\
          \ is an original."
        title: "get_corporations_corporation_id_blueprints_runs"
        minimum: -1
      time_efficiency:
        type: "integer"
        format: "int32"
        description: "Time Efficiency Level of the blueprint."
        title: "get_corporations_corporation_id_blueprints_time_efficiency"
        minimum: 0
        maximum: 20
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_corporations_corporation_id_blueprints_type_id"
    description: "200 ok object"
  get_corporations_corporation_id_contacts_200_ok:
    required:
    - "contact_id"
    - "contact_type"
    - "standing"
    properties:
      contact_id:
        type: "integer"
        format: "int32"
        description: "contact_id integer"
        title: "get_corporations_corporation_id_contacts_contact_id"
      contact_type:
        type: "string"
        description: "contact_type string"
        title: "get_corporations_corporation_id_contacts_contact_type"
        enum:
        - "character"
        - "corporation"
        - "alliance"
        - "faction"
      is_watched:
        type: "boolean"
        description: "Whether this contact is being watched"
        title: "get_corporations_corporation_id_contacts_is_watched"
      label_ids:
        type: "array"
        description: "label_ids array"
        title: "get_corporations_corporation_id_contacts_label_ids"
        items:
          type: "integer"
          format: "int64"
          description: "Label IDs applied to the contact"
          title: "get_corporations_corporation_id_contacts_label_id"
        maxItems: 63
      standing:
        type: "number"
        format: "float"
        description: "Standing of the contact"
        title: "get_corporations_corporation_id_contacts_standing"
    description: "200 ok object"
  get_corporations_corporation_id_containers_logs_200_ok:
    required:
    - "action"
    - "character_id"
    - "container_id"
    - "container_type_id"
    - "location_flag"
    - "location_id"
    - "logged_at"
    properties:
      action:
        type: "string"
        description: "action string"
        title: "get_corporations_corporation_id_containers_logs_action"
        enum:
        - "add"
        - "assemble"
        - "configure"
        - "enter_password"
        - "lock"
        - "move"
        - "repackage"
        - "set_name"
        - "set_password"
        - "unlock"
      character_id:
        type: "integer"
        format: "int32"
        description: "ID of the character who performed the action."
        title: "get_corporations_corporation_id_containers_logs_character_id"
      container_id:
        type: "integer"
        format: "int64"
        description: "ID of the container"
        title: "get_corporations_corporation_id_containers_logs_container_id"
      container_type_id:
        type: "integer"
        format: "int32"
        description: "Type ID of the container"
        title: "get_corporations_corporation_id_containers_logs_container_type_id"
      location_flag:
        type: "string"
        description: "location_flag string"
        title: "get_corporations_corporation_id_containers_logs_location_flag"
        enum:
        - "AssetSafety"
        - "AutoFit"
        - "Bonus"
        - "Booster"
        - "BoosterBay"
        - "Capsule"
        - "Cargo"
        - "CorpDeliveries"
        - "CorpSAG1"
        - "CorpSAG2"
        - "CorpSAG3"
        - "CorpSAG4"
        - "CorpSAG5"
        - "CorpSAG6"
        - "CorpSAG7"
        - "CrateLoot"
        - "Deliveries"
        - "DroneBay"
        - "DustBattle"
        - "DustDatabank"
        - "FighterBay"
        - "FighterTube0"
        - "FighterTube1"
        - "FighterTube2"
        - "FighterTube3"
        - "FighterTube4"
        - "FleetHangar"
        - "FrigateEscapeBay"
        - "Hangar"
        - "HangarAll"
        - "HiSlot0"
        - "HiSlot1"
        - "HiSlot2"
        - "HiSlot3"
        - "HiSlot4"
        - "HiSlot5"
        - "HiSlot6"
        - "HiSlot7"
        - "HiddenModifiers"
        - "Implant"
        - "Impounded"
        - "JunkyardReprocessed"
        - "JunkyardTrashed"
        - "LoSlot0"
        - "LoSlot1"
        - "LoSlot2"
        - "LoSlot3"
        - "LoSlot4"
        - "LoSlot5"
        - "LoSlot6"
        - "LoSlot7"
        - "Locked"
        - "MedSlot0"
        - "MedSlot1"
        - "MedSlot2"
        - "MedSlot3"
        - "MedSlot4"
        - "MedSlot5"
        - "MedSlot6"
        - "MedSlot7"
        - "OfficeFolder"
        - "Pilot"
        - "PlanetSurface"
        - "QuafeBay"
        - "QuantumCoreRoom"
        - "Reward"
        - "RigSlot0"
        - "RigSlot1"
        - "RigSlot2"
        - "RigSlot3"
        - "RigSlot4"
        - "RigSlot5"
        - "RigSlot6"
        - "RigSlot7"
        - "SecondaryStorage"
        - "ServiceSlot0"
        - "ServiceSlot1"
        - "ServiceSlot2"
        - "ServiceSlot3"
        - "ServiceSlot4"
        - "ServiceSlot5"
        - "ServiceSlot6"
        - "ServiceSlot7"
        - "ShipHangar"
        - "ShipOffline"
        - "Skill"
        - "SkillInTraining"
        - "SpecializedAmmoHold"
        - "SpecializedCommandCenterHold"
        - "SpecializedFuelBay"
        - "SpecializedGasHold"
        - "SpecializedIndustrialShipHold"
        - "SpecializedLargeShipHold"
        - "SpecializedMaterialBay"
        - "SpecializedMediumShipHold"
        - "SpecializedMineralHold"
        - "SpecializedOreHold"
        - "SpecializedPlanetaryCommoditiesHold"
        - "SpecializedSalvageHold"
        - "SpecializedShipHold"
        - "SpecializedSmallShipHold"
        - "StructureActive"
        - "StructureFuel"
        - "StructureInactive"
        - "StructureOffline"
        - "SubSystemBay"
        - "SubSystemSlot0"
        - "SubSystemSlot1"
        - "SubSystemSlot2"
        - "SubSystemSlot3"
        - "SubSystemSlot4"
        - "SubSystemSlot5"
        - "SubSystemSlot6"
        - "SubSystemSlot7"
        - "Unlocked"
        - "Wallet"
        - "Wardrobe"
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_corporations_corporation_id_containers_logs_location_id"
      logged_at:
        type: "string"
        format: "date-time"
        description: "Timestamp when this log was created"
        title: "get_corporations_corporation_id_containers_logs_logged_at"
      new_config_bitmask:
        type: "integer"
        format: "int32"
        description: "new_config_bitmask integer"
        title: "get_corporations_corporation_id_containers_logs_new_config_bitmask"
      old_config_bitmask:
        type: "integer"
        format: "int32"
        description: "old_config_bitmask integer"
        title: "get_corporations_corporation_id_containers_logs_old_config_bitmask"
      password_type:
        type: "string"
        description: "Type of password set if action is of type SetPassword or EnterPassword"
        title: "get_corporations_corporation_id_containers_logs_password_type"
        enum:
        - "config"
        - "general"
      quantity:
        type: "integer"
        format: "int32"
        description: "Quantity of the item being acted upon"
        title: "get_corporations_corporation_id_containers_logs_quantity"
      type_id:
        type: "integer"
        format: "int32"
        description: "Type ID of the item being acted upon"
        title: "get_corporations_corporation_id_containers_logs_type_id"
    description: "200 ok object"
  get_corporations_corporation_id_divisions_hangar_hangar:
    properties:
      division:
        type: "integer"
        format: "int32"
        description: "division integer"
        title: "get_corporations_corporation_id_divisions_division"
        minimum: 1
        maximum: 7
      name:
        type: "string"
        description: "name string"
        title: "get_corporations_corporation_id_divisions_name"
        maxLength: 50
    description: "hangar object"
  get_corporations_corporation_id_divisions_wallet_wallet:
    properties:
      division:
        type: "integer"
        format: "int32"
        description: "division integer"
        title: "get_corporations_corporation_id_divisions_wallet_division"
        minimum: 1
        maximum: 7
      name:
        type: "string"
        description: "name string"
        title: "get_corporations_corporation_id_divisions_wallet_name"
        maxLength: 50
    description: "wallet object"
  get_corporations_corporation_id_divisions_ok:
    properties:
      hangar:
        type: "array"
        description: "hangar array"
        title: "get_corporations_corporation_id_divisions_hangar"
        items:
          $ref: "#/definitions/get_corporations_corporation_id_divisions_hangar_hangar"
        maxItems: 7
      wallet:
        type: "array"
        description: "wallet array"
        title: "get_corporations_corporation_id_divisions_wallet"
        items:
          $ref: "#/definitions/get_corporations_corporation_id_divisions_wallet_wallet"
        maxItems: 7
    description: "200 ok object"
  get_corporations_corporation_id_facilities_200_ok:
    required:
    - "facility_id"
    - "system_id"
    - "type_id"
    properties:
      facility_id:
        type: "integer"
        format: "int64"
        description: "facility_id integer"
        title: "get_corporations_corporation_id_facilities_facility_id"
      system_id:
        type: "integer"
        format: "int32"
        description: "system_id integer"
        title: "get_corporations_corporation_id_facilities_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_corporations_corporation_id_facilities_type_id"
    description: "200 ok object"
  get_corporations_corporation_id_fw_stats_kills:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's total number of kills by members of the given corporation\
          \ against enemy factions"
        title: "get_corporations_corporation_id_fw_stats_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total number of kills by members of the given corporation against\
          \ enemy factions since the corporation enlisted"
        title: "get_corporations_corporation_id_fw_stats_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's total number of kills by members of the given corporation\
          \ against enemy factions"
        title: "get_corporations_corporation_id_fw_stats_yesterday"
    description: "Summary of kills done by the given corporation against enemy factions"
  get_corporations_corporation_id_fw_stats_victory_points:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's victory points gained by members of the given corporation"
        title: "get_corporations_corporation_id_fw_stats_victory_points_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total victory points gained since the given corporation enlisted"
        title: "get_corporations_corporation_id_fw_stats_victory_points_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's victory points gained by members of the given corporation"
        title: "get_corporations_corporation_id_fw_stats_victory_points_yesterday"
    description: "Summary of victory points gained by the given corporation for the\
      \ enlisted faction"
  get_corporations_corporation_id_fw_stats_ok:
    required:
    - "kills"
    - "victory_points"
    properties:
      enlisted_on:
        type: "string"
        format: "date-time"
        description: "The enlistment date of the given corporation into faction warfare.\
          \ Will not be included if corporation is not enlisted in faction warfare"
        title: "get_corporations_corporation_id_fw_stats_enlisted_on"
      faction_id:
        type: "integer"
        format: "int32"
        description: "The faction the given corporation is enlisted to fight for.\
          \ Will not be included if corporation is not enlisted in faction warfare"
        title: "get_corporations_corporation_id_fw_stats_faction_id"
      kills:
        $ref: "#/definitions/get_corporations_corporation_id_fw_stats_kills"
      pilots:
        type: "integer"
        format: "int32"
        description: "How many pilots the enlisted corporation has. Will not be included\
          \ if corporation is not enlisted in faction warfare"
        title: "get_corporations_corporation_id_fw_stats_pilots"
      victory_points:
        $ref: "#/definitions/get_corporations_corporation_id_fw_stats_victory_points"
    description: "200 ok object"
  get_corporations_corporation_id_icons_ok:
    properties:
      px128x128:
        type: "string"
        description: "px128x128 string"
        title: "get_corporations_corporation_id_icons_px128x128"
      px256x256:
        type: "string"
        description: "px256x256 string"
        title: "get_corporations_corporation_id_icons_px256x256"
      px64x64:
        type: "string"
        description: "px64x64 string"
        title: "get_corporations_corporation_id_icons_px64x64"
    description: "200 ok object"
  get_corporations_corporation_id_icons_not_found:
    properties:
      error:
        type: "string"
        description: "error message"
        title: "get_corporations_corporation_id_icons_error"
    description: "No image server for this datasource"
  get_corporations_corporation_id_medals_200_ok:
    required:
    - "created_at"
    - "creator_id"
    - "description"
    - "medal_id"
    - "title"
    properties:
      created_at:
        type: "string"
        format: "date-time"
        description: "created_at string"
        title: "get_corporations_corporation_id_medals_created_at"
      creator_id:
        type: "integer"
        format: "int32"
        description: "ID of the character who created this medal"
        title: "get_corporations_corporation_id_medals_creator_id"
      description:
        type: "string"
        description: "description string"
        title: "get_corporations_corporation_id_medals_description"
        maxLength: 1000
      medal_id:
        type: "integer"
        format: "int32"
        description: "medal_id integer"
        title: "get_corporations_corporation_id_medals_medal_id"
      title:
        type: "string"
        description: "title string"
        title: "get_corporations_corporation_id_medals_title"
        maxLength: 100
    description: "200 ok object"
  get_corporations_corporation_id_medals_issued_200_ok:
    required:
    - "character_id"
    - "issued_at"
    - "issuer_id"
    - "medal_id"
    - "reason"
    - "status"
    properties:
      character_id:
        type: "integer"
        format: "int32"
        description: "ID of the character who was rewarded this medal"
        title: "get_corporations_corporation_id_medals_issued_character_id"
      issued_at:
        type: "string"
        format: "date-time"
        description: "issued_at string"
        title: "get_corporations_corporation_id_medals_issued_issued_at"
      issuer_id:
        type: "integer"
        format: "int32"
        description: "ID of the character who issued the medal"
        title: "get_corporations_corporation_id_medals_issued_issuer_id"
      medal_id:
        type: "integer"
        format: "int32"
        description: "medal_id integer"
        title: "get_corporations_corporation_id_medals_issued_medal_id"
      reason:
        type: "string"
        description: "reason string"
        title: "get_corporations_corporation_id_medals_issued_reason"
        maxLength: 1000
      status:
        type: "string"
        description: "status string"
        title: "get_corporations_corporation_id_medals_issued_status"
        enum:
        - "private"
        - "public"
    description: "200 ok object"
  get_corporations_corporation_id_members_200_ok:
    required:
    - "character_id"
    properties:
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_corporations_corporation_id_members_character_id"
    description: "200 ok object"
  get_corporations_corporation_id_members_titles_200_ok:
    required:
    - "character_id"
    - "titles"
    properties:
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_corporations_corporation_id_members_titles_character_id"
      titles:
        type: "array"
        description: "A list of title_id"
        title: "get_corporations_corporation_id_members_titles_titles"
        items:
          type: "integer"
          format: "int32"
          description: "title integer"
          title: "get_corporations_corporation_id_members_titles_title"
        maxItems: 16
    description: "200 ok object"
  get_corporations_corporation_id_membertracking_200_ok:
    required:
    - "character_id"
    properties:
      base_id:
        type: "integer"
        format: "int32"
        description: "base_id integer"
        title: "get_corporations_corporation_id_membertracking_base_id"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_corporations_corporation_id_membertracking_character_id"
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_corporations_corporation_id_membertracking_location_id"
      logoff_date:
        type: "string"
        format: "date-time"
        description: "logoff_date string"
        title: "get_corporations_corporation_id_membertracking_logoff_date"
      logon_date:
        type: "string"
        format: "date-time"
        description: "logon_date string"
        title: "get_corporations_corporation_id_membertracking_logon_date"
      ship_type_id:
        type: "integer"
        format: "int32"
        description: "ship_type_id integer"
        title: "get_corporations_corporation_id_membertracking_ship_type_id"
      start_date:
        type: "string"
        format: "date-time"
        description: "start_date string"
        title: "get_corporations_corporation_id_membertracking_start_date"
    description: "200 ok object"
  get_corporations_corporation_id_orders_200_ok:
    required:
    - "duration"
    - "issued"
    - "location_id"
    - "order_id"
    - "price"
    - "range"
    - "region_id"
    - "type_id"
    - "volume_remain"
    - "volume_total"
    - "wallet_division"
    properties:
      duration:
        type: "integer"
        format: "int32"
        description: "Number of days for which order is valid (starting from the issued\
          \ date). An order expires at time issued + duration"
        title: "get_corporations_corporation_id_orders_duration"
      escrow:
        type: "number"
        format: "double"
        description: "For buy orders, the amount of ISK in escrow"
        title: "get_corporations_corporation_id_orders_escrow"
      is_buy_order:
        type: "boolean"
        description: "True if the order is a bid (buy) order"
        title: "get_corporations_corporation_id_orders_is_buy_order"
      issued:
        type: "string"
        format: "date-time"
        description: "Date and time when this order was issued"
        title: "get_corporations_corporation_id_orders_issued"
      location_id:
        type: "integer"
        format: "int64"
        description: "ID of the location where order was placed"
        title: "get_corporations_corporation_id_orders_location_id"
      min_volume:
        type: "integer"
        format: "int32"
        description: "For buy orders, the minimum quantity that will be accepted in\
          \ a matching sell order"
        title: "get_corporations_corporation_id_orders_min_volume"
      order_id:
        type: "integer"
        format: "int64"
        description: "Unique order ID"
        title: "get_corporations_corporation_id_orders_order_id"
      price:
        type: "number"
        format: "double"
        description: "Cost per unit for this order"
        title: "get_corporations_corporation_id_orders_price"
      range:
        type: "string"
        description: "Valid order range, numbers are ranges in jumps"
        title: "get_corporations_corporation_id_orders_range"
        enum:
        - "1"
        - "10"
        - "2"
        - "20"
        - "3"
        - "30"
        - "4"
        - "40"
        - "5"
        - "region"
        - "solarsystem"
        - "station"
      region_id:
        type: "integer"
        format: "int32"
        description: "ID of the region where order was placed"
        title: "get_corporations_corporation_id_orders_region_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "The type ID of the item transacted in this order"
        title: "get_corporations_corporation_id_orders_type_id"
      volume_remain:
        type: "integer"
        format: "int32"
        description: "Quantity of items still required or offered"
        title: "get_corporations_corporation_id_orders_volume_remain"
      volume_total:
        type: "integer"
        format: "int32"
        description: "Quantity of items required or offered at time order was placed"
        title: "get_corporations_corporation_id_orders_volume_total"
      wallet_division:
        type: "integer"
        format: "int32"
        description: "The corporation wallet division used for this order."
        title: "get_corporations_corporation_id_orders_wallet_division"
        minimum: 1
        maximum: 7
    description: "200 ok object"
  get_corporations_corporation_id_orders_history_200_ok:
    required:
    - "duration"
    - "issued"
    - "location_id"
    - "order_id"
    - "price"
    - "range"
    - "region_id"
    - "state"
    - "type_id"
    - "volume_remain"
    - "volume_total"
    - "wallet_division"
    properties:
      duration:
        type: "integer"
        format: "int32"
        description: "Number of days the order was valid for (starting from the issued\
          \ date). An order expires at time issued + duration"
        title: "get_corporations_corporation_id_orders_history_duration"
      escrow:
        type: "number"
        format: "double"
        description: "For buy orders, the amount of ISK in escrow"
        title: "get_corporations_corporation_id_orders_history_escrow"
      is_buy_order:
        type: "boolean"
        description: "True if the order is a bid (buy) order"
        title: "get_corporations_corporation_id_orders_history_is_buy_order"
      issued:
        type: "string"
        format: "date-time"
        description: "Date and time when this order was issued"
        title: "get_corporations_corporation_id_orders_history_issued"
      issued_by:
        type: "integer"
        format: "int32"
        description: "The character who issued this order"
        title: "get_corporations_corporation_id_orders_history_issued_by"
      location_id:
        type: "integer"
        format: "int64"
        description: "ID of the location where order was placed"
        title: "get_corporations_corporation_id_orders_history_location_id"
      min_volume:
        type: "integer"
        format: "int32"
        description: "For buy orders, the minimum quantity that will be accepted in\
          \ a matching sell order"
        title: "get_corporations_corporation_id_orders_history_min_volume"
      order_id:
        type: "integer"
        format: "int64"
        description: "Unique order ID"
        title: "get_corporations_corporation_id_orders_history_order_id"
      price:
        type: "number"
        format: "double"
        description: "Cost per unit for this order"
        title: "get_corporations_corporation_id_orders_history_price"
      range:
        type: "string"
        description: "Valid order range, numbers are ranges in jumps"
        title: "get_corporations_corporation_id_orders_history_range"
        enum:
        - "1"
        - "10"
        - "2"
        - "20"
        - "3"
        - "30"
        - "4"
        - "40"
        - "5"
        - "region"
        - "solarsystem"
        - "station"
      region_id:
        type: "integer"
        format: "int32"
        description: "ID of the region where order was placed"
        title: "get_corporations_corporation_id_orders_history_region_id"
      state:
        type: "string"
        description: "Current order state"
        title: "get_corporations_corporation_id_orders_history_state"
        enum:
        - "cancelled"
        - "expired"
      type_id:
        type: "integer"
        format: "int32"
        description: "The type ID of the item transacted in this order"
        title: "get_corporations_corporation_id_orders_history_type_id"
      volume_remain:
        type: "integer"
        format: "int32"
        description: "Quantity of items still required or offered"
        title: "get_corporations_corporation_id_orders_history_volume_remain"
      volume_total:
        type: "integer"
        format: "int32"
        description: "Quantity of items required or offered at time order was placed"
        title: "get_corporations_corporation_id_orders_history_volume_total"
      wallet_division:
        type: "integer"
        format: "int32"
        description: "The corporation wallet division used for this order"
        title: "get_corporations_corporation_id_orders_history_wallet_division"
        minimum: 1
        maximum: 7
    description: "200 ok object"
  get_corporations_corporation_id_roles_200_ok:
    required:
    - "character_id"
    properties:
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_corporations_corporation_id_roles_character_id"
      grantable_roles:
        type: "array"
        description: "grantable_roles array"
        title: "get_corporations_corporation_id_roles_grantable_roles"
        items:
          type: "string"
          description: "grantable_role string"
          title: "get_corporations_corporation_id_roles_grantable_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_base:
        type: "array"
        description: "grantable_roles_at_base array"
        title: "get_corporations_corporation_id_roles_grantable_roles_at_base"
        items:
          type: "string"
          description: "grantable_roles_at_base string"
          title: "get_corporations_corporation_id_roles_grantable_roles_at_base_grantable_roles_at_base"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_hq:
        type: "array"
        description: "grantable_roles_at_hq array"
        title: "get_corporations_corporation_id_roles_grantable_roles_at_hq"
        items:
          type: "string"
          description: "grantable_roles_at_hq string"
          title: "get_corporations_corporation_id_roles_grantable_roles_at_hq_grantable_roles_at_hq"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_other:
        type: "array"
        description: "grantable_roles_at_other array"
        title: "get_corporations_corporation_id_roles_grantable_roles_at_other"
        items:
          type: "string"
          description: "grantable_roles_at_other string"
          title: "get_corporations_corporation_id_roles_grantable_roles_at_other_grantable_roles_at_other"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles:
        type: "array"
        description: "roles array"
        title: "get_corporations_corporation_id_roles_roles"
        items:
          type: "string"
          description: "role string"
          title: "get_corporations_corporation_id_roles_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_base:
        type: "array"
        description: "roles_at_base array"
        title: "get_corporations_corporation_id_roles_roles_at_base"
        items:
          type: "string"
          description: "roles_at_base string"
          title: "get_corporations_corporation_id_roles_roles_at_base_roles_at_base"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_hq:
        type: "array"
        description: "roles_at_hq array"
        title: "get_corporations_corporation_id_roles_roles_at_hq"
        items:
          type: "string"
          description: "roles_at_hq string"
          title: "get_corporations_corporation_id_roles_roles_at_hq_roles_at_hq"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_other:
        type: "array"
        description: "roles_at_other array"
        title: "get_corporations_corporation_id_roles_roles_at_other"
        items:
          type: "string"
          description: "roles_at_other string"
          title: "get_corporations_corporation_id_roles_roles_at_other_roles_at_other"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
    description: "200 ok object"
  get_corporations_corporation_id_roles_history_200_ok:
    required:
    - "changed_at"
    - "character_id"
    - "issuer_id"
    - "new_roles"
    - "old_roles"
    - "role_type"
    properties:
      changed_at:
        type: "string"
        format: "date-time"
        description: "changed_at string"
        title: "get_corporations_corporation_id_roles_history_changed_at"
      character_id:
        type: "integer"
        format: "int32"
        description: "The character whose roles are changed"
        title: "get_corporations_corporation_id_roles_history_character_id"
      issuer_id:
        type: "integer"
        format: "int32"
        description: "ID of the character who issued this change"
        title: "get_corporations_corporation_id_roles_history_issuer_id"
      new_roles:
        type: "array"
        description: "new_roles array"
        title: "get_corporations_corporation_id_roles_history_new_roles"
        items:
          type: "string"
          description: "new_role string"
          title: "get_corporations_corporation_id_roles_history_new_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      old_roles:
        type: "array"
        description: "old_roles array"
        title: "get_corporations_corporation_id_roles_history_old_roles"
        items:
          type: "string"
          description: "old_role string"
          title: "get_corporations_corporation_id_roles_history_old_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      role_type:
        type: "string"
        description: "role_type string"
        title: "get_corporations_corporation_id_roles_history_role_type"
        enum:
        - "grantable_roles"
        - "grantable_roles_at_base"
        - "grantable_roles_at_hq"
        - "grantable_roles_at_other"
        - "roles"
        - "roles_at_base"
        - "roles_at_hq"
        - "roles_at_other"
    description: "200 ok object"
  get_corporations_corporation_id_standings_200_ok:
    required:
    - "from_id"
    - "from_type"
    - "standing"
    properties:
      from_id:
        type: "integer"
        format: "int32"
        description: "from_id integer"
        title: "get_corporations_corporation_id_standings_from_id"
      from_type:
        type: "string"
        description: "from_type string"
        title: "get_corporations_corporation_id_standings_from_type"
        enum:
        - "agent"
        - "npc_corp"
        - "faction"
      standing:
        type: "number"
        format: "float"
        description: "standing number"
        title: "get_corporations_corporation_id_standings_standing"
    description: "200 ok object"
  get_corporations_corporation_id_starbases_200_ok:
    required:
    - "starbase_id"
    - "system_id"
    - "type_id"
    properties:
      moon_id:
        type: "integer"
        format: "int32"
        description: "The moon this starbase (POS) is anchored on, unanchored POSes\
          \ do not have this information"
        title: "get_corporations_corporation_id_starbases_moon_id"
      onlined_since:
        type: "string"
        format: "date-time"
        description: "When the POS onlined, for starbases (POSes) in online state"
        title: "get_corporations_corporation_id_starbases_onlined_since"
      reinforced_until:
        type: "string"
        format: "date-time"
        description: "When the POS will be out of reinforcement, for starbases (POSes)\
          \ in reinforced state"
        title: "get_corporations_corporation_id_starbases_reinforced_until"
      starbase_id:
        type: "integer"
        format: "int64"
        description: "Unique ID for this starbase (POS)"
        title: "get_corporations_corporation_id_starbases_starbase_id"
      state:
        type: "string"
        description: "state string"
        title: "get_corporations_corporation_id_starbases_state"
        enum:
        - "offline"
        - "online"
        - "onlining"
        - "reinforced"
        - "unanchoring"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this starbase (POS) is in, unanchored POSes\
          \ have this information"
        title: "get_corporations_corporation_id_starbases_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "Starbase (POS) type"
        title: "get_corporations_corporation_id_starbases_type_id"
      unanchor_at:
        type: "string"
        format: "date-time"
        description: "When the POS started unanchoring, for starbases (POSes) in unanchoring\
          \ state"
        title: "get_corporations_corporation_id_starbases_unanchor_at"
    description: "200 ok object"
  get_corporations_corporation_id_starbases_starbase_id_fuel:
    required:
    - "quantity"
    - "type_id"
    properties:
      quantity:
        type: "integer"
        format: "int32"
        description: "quantity integer"
        title: "get_corporations_corporation_id_starbases_starbase_id_quantity"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_corporations_corporation_id_starbases_starbase_id_type_id"
    description: "fuel object"
  get_corporations_corporation_id_starbases_starbase_id_ok:
    required:
    - "allow_alliance_members"
    - "allow_corporation_members"
    - "anchor"
    - "attack_if_at_war"
    - "attack_if_other_security_status_dropping"
    - "fuel_bay_take"
    - "fuel_bay_view"
    - "offline"
    - "online"
    - "unanchor"
    - "use_alliance_standings"
    properties:
      allow_alliance_members:
        type: "boolean"
        description: "allow_alliance_members boolean"
        title: "get_corporations_corporation_id_starbases_starbase_id_allow_alliance_members"
      allow_corporation_members:
        type: "boolean"
        description: "allow_corporation_members boolean"
        title: "get_corporations_corporation_id_starbases_starbase_id_allow_corporation_members"
      anchor:
        type: "string"
        description: "Who can anchor starbase (POS) and its structures"
        title: "get_corporations_corporation_id_starbases_starbase_id_anchor"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      attack_if_at_war:
        type: "boolean"
        description: "attack_if_at_war boolean"
        title: "get_corporations_corporation_id_starbases_starbase_id_attack_if_at_war"
      attack_if_other_security_status_dropping:
        type: "boolean"
        description: "attack_if_other_security_status_dropping boolean"
        title: "get_corporations_corporation_id_starbases_starbase_id_attack_if_other_security_status_dropping"
      attack_security_status_threshold:
        type: "number"
        format: "float"
        description: "Starbase (POS) will attack if target's security standing is\
          \ lower than this value"
        title: "get_corporations_corporation_id_starbases_starbase_id_attack_security_status_threshold"
      attack_standing_threshold:
        type: "number"
        format: "float"
        description: "Starbase (POS) will attack if target's standing is lower than\
          \ this value"
        title: "get_corporations_corporation_id_starbases_starbase_id_attack_standing_threshold"
      fuel_bay_take:
        type: "string"
        description: "Who can take fuel blocks out of the starbase (POS)'s fuel bay"
        title: "get_corporations_corporation_id_starbases_starbase_id_fuel_bay_take"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      fuel_bay_view:
        type: "string"
        description: "Who can view the starbase (POS)'s fule bay. Characters either\
          \ need to have required role or belong to the starbase (POS) owner's corporation\
          \ or alliance, as described by the enum, all other access settings follows\
          \ the same scheme"
        title: "get_corporations_corporation_id_starbases_starbase_id_fuel_bay_view"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      fuels:
        type: "array"
        description: "Fuel blocks and other things that will be consumed when operating\
          \ a starbase (POS)"
        title: "get_corporations_corporation_id_starbases_starbase_id_fuels"
        items:
          $ref: "#/definitions/get_corporations_corporation_id_starbases_starbase_id_fuel"
        maxItems: 20
      offline:
        type: "string"
        description: "Who can offline starbase (POS) and its structures"
        title: "get_corporations_corporation_id_starbases_starbase_id_offline"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      online:
        type: "string"
        description: "Who can online starbase (POS) and its structures"
        title: "get_corporations_corporation_id_starbases_starbase_id_online"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      unanchor:
        type: "string"
        description: "Who can unanchor starbase (POS) and its structures"
        title: "get_corporations_corporation_id_starbases_starbase_id_unanchor"
        enum:
        - "alliance_member"
        - "config_starbase_equipment_role"
        - "corporation_member"
        - "starbase_fuel_technician_role"
      use_alliance_standings:
        type: "boolean"
        description: "True if the starbase (POS) is using alliance standings, otherwise\
          \ using corporation's"
        title: "get_corporations_corporation_id_starbases_starbase_id_use_alliance_standings"
    description: "200 ok object"
  get_corporations_corporation_id_structures_service:
    required:
    - "name"
    - "state"
    properties:
      name:
        type: "string"
        description: "name string"
        title: "get_corporations_corporation_id_structures_name"
      state:
        type: "string"
        description: "state string"
        title: "get_corporations_corporation_id_structures_service_state"
        enum:
        - "online"
        - "offline"
        - "cleanup"
    description: "service object"
  get_corporations_corporation_id_structures_200_ok:
    required:
    - "corporation_id"
    - "profile_id"
    - "reinforce_hour"
    - "reinforce_weekday"
    - "state"
    - "structure_id"
    - "system_id"
    - "type_id"
    properties:
      corporation_id:
        type: "integer"
        format: "int32"
        description: "ID of the corporation that owns the structure"
        title: "get_corporations_corporation_id_structures_corporation_id"
      fuel_expires:
        type: "string"
        format: "date-time"
        description: "Date on which the structure will run out of fuel"
        title: "get_corporations_corporation_id_structures_fuel_expires"
      next_reinforce_apply:
        type: "string"
        format: "date-time"
        description: "The date and time when the structure's newly requested reinforcement\
          \ times (e.g. next_reinforce_hour and next_reinforce_day) will take effect"
        title: "get_corporations_corporation_id_structures_next_reinforce_apply"
      next_reinforce_hour:
        type: "integer"
        format: "int32"
        description: "The requested change to reinforce_hour that will take effect\
          \ at the time shown by next_reinforce_apply"
        title: "get_corporations_corporation_id_structures_next_reinforce_hour"
        minimum: 0
        maximum: 23
      next_reinforce_weekday:
        type: "integer"
        format: "int32"
        description: "The requested change to reinforce_weekday that will take effect\
          \ at the time shown by next_reinforce_apply"
        title: "get_corporations_corporation_id_structures_next_reinforce_weekday"
        minimum: 0
        maximum: 6
      profile_id:
        type: "integer"
        format: "int32"
        description: "The id of the ACL profile for this citadel"
        title: "get_corporations_corporation_id_structures_profile_id"
      reinforce_hour:
        type: "integer"
        format: "int32"
        description: "The hour of day that determines the four hour window when the\
          \ structure will randomly exit its reinforcement periods and become vulnerable\
          \ to attack against its armor and/or hull. The structure will become vulnerable\
          \ at a random time that is +/- 2 hours centered on the value of this property"
        title: "get_corporations_corporation_id_structures_reinforce_hour"
        minimum: 0
        maximum: 23
      reinforce_weekday:
        type: "integer"
        format: "int32"
        description: "The day of the week when the structure exits its final reinforcement\
          \ period and becomes vulnerable to attack against its hull. Monday is 0\
          \ and Sunday is 6"
        title: "get_corporations_corporation_id_structures_reinforce_weekday"
        minimum: 0
        maximum: 6
      services:
        type: "array"
        description: "Contains a list of service upgrades, and their state"
        title: "get_corporations_corporation_id_structures_services"
        items:
          $ref: "#/definitions/get_corporations_corporation_id_structures_service"
        maxItems: 10
      state:
        type: "string"
        description: "state string"
        title: "get_corporations_corporation_id_structures_state"
        enum:
        - "anchor_vulnerable"
        - "anchoring"
        - "armor_reinforce"
        - "armor_vulnerable"
        - "fitting_invulnerable"
        - "hull_reinforce"
        - "hull_vulnerable"
        - "online_deprecated"
        - "onlining_vulnerable"
        - "shield_vulnerable"
        - "unanchored"
        - "unknown"
      state_timer_end:
        type: "string"
        format: "date-time"
        description: "Date at which the structure will move to it's next state"
        title: "get_corporations_corporation_id_structures_state_timer_end"
      state_timer_start:
        type: "string"
        format: "date-time"
        description: "Date at which the structure entered it's current state"
        title: "get_corporations_corporation_id_structures_state_timer_start"
      structure_id:
        type: "integer"
        format: "int64"
        description: "The Item ID of the structure"
        title: "get_corporations_corporation_id_structures_structure_id"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system the structure is in"
        title: "get_corporations_corporation_id_structures_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "The type id of the structure"
        title: "get_corporations_corporation_id_structures_type_id"
      unanchors_at:
        type: "string"
        format: "date-time"
        description: "Date at which the structure will unanchor"
        title: "get_corporations_corporation_id_structures_unanchors_at"
    description: "200 ok object"
  get_corporations_corporation_id_titles_200_ok:
    properties:
      grantable_roles:
        type: "array"
        description: "grantable_roles array"
        title: "get_corporations_corporation_id_titles_grantable_roles"
        items:
          type: "string"
          description: "grantable_role string"
          title: "get_corporations_corporation_id_titles_grantable_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_base:
        type: "array"
        description: "grantable_roles_at_base array"
        title: "get_corporations_corporation_id_titles_grantable_roles_at_base"
        items:
          type: "string"
          description: "grantable_roles_at_base string"
          title: "get_corporations_corporation_id_titles_grantable_roles_at_base_grantable_roles_at_base"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_hq:
        type: "array"
        description: "grantable_roles_at_hq array"
        title: "get_corporations_corporation_id_titles_grantable_roles_at_hq"
        items:
          type: "string"
          description: "grantable_roles_at_hq string"
          title: "get_corporations_corporation_id_titles_grantable_roles_at_hq_grantable_roles_at_hq"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      grantable_roles_at_other:
        type: "array"
        description: "grantable_roles_at_other array"
        title: "get_corporations_corporation_id_titles_grantable_roles_at_other"
        items:
          type: "string"
          description: "grantable_roles_at_other string"
          title: "get_corporations_corporation_id_titles_grantable_roles_at_other_grantable_roles_at_other"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      name:
        type: "string"
        description: "name string"
        title: "get_corporations_corporation_id_titles_name"
      roles:
        type: "array"
        description: "roles array"
        title: "get_corporations_corporation_id_titles_roles"
        items:
          type: "string"
          description: "role string"
          title: "get_corporations_corporation_id_titles_role"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_base:
        type: "array"
        description: "roles_at_base array"
        title: "get_corporations_corporation_id_titles_roles_at_base"
        items:
          type: "string"
          description: "roles_at_base string"
          title: "get_corporations_corporation_id_titles_roles_at_base_roles_at_base"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_hq:
        type: "array"
        description: "roles_at_hq array"
        title: "get_corporations_corporation_id_titles_roles_at_hq"
        items:
          type: "string"
          description: "roles_at_hq string"
          title: "get_corporations_corporation_id_titles_roles_at_hq_roles_at_hq"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      roles_at_other:
        type: "array"
        description: "roles_at_other array"
        title: "get_corporations_corporation_id_titles_roles_at_other"
        items:
          type: "string"
          description: "roles_at_other string"
          title: "get_corporations_corporation_id_titles_roles_at_other_roles_at_other"
          enum:
          - "Account_Take_1"
          - "Account_Take_2"
          - "Account_Take_3"
          - "Account_Take_4"
          - "Account_Take_5"
          - "Account_Take_6"
          - "Account_Take_7"
          - "Accountant"
          - "Auditor"
          - "Communications_Officer"
          - "Config_Equipment"
          - "Config_Starbase_Equipment"
          - "Container_Take_1"
          - "Container_Take_2"
          - "Container_Take_3"
          - "Container_Take_4"
          - "Container_Take_5"
          - "Container_Take_6"
          - "Container_Take_7"
          - "Contract_Manager"
          - "Diplomat"
          - "Director"
          - "Factory_Manager"
          - "Fitting_Manager"
          - "Hangar_Query_1"
          - "Hangar_Query_2"
          - "Hangar_Query_3"
          - "Hangar_Query_4"
          - "Hangar_Query_5"
          - "Hangar_Query_6"
          - "Hangar_Query_7"
          - "Hangar_Take_1"
          - "Hangar_Take_2"
          - "Hangar_Take_3"
          - "Hangar_Take_4"
          - "Hangar_Take_5"
          - "Hangar_Take_6"
          - "Hangar_Take_7"
          - "Junior_Accountant"
          - "Personnel_Manager"
          - "Rent_Factory_Facility"
          - "Rent_Office"
          - "Rent_Research_Facility"
          - "Security_Officer"
          - "Starbase_Defense_Operator"
          - "Starbase_Fuel_Technician"
          - "Station_Manager"
          - "Trader"
        maxItems: 50
      title_id:
        type: "integer"
        format: "int32"
        description: "title_id integer"
        title: "get_corporations_corporation_id_titles_title_id"
    description: "200 ok object"
  get_corporations_corporation_id_wallets_division_transactions_200_ok:
    required:
    - "client_id"
    - "date"
    - "is_buy"
    - "journal_ref_id"
    - "location_id"
    - "quantity"
    - "transaction_id"
    - "type_id"
    - "unit_price"
    properties:
      client_id:
        type: "integer"
        format: "int32"
        description: "client_id integer"
        title: "get_corporations_corporation_id_wallets_division_transactions_client_id"
      date:
        type: "string"
        format: "date-time"
        description: "Date and time of transaction"
        title: "get_corporations_corporation_id_wallets_division_transactions_date"
      is_buy:
        type: "boolean"
        description: "is_buy boolean"
        title: "get_corporations_corporation_id_wallets_division_transactions_is_buy"
      journal_ref_id:
        type: "integer"
        format: "int64"
        description: "-1 if there is no corresponding wallet journal entry"
        title: "get_corporations_corporation_id_wallets_division_transactions_journal_ref_id"
      location_id:
        type: "integer"
        format: "int64"
        description: "location_id integer"
        title: "get_corporations_corporation_id_wallets_division_transactions_location_id"
      quantity:
        type: "integer"
        format: "int32"
        description: "quantity integer"
        title: "get_corporations_corporation_id_wallets_division_transactions_quantity"
      transaction_id:
        type: "integer"
        format: "int64"
        description: "Unique transaction ID"
        title: "get_corporations_corporation_id_wallets_division_transactions_transaction_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_corporations_corporation_id_wallets_division_transactions_type_id"
      unit_price:
        type: "number"
        format: "double"
        description: "Amount paid per unit"
        title: "get_corporations_corporation_id_wallets_division_transactions_unit_price"
    description: "wallet transaction"
  get_dogma_effects_effect_id_modifier:
    required:
    - "func"
    properties:
      domain:
        type: "string"
        description: "domain string"
        title: "get_dogma_effects_effect_id_domain"
      effect_id:
        type: "integer"
        format: "int32"
        description: "effect_id integer"
        title: "get_dogma_effects_effect_id_modifier_effect_id"
      func:
        type: "string"
        description: "func string"
        title: "get_dogma_effects_effect_id_func"
      modified_attribute_id:
        type: "integer"
        format: "int32"
        description: "modified_attribute_id integer"
        title: "get_dogma_effects_effect_id_modified_attribute_id"
      modifying_attribute_id:
        type: "integer"
        format: "int32"
        description: "modifying_attribute_id integer"
        title: "get_dogma_effects_effect_id_modifying_attribute_id"
      operator:
        type: "integer"
        format: "int32"
        description: "operator integer"
        title: "get_dogma_effects_effect_id_operator"
    description: "modifier object"
  get_dogma_effects_effect_id_ok:
    required:
    - "effect_id"
    properties:
      description:
        type: "string"
        description: "description string"
        title: "get_dogma_effects_effect_id_description"
      disallow_auto_repeat:
        type: "boolean"
        description: "disallow_auto_repeat boolean"
        title: "get_dogma_effects_effect_id_disallow_auto_repeat"
      discharge_attribute_id:
        type: "integer"
        format: "int32"
        description: "discharge_attribute_id integer"
        title: "get_dogma_effects_effect_id_discharge_attribute_id"
      display_name:
        type: "string"
        description: "display_name string"
        title: "get_dogma_effects_effect_id_display_name"
      duration_attribute_id:
        type: "integer"
        format: "int32"
        description: "duration_attribute_id integer"
        title: "get_dogma_effects_effect_id_duration_attribute_id"
      effect_category:
        type: "integer"
        format: "int32"
        description: "effect_category integer"
        title: "get_dogma_effects_effect_id_effect_category"
      effect_id:
        type: "integer"
        format: "int32"
        description: "effect_id integer"
        title: "get_dogma_effects_effect_id_effect_id"
      electronic_chance:
        type: "boolean"
        description: "electronic_chance boolean"
        title: "get_dogma_effects_effect_id_electronic_chance"
      falloff_attribute_id:
        type: "integer"
        format: "int32"
        description: "falloff_attribute_id integer"
        title: "get_dogma_effects_effect_id_falloff_attribute_id"
      icon_id:
        type: "integer"
        format: "int32"
        description: "icon_id integer"
        title: "get_dogma_effects_effect_id_icon_id"
      is_assistance:
        type: "boolean"
        description: "is_assistance boolean"
        title: "get_dogma_effects_effect_id_is_assistance"
      is_offensive:
        type: "boolean"
        description: "is_offensive boolean"
        title: "get_dogma_effects_effect_id_is_offensive"
      is_warp_safe:
        type: "boolean"
        description: "is_warp_safe boolean"
        title: "get_dogma_effects_effect_id_is_warp_safe"
      modifiers:
        type: "array"
        description: "modifiers array"
        title: "get_dogma_effects_effect_id_modifiers"
        items:
          $ref: "#/definitions/get_dogma_effects_effect_id_modifier"
        maxItems: 100
      name:
        type: "string"
        description: "name string"
        title: "get_dogma_effects_effect_id_name"
      post_expression:
        type: "integer"
        format: "int32"
        description: "post_expression integer"
        title: "get_dogma_effects_effect_id_post_expression"
      pre_expression:
        type: "integer"
        format: "int32"
        description: "pre_expression integer"
        title: "get_dogma_effects_effect_id_pre_expression"
      published:
        type: "boolean"
        description: "published boolean"
        title: "get_dogma_effects_effect_id_published"
      range_attribute_id:
        type: "integer"
        format: "int32"
        description: "range_attribute_id integer"
        title: "get_dogma_effects_effect_id_range_attribute_id"
      range_chance:
        type: "boolean"
        description: "range_chance boolean"
        title: "get_dogma_effects_effect_id_range_chance"
      tracking_speed_attribute_id:
        type: "integer"
        format: "int32"
        description: "tracking_speed_attribute_id integer"
        title: "get_dogma_effects_effect_id_tracking_speed_attribute_id"
    description: "200 ok object"
  get_dogma_effects_effect_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_dogma_effects_effect_id_404_not_found"
    description: "Not found"
  get_fw_leaderboards_active_total_active_total:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_amount"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_faction_id"
    description: "active_total object"
  get_fw_leaderboards_last_week_last_week:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_last_week_amount"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_last_week_faction_id"
    description: "last_week object"
  get_fw_leaderboards_yesterday_yesterday:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_yesterday_amount"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_yesterday_faction_id"
    description: "yesterday object"
  get_fw_leaderboards_kills:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 4 ranking of factions active in faction warfare by total\
          \ kills. A faction is considered \"active\" if they have participated in\
          \ faction warfare in the past 14 days"
        title: "get_fw_leaderboards_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_active_total_active_total"
        maxItems: 4
      last_week:
        type: "array"
        description: "Top 4 ranking of factions by kills in the past week"
        title: "get_fw_leaderboards_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_last_week_last_week"
        maxItems: 4
      yesterday:
        type: "array"
        description: "Top 4 ranking of factions by kills in the past day"
        title: "get_fw_leaderboards_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_yesterday_yesterday"
        maxItems: 4
    description: "Top 4 rankings of factions by number of kills from yesterday, last\
      \ week and in total"
  get_fw_leaderboards_active_total_active_total_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_active_total_amount"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_active_total_faction_id"
    description: "active_total object"
  get_fw_leaderboards_last_week_last_week_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_last_week_amount_1"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_last_week_faction_id_1"
    description: "last_week object"
  get_fw_leaderboards_yesterday_yesterday_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_yesterday_amount_1"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_leaderboards_yesterday_faction_id_1"
    description: "yesterday object"
  get_fw_leaderboards_victory_points:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 4 ranking of factions active in faction warfare by total\
          \ victory points. A faction is considered \"active\" if they have participated\
          \ in faction warfare in the past 14 days"
        title: "get_fw_leaderboards_victory_points_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_active_total_active_total_1"
        maxItems: 4
      last_week:
        type: "array"
        description: "Top 4 ranking of factions by victory points in the past week"
        title: "get_fw_leaderboards_victory_points_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_last_week_last_week_1"
        maxItems: 4
      yesterday:
        type: "array"
        description: "Top 4 ranking of factions by victory points in the past day"
        title: "get_fw_leaderboards_victory_points_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_yesterday_yesterday_1"
        maxItems: 4
    description: "Top 4 rankings of factions by victory points from yesterday, last\
      \ week and in total"
  get_fw_leaderboards_ok:
    required:
    - "kills"
    - "victory_points"
    properties:
      kills:
        $ref: "#/definitions/get_fw_leaderboards_kills"
      victory_points:
        $ref: "#/definitions/get_fw_leaderboards_victory_points"
    description: "200 ok object"
  get_fw_leaderboards_characters_active_total_active_total:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_characters_amount"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_character_id"
    description: "active_total object"
  get_fw_leaderboards_characters_last_week_last_week:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_characters_last_week_amount"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_last_week_character_id"
    description: "last_week object"
  get_fw_leaderboards_characters_yesterday_yesterday:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_characters_yesterday_amount"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_yesterday_character_id"
    description: "yesterday object"
  get_fw_leaderboards_characters_kills:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 100 ranking of pilots active in faction warfare by total\
          \ kills. A pilot is considered \"active\" if they have participated in faction\
          \ warfare in the past 14 days"
        title: "get_fw_leaderboards_characters_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_active_total_active_total"
        maxItems: 100
      last_week:
        type: "array"
        description: "Top 100 ranking of pilots by kills in the past week"
        title: "get_fw_leaderboards_characters_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_last_week_last_week"
        maxItems: 100
      yesterday:
        type: "array"
        description: "Top 100 ranking of pilots by kills in the past day"
        title: "get_fw_leaderboards_characters_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_yesterday_yesterday"
        maxItems: 100
    description: "Top 100 rankings of pilots by number of kills from yesterday, last\
      \ week and in total"
  get_fw_leaderboards_characters_active_total_active_total_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_characters_active_total_amount"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_active_total_character_id"
    description: "active_total object"
  get_fw_leaderboards_characters_last_week_last_week_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_characters_last_week_amount_1"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_last_week_character_id_1"
    description: "last_week object"
  get_fw_leaderboards_characters_yesterday_yesterday_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_characters_yesterday_amount_1"
      character_id:
        type: "integer"
        format: "int32"
        description: "character_id integer"
        title: "get_fw_leaderboards_characters_yesterday_character_id_1"
    description: "yesterday object"
  get_fw_leaderboards_characters_victory_points:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 100 ranking of pilots active in faction warfare by total\
          \ victory points. A pilot is considered \"active\" if they have participated\
          \ in faction warfare in the past 14 days"
        title: "get_fw_leaderboards_characters_victory_points_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_active_total_active_total_1"
        maxItems: 100
      last_week:
        type: "array"
        description: "Top 100 ranking of pilots by victory points in the past week"
        title: "get_fw_leaderboards_characters_victory_points_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_last_week_last_week_1"
        maxItems: 100
      yesterday:
        type: "array"
        description: "Top 100 ranking of pilots by victory points in the past day"
        title: "get_fw_leaderboards_characters_victory_points_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_characters_yesterday_yesterday_1"
        maxItems: 100
    description: "Top 100 rankings of pilots by victory points from yesterday, last\
      \ week and in total"
  get_fw_leaderboards_characters_ok:
    required:
    - "kills"
    - "victory_points"
    properties:
      kills:
        $ref: "#/definitions/get_fw_leaderboards_characters_kills"
      victory_points:
        $ref: "#/definitions/get_fw_leaderboards_characters_victory_points"
    description: "200 ok object"
  get_fw_leaderboards_corporations_active_total_active_total:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_corporations_amount"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_corporation_id"
    description: "active_total object"
  get_fw_leaderboards_corporations_last_week_last_week:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_corporations_last_week_amount"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_last_week_corporation_id"
    description: "last_week object"
  get_fw_leaderboards_corporations_yesterday_yesterday:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of kills"
        title: "get_fw_leaderboards_corporations_yesterday_amount"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_yesterday_corporation_id"
    description: "yesterday object"
  get_fw_leaderboards_corporations_kills:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 10 ranking of corporations active in faction warfare by\
          \ total kills. A corporation is considered \"active\" if they have participated\
          \ in faction warfare in the past 14 days"
        title: "get_fw_leaderboards_corporations_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_active_total_active_total"
        maxItems: 10
      last_week:
        type: "array"
        description: "Top 10 ranking of corporations by kills in the past week"
        title: "get_fw_leaderboards_corporations_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_last_week_last_week"
        maxItems: 10
      yesterday:
        type: "array"
        description: "Top 10 ranking of corporations by kills in the past day"
        title: "get_fw_leaderboards_corporations_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_yesterday_yesterday"
        maxItems: 10
    description: "Top 10 rankings of corporations by number of kills from yesterday,\
      \ last week and in total"
  get_fw_leaderboards_corporations_active_total_active_total_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_corporations_active_total_amount"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_active_total_corporation_id"
    description: "active_total object"
  get_fw_leaderboards_corporations_last_week_last_week_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_corporations_last_week_amount_1"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_last_week_corporation_id_1"
    description: "last_week object"
  get_fw_leaderboards_corporations_yesterday_yesterday_1:
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount of victory points"
        title: "get_fw_leaderboards_corporations_yesterday_amount_1"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_fw_leaderboards_corporations_yesterday_corporation_id_1"
    description: "yesterday object"
  get_fw_leaderboards_corporations_victory_points:
    required:
    - "active_total"
    - "last_week"
    - "yesterday"
    properties:
      active_total:
        type: "array"
        description: "Top 10 ranking of corporations active in faction warfare by\
          \ total victory points. A corporation is considered \"active\" if they have\
          \ participated in faction warfare in the past 14 days"
        title: "get_fw_leaderboards_corporations_victory_points_active_total"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_active_total_active_total_1"
        maxItems: 10
      last_week:
        type: "array"
        description: "Top 10 ranking of corporations by victory points in the past\
          \ week"
        title: "get_fw_leaderboards_corporations_victory_points_last_week"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_last_week_last_week_1"
        maxItems: 10
      yesterday:
        type: "array"
        description: "Top 10 ranking of corporations by victory points in the past\
          \ day"
        title: "get_fw_leaderboards_corporations_victory_points_yesterday"
        items:
          $ref: "#/definitions/get_fw_leaderboards_corporations_yesterday_yesterday_1"
        maxItems: 10
    description: "Top 10 rankings of corporations by victory points from yesterday,\
      \ last week and in total"
  get_fw_leaderboards_corporations_ok:
    required:
    - "kills"
    - "victory_points"
    properties:
      kills:
        $ref: "#/definitions/get_fw_leaderboards_corporations_kills"
      victory_points:
        $ref: "#/definitions/get_fw_leaderboards_corporations_victory_points"
    description: "200 ok object"
  get_fw_stats_kills:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's total number of kills against enemy factions"
        title: "get_fw_stats_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total number of kills against enemy factions since faction warfare\
          \ began"
        title: "get_fw_stats_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's total number of kills against enemy factions"
        title: "get_fw_stats_yesterday"
    description: "Summary of kills against an enemy faction for the given faction"
  get_fw_stats_victory_points:
    required:
    - "last_week"
    - "total"
    - "yesterday"
    properties:
      last_week:
        type: "integer"
        format: "int32"
        description: "Last week's victory points gained"
        title: "get_fw_stats_victory_points_last_week"
      total:
        type: "integer"
        format: "int32"
        description: "Total victory points gained since faction warfare began"
        title: "get_fw_stats_victory_points_total"
      yesterday:
        type: "integer"
        format: "int32"
        description: "Yesterday's victory points gained"
        title: "get_fw_stats_victory_points_yesterday"
    description: "Summary of victory points gained for the given faction"
  get_fw_stats_200_ok:
    required:
    - "faction_id"
    - "kills"
    - "pilots"
    - "systems_controlled"
    - "victory_points"
    properties:
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_stats_faction_id"
      kills:
        $ref: "#/definitions/get_fw_stats_kills"
      pilots:
        type: "integer"
        format: "int32"
        description: "How many pilots fight for the given faction"
        title: "get_fw_stats_pilots"
      systems_controlled:
        type: "integer"
        format: "int32"
        description: "The number of solar systems controlled by the given faction"
        title: "get_fw_stats_systems_controlled"
      victory_points:
        $ref: "#/definitions/get_fw_stats_victory_points"
    description: "200 ok object"
  get_fw_systems_200_ok:
    required:
    - "contested"
    - "occupier_faction_id"
    - "owner_faction_id"
    - "solar_system_id"
    - "victory_points"
    - "victory_points_threshold"
    properties:
      contested:
        type: "string"
        description: "contested string"
        title: "get_fw_systems_contested"
        enum:
        - "captured"
        - "contested"
        - "uncontested"
        - "vulnerable"
      occupier_faction_id:
        type: "integer"
        format: "int32"
        description: "occupier_faction_id integer"
        title: "get_fw_systems_occupier_faction_id"
      owner_faction_id:
        type: "integer"
        format: "int32"
        description: "owner_faction_id integer"
        title: "get_fw_systems_owner_faction_id"
      solar_system_id:
        type: "integer"
        format: "int32"
        description: "solar_system_id integer"
        title: "get_fw_systems_solar_system_id"
      victory_points:
        type: "integer"
        format: "int32"
        description: "victory_points integer"
        title: "get_fw_systems_victory_points"
      victory_points_threshold:
        type: "integer"
        format: "int32"
        description: "victory_points_threshold integer"
        title: "get_fw_systems_victory_points_threshold"
    description: "200 ok object"
  get_fw_wars_200_ok:
    required:
    - "against_id"
    - "faction_id"
    properties:
      against_id:
        type: "integer"
        format: "int32"
        description: "The faction ID of the enemy faction."
        title: "get_fw_wars_against_id"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_fw_wars_faction_id"
    description: "200 ok object"
  get_search_ok:
    properties:
      agent:
        type: "array"
        description: "agent array"
        title: "get_search_agent"
        items:
          type: "integer"
          format: "int32"
          description: "agent integer"
          title: "get_search_agent_agent"
        maxItems: 500
      alliance:
        type: "array"
        description: "alliance array"
        title: "get_search_alliance"
        items:
          type: "integer"
          format: "int32"
          description: "alliance integer"
          title: "get_search_alliance_alliance"
        maxItems: 500
      character:
        type: "array"
        description: "character array"
        title: "get_search_character"
        items:
          type: "integer"
          format: "int32"
          description: "character integer"
          title: "get_search_character_character"
        maxItems: 500
      constellation:
        type: "array"
        description: "constellation array"
        title: "get_search_constellation"
        items:
          type: "integer"
          format: "int32"
          description: "constellation integer"
          title: "get_search_constellation_constellation"
        maxItems: 500
      corporation:
        type: "array"
        description: "corporation array"
        title: "get_search_corporation"
        items:
          type: "integer"
          format: "int32"
          description: "corporation integer"
          title: "get_search_corporation_corporation"
        maxItems: 500
      faction:
        type: "array"
        description: "faction array"
        title: "get_search_faction"
        items:
          type: "integer"
          format: "int32"
          description: "faction integer"
          title: "get_search_faction_faction"
        maxItems: 500
      inventory_type:
        type: "array"
        description: "inventory_type array"
        title: "get_search_inventory_type"
        items:
          type: "integer"
          format: "int32"
          description: "inventory_type integer"
          title: "get_search_inventory_type_inventory_type"
        maxItems: 500
      region:
        type: "array"
        description: "region array"
        title: "get_search_region"
        items:
          type: "integer"
          format: "int32"
          description: "region integer"
          title: "get_search_region_region"
        maxItems: 500
      solar_system:
        type: "array"
        description: "solar_system array"
        title: "get_search_solar_system"
        items:
          type: "integer"
          format: "int32"
          description: "solar_system integer"
          title: "get_search_solar_system_solar_system"
        maxItems: 500
      station:
        type: "array"
        description: "station array"
        title: "get_search_station"
        items:
          type: "integer"
          format: "int32"
          description: "station integer"
          title: "get_search_station_station"
        maxItems: 500
    description: "200 ok object"
  get_status_ok:
    required:
    - "players"
    - "server_version"
    - "start_time"
    properties:
      players:
        type: "integer"
        description: "Current online player count"
        title: "get_status_players"
      server_version:
        type: "string"
        description: "Running version as string"
        title: "get_status_server_version"
      start_time:
        type: "string"
        format: "date-time"
        description: "Server start timestamp"
        title: "get_status_start_time"
      vip:
        type: "boolean"
        description: "If the server is in VIP mode"
        title: "get_status_vip"
    description: "200 ok object"
  get_universe_ancestries_200_ok:
    required:
    - "bloodline_id"
    - "description"
    - "id"
    - "name"
    properties:
      bloodline_id:
        type: "integer"
        format: "int32"
        description: "The bloodline associated with this ancestry"
        title: "get_universe_ancestries_bloodline_id"
      description:
        type: "string"
        description: "description string"
        title: "get_universe_ancestries_description"
      icon_id:
        type: "integer"
        format: "int32"
        description: "icon_id integer"
        title: "get_universe_ancestries_icon_id"
      id:
        type: "integer"
        format: "int32"
        description: "id integer"
        title: "get_universe_ancestries_id"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_ancestries_name"
      short_description:
        type: "string"
        description: "short_description string"
        title: "get_universe_ancestries_short_description"
    description: "200 ok object"
  get_universe_asteroid_belts_asteroid_belt_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_asteroid_belts_asteroid_belt_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_asteroid_belts_asteroid_belt_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_asteroid_belts_asteroid_belt_id_z"
    description: "position object"
  get_universe_asteroid_belts_asteroid_belt_id_ok:
    required:
    - "name"
    - "position"
    - "system_id"
    properties:
      name:
        type: "string"
        description: "name string"
        title: "get_universe_asteroid_belts_asteroid_belt_id_name"
      position:
        $ref: "#/definitions/get_universe_asteroid_belts_asteroid_belt_id_position"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this asteroid belt is in"
        title: "get_universe_asteroid_belts_asteroid_belt_id_system_id"
    description: "200 ok object"
  get_universe_asteroid_belts_asteroid_belt_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_asteroid_belts_asteroid_belt_id_404_not_found"
    description: "Not found"
  get_universe_bloodlines_200_ok:
    required:
    - "bloodline_id"
    - "charisma"
    - "corporation_id"
    - "description"
    - "intelligence"
    - "memory"
    - "name"
    - "perception"
    - "race_id"
    - "ship_type_id"
    - "willpower"
    properties:
      bloodline_id:
        type: "integer"
        format: "int32"
        description: "bloodline_id integer"
        title: "get_universe_bloodlines_bloodline_id"
      charisma:
        type: "integer"
        format: "int32"
        description: "charisma integer"
        title: "get_universe_bloodlines_charisma"
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_universe_bloodlines_corporation_id"
      description:
        type: "string"
        description: "description string"
        title: "get_universe_bloodlines_description"
      intelligence:
        type: "integer"
        format: "int32"
        description: "intelligence integer"
        title: "get_universe_bloodlines_intelligence"
      memory:
        type: "integer"
        format: "int32"
        description: "memory integer"
        title: "get_universe_bloodlines_memory"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_bloodlines_name"
      perception:
        type: "integer"
        format: "int32"
        description: "perception integer"
        title: "get_universe_bloodlines_perception"
      race_id:
        type: "integer"
        format: "int32"
        description: "race_id integer"
        title: "get_universe_bloodlines_race_id"
      ship_type_id:
        type: "integer"
        format: "int32"
        description: "ship_type_id integer"
        title: "get_universe_bloodlines_ship_type_id"
        x-nullable: true
      willpower:
        type: "integer"
        format: "int32"
        description: "willpower integer"
        title: "get_universe_bloodlines_willpower"
    description: "200 ok object"
  get_universe_categories_category_id_ok:
    required:
    - "category_id"
    - "groups"
    - "name"
    - "published"
    properties:
      category_id:
        type: "integer"
        format: "int32"
        description: "category_id integer"
        title: "get_universe_categories_category_id_category_id"
      groups:
        type: "array"
        description: "groups array"
        title: "get_universe_categories_category_id_groups"
        items:
          type: "integer"
          format: "int32"
          description: "group integer"
          title: "get_universe_categories_category_id_group"
        maxItems: 10000
      name:
        type: "string"
        description: "name string"
        title: "get_universe_categories_category_id_name"
      published:
        type: "boolean"
        description: "published boolean"
        title: "get_universe_categories_category_id_published"
    description: "200 ok object"
  get_universe_categories_category_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_categories_category_id_404_not_found"
    description: "Not found"
  get_universe_constellations_constellation_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_constellations_constellation_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_constellations_constellation_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_constellations_constellation_id_z"
    description: "position object"
  get_universe_constellations_constellation_id_ok:
    required:
    - "constellation_id"
    - "name"
    - "position"
    - "region_id"
    - "systems"
    properties:
      constellation_id:
        type: "integer"
        format: "int32"
        description: "constellation_id integer"
        title: "get_universe_constellations_constellation_id_constellation_id"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_constellations_constellation_id_name"
      position:
        $ref: "#/definitions/get_universe_constellations_constellation_id_position"
      region_id:
        type: "integer"
        format: "int32"
        description: "The region this constellation is in"
        title: "get_universe_constellations_constellation_id_region_id"
      systems:
        type: "array"
        description: "systems array"
        title: "get_universe_constellations_constellation_id_systems"
        items:
          type: "integer"
          format: "int32"
          description: "system integer"
          title: "get_universe_constellations_constellation_id_system"
        maxItems: 10000
    description: "200 ok object"
  get_universe_constellations_constellation_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_constellations_constellation_id_404_not_found"
    description: "Not found"
  get_universe_factions_200_ok:
    required:
    - "description"
    - "faction_id"
    - "is_unique"
    - "name"
    - "size_factor"
    - "station_count"
    - "station_system_count"
    properties:
      corporation_id:
        type: "integer"
        format: "int32"
        description: "corporation_id integer"
        title: "get_universe_factions_corporation_id"
      description:
        type: "string"
        description: "description string"
        title: "get_universe_factions_description"
      faction_id:
        type: "integer"
        format: "int32"
        description: "faction_id integer"
        title: "get_universe_factions_faction_id"
      is_unique:
        type: "boolean"
        description: "is_unique boolean"
        title: "get_universe_factions_is_unique"
      militia_corporation_id:
        type: "integer"
        format: "int32"
        description: "militia_corporation_id integer"
        title: "get_universe_factions_militia_corporation_id"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_factions_name"
      size_factor:
        type: "number"
        format: "float"
        description: "size_factor number"
        title: "get_universe_factions_size_factor"
      solar_system_id:
        type: "integer"
        format: "int32"
        description: "solar_system_id integer"
        title: "get_universe_factions_solar_system_id"
      station_count:
        type: "integer"
        format: "int32"
        description: "station_count integer"
        title: "get_universe_factions_station_count"
      station_system_count:
        type: "integer"
        format: "int32"
        description: "station_system_count integer"
        title: "get_universe_factions_station_system_count"
    description: "200 ok object"
  get_universe_moons_moon_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_moons_moon_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_moons_moon_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_moons_moon_id_z"
    description: "position object"
  get_universe_moons_moon_id_ok:
    required:
    - "moon_id"
    - "name"
    - "position"
    - "system_id"
    properties:
      moon_id:
        type: "integer"
        format: "int32"
        description: "moon_id integer"
        title: "get_universe_moons_moon_id_moon_id"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_moons_moon_id_name"
      position:
        $ref: "#/definitions/get_universe_moons_moon_id_position"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this moon is in"
        title: "get_universe_moons_moon_id_system_id"
    description: "200 ok object"
  get_universe_moons_moon_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_moons_moon_id_404_not_found"
    description: "Not found"
  post_universe_names_200_ok:
    required:
    - "category"
    - "id"
    - "name"
    properties:
      category:
        type: "string"
        description: "category string"
        title: "post_universe_names_category"
        enum:
        - "alliance"
        - "character"
        - "constellation"
        - "corporation"
        - "inventory_type"
        - "region"
        - "solar_system"
        - "station"
      id:
        type: "integer"
        format: "int32"
        description: "id integer"
        title: "post_universe_names_id"
      name:
        type: "string"
        description: "name string"
        title: "post_universe_names_name"
    description: "200 ok object"
  post_universe_names_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "post_universe_names_404_not_found"
    description: "Not found"
  get_universe_planets_planet_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_planets_planet_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_planets_planet_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_planets_planet_id_z"
    description: "position object"
  get_universe_planets_planet_id_ok:
    required:
    - "name"
    - "planet_id"
    - "position"
    - "system_id"
    - "type_id"
    properties:
      name:
        type: "string"
        description: "name string"
        title: "get_universe_planets_planet_id_name"
      planet_id:
        type: "integer"
        format: "int32"
        description: "planet_id integer"
        title: "get_universe_planets_planet_id_planet_id"
      position:
        $ref: "#/definitions/get_universe_planets_planet_id_position"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this planet is in"
        title: "get_universe_planets_planet_id_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_planets_planet_id_type_id"
    description: "200 ok object"
  get_universe_planets_planet_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_planets_planet_id_404_not_found"
    description: "Not found"
  get_universe_regions_region_id_ok:
    required:
    - "constellations"
    - "name"
    - "region_id"
    properties:
      constellations:
        type: "array"
        description: "constellations array"
        title: "get_universe_regions_region_id_constellations"
        items:
          type: "integer"
          format: "int32"
          description: "constellation integer"
          title: "get_universe_regions_region_id_constellation"
        maxItems: 1000
      description:
        type: "string"
        description: "description string"
        title: "get_universe_regions_region_id_description"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_regions_region_id_name"
      region_id:
        type: "integer"
        format: "int32"
        description: "region_id integer"
        title: "get_universe_regions_region_id_region_id"
    description: "200 ok object"
  get_universe_regions_region_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_regions_region_id_404_not_found"
    description: "Not found"
  get_universe_stargates_stargate_id_destination:
    required:
    - "stargate_id"
    - "system_id"
    properties:
      stargate_id:
        type: "integer"
        format: "int32"
        description: "The stargate this stargate connects to"
        title: "get_universe_stargates_stargate_id_destination_stargate_id"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this stargate connects to"
        title: "get_universe_stargates_stargate_id_destination_system_id"
    description: "destination object"
  get_universe_stargates_stargate_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_stargates_stargate_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_stargates_stargate_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_stargates_stargate_id_z"
    description: "position object"
  get_universe_stargates_stargate_id_ok:
    required:
    - "destination"
    - "name"
    - "position"
    - "stargate_id"
    - "system_id"
    - "type_id"
    properties:
      destination:
        $ref: "#/definitions/get_universe_stargates_stargate_id_destination"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_stargates_stargate_id_name"
      position:
        $ref: "#/definitions/get_universe_stargates_stargate_id_position"
      stargate_id:
        type: "integer"
        format: "int32"
        description: "stargate_id integer"
        title: "get_universe_stargates_stargate_id_stargate_id"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this stargate is in"
        title: "get_universe_stargates_stargate_id_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_stargates_stargate_id_type_id"
    description: "200 ok object"
  get_universe_stargates_stargate_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_stargates_stargate_id_404_not_found"
    description: "Not found"
  get_universe_stars_star_id_ok:
    required:
    - "age"
    - "luminosity"
    - "name"
    - "radius"
    - "solar_system_id"
    - "spectral_class"
    - "temperature"
    - "type_id"
    properties:
      age:
        type: "integer"
        format: "int64"
        description: "Age of star in years"
        title: "get_universe_stars_star_id_age"
      luminosity:
        type: "number"
        format: "float"
        description: "luminosity number"
        title: "get_universe_stars_star_id_luminosity"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_stars_star_id_name"
      radius:
        type: "integer"
        format: "int64"
        description: "radius integer"
        title: "get_universe_stars_star_id_radius"
      solar_system_id:
        type: "integer"
        format: "int32"
        description: "solar_system_id integer"
        title: "get_universe_stars_star_id_solar_system_id"
      spectral_class:
        type: "string"
        description: "spectral_class string"
        title: "get_universe_stars_star_id_spectral_class"
        enum:
        - "K2 V"
        - "K4 V"
        - "G2 V"
        - "G8 V"
        - "M7 V"
        - "K7 V"
        - "M2 V"
        - "K5 V"
        - "M3 V"
        - "G0 V"
        - "G7 V"
        - "G3 V"
        - "F9 V"
        - "G5 V"
        - "F6 V"
        - "K8 V"
        - "K9 V"
        - "K6 V"
        - "G9 V"
        - "G6 V"
        - "G4 VI"
        - "G4 V"
        - "F8 V"
        - "F2 V"
        - "F1 V"
        - "K3 V"
        - "F0 VI"
        - "G1 VI"
        - "G0 VI"
        - "K1 V"
        - "M4 V"
        - "M1 V"
        - "M6 V"
        - "M0 V"
        - "K2 IV"
        - "G2 VI"
        - "K0 V"
        - "K5 IV"
        - "F5 VI"
        - "G6 VI"
        - "F6 VI"
        - "F2 IV"
        - "G3 VI"
        - "M8 V"
        - "F1 VI"
        - "K1 IV"
        - "F7 V"
        - "G5 VI"
        - "M5 V"
        - "G7 VI"
        - "F5 V"
        - "F4 VI"
        - "F8 VI"
        - "K3 IV"
        - "F4 IV"
        - "F0 V"
        - "G7 IV"
        - "G8 VI"
        - "F2 VI"
        - "F4 V"
        - "F7 VI"
        - "F3 V"
        - "G1 V"
        - "G9 VI"
        - "F3 IV"
        - "F9 VI"
        - "M9 V"
        - "K0 IV"
        - "F1 IV"
        - "G4 IV"
        - "F3 VI"
        - "K4 IV"
        - "G5 IV"
        - "G3 IV"
        - "G1 IV"
        - "K7 IV"
        - "G0 IV"
        - "K6 IV"
        - "K9 IV"
        - "G2 IV"
        - "F9 IV"
        - "F0 IV"
        - "K8 IV"
        - "G8 IV"
        - "F6 IV"
        - "F5 IV"
        - "A0"
        - "A0IV"
        - "A0IV2"
      temperature:
        type: "integer"
        format: "int32"
        description: "temperature integer"
        title: "get_universe_stars_star_id_temperature"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_stars_star_id_type_id"
    description: "200 ok object"
  get_universe_stations_station_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_stations_station_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_stations_station_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_stations_station_id_z"
    description: "position object"
  get_universe_stations_station_id_ok:
    required:
    - "max_dockable_ship_volume"
    - "name"
    - "office_rental_cost"
    - "position"
    - "reprocessing_efficiency"
    - "reprocessing_stations_take"
    - "services"
    - "station_id"
    - "system_id"
    - "type_id"
    properties:
      max_dockable_ship_volume:
        type: "number"
        format: "float"
        description: "max_dockable_ship_volume number"
        title: "get_universe_stations_station_id_max_dockable_ship_volume"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_stations_station_id_name"
      office_rental_cost:
        type: "number"
        format: "float"
        description: "office_rental_cost number"
        title: "get_universe_stations_station_id_office_rental_cost"
      owner:
        type: "integer"
        format: "int32"
        description: "ID of the corporation that controls this station"
        title: "get_universe_stations_station_id_owner"
      position:
        $ref: "#/definitions/get_universe_stations_station_id_position"
      race_id:
        type: "integer"
        format: "int32"
        description: "race_id integer"
        title: "get_universe_stations_station_id_race_id"
      reprocessing_efficiency:
        type: "number"
        format: "float"
        description: "reprocessing_efficiency number"
        title: "get_universe_stations_station_id_reprocessing_efficiency"
      reprocessing_stations_take:
        type: "number"
        format: "float"
        description: "reprocessing_stations_take number"
        title: "get_universe_stations_station_id_reprocessing_stations_take"
      services:
        type: "array"
        description: "services array"
        title: "get_universe_stations_station_id_services"
        items:
          type: "string"
          description: "service string"
          title: "get_universe_stations_station_id_service"
          enum:
          - "bounty-missions"
          - "assasination-missions"
          - "courier-missions"
          - "interbus"
          - "reprocessing-plant"
          - "refinery"
          - "market"
          - "black-market"
          - "stock-exchange"
          - "cloning"
          - "surgery"
          - "dna-therapy"
          - "repair-facilities"
          - "factory"
          - "labratory"
          - "gambling"
          - "fitting"
          - "paintshop"
          - "news"
          - "storage"
          - "insurance"
          - "docking"
          - "office-rental"
          - "jump-clone-facility"
          - "loyalty-point-store"
          - "navy-offices"
          - "security-offices"
        maxItems: 30
      station_id:
        type: "integer"
        format: "int32"
        description: "station_id integer"
        title: "get_universe_stations_station_id_station_id"
      system_id:
        type: "integer"
        format: "int32"
        description: "The solar system this station is in"
        title: "get_universe_stations_station_id_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_stations_station_id_type_id"
    description: "200 ok object"
  get_universe_stations_station_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_stations_station_id_404_not_found"
    description: "Not found"
  get_universe_structures_structure_id_position:
    required:
    - "x"
    - "y"
    - "z"
    properties:
      x:
        type: "number"
        format: "double"
        description: "x number"
        title: "get_universe_structures_structure_id_x"
      y:
        type: "number"
        format: "double"
        description: "y number"
        title: "get_universe_structures_structure_id_y"
      z:
        type: "number"
        format: "double"
        description: "z number"
        title: "get_universe_structures_structure_id_z"
    description: "Coordinates of the structure in Cartesian space relative to the\
      \ Sun, in metres.\n"
  get_universe_structures_structure_id_ok:
    required:
    - "name"
    - "owner_id"
    - "solar_system_id"
    properties:
      name:
        type: "string"
        description: "The full name of the structure"
        title: "get_universe_structures_structure_id_name"
      owner_id:
        type: "integer"
        format: "int32"
        description: "The ID of the corporation who owns this particular structure"
        title: "get_universe_structures_structure_id_owner_id"
      position:
        $ref: "#/definitions/get_universe_structures_structure_id_position"
      solar_system_id:
        type: "integer"
        format: "int32"
        description: "solar_system_id integer"
        title: "get_universe_structures_structure_id_solar_system_id"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_structures_structure_id_type_id"
    description: "200 ok object"
  get_universe_structures_structure_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_structures_structure_id_404_not_found"
    description: "Not found"
  get_universe_system_jumps_200_ok:
    required:
    - "ship_jumps"
    - "system_id"
    properties:
      ship_jumps:
        type: "integer"
        format: "int32"
        description: "ship_jumps integer"
        title: "get_universe_system_jumps_ship_jumps"
      system_id:
        type: "integer"
        format: "int32"
        description: "system_id integer"
        title: "get_universe_system_jumps_system_id"
    description: "200 ok object"
  get_universe_system_kills_200_ok:
    required:
    - "npc_kills"
    - "pod_kills"
    - "ship_kills"
    - "system_id"
    properties:
      npc_kills:
        type: "integer"
        format: "int32"
        description: "Number of NPC ships killed in this system"
        title: "get_universe_system_kills_npc_kills"
      pod_kills:
        type: "integer"
        format: "int32"
        description: "Number of pods killed in this system"
        title: "get_universe_system_kills_pod_kills"
      ship_kills:
        type: "integer"
        format: "int32"
        description: "Number of player ships killed in this system"
        title: "get_universe_system_kills_ship_kills"
      system_id:
        type: "integer"
        format: "int32"
        description: "system_id integer"
        title: "get_universe_system_kills_system_id"
    description: "200 ok object"
  get_universe_types_type_id_dogma_attribute:
    required:
    - "attribute_id"
    - "value"
    properties:
      attribute_id:
        type: "integer"
        format: "int32"
        description: "attribute_id integer"
        title: "get_universe_types_type_id_attribute_id"
      value:
        type: "number"
        format: "float"
        description: "value number"
        title: "get_universe_types_type_id_value"
    description: "dogma_attribute object"
  get_universe_types_type_id_dogma_effect:
    required:
    - "effect_id"
    - "is_default"
    properties:
      effect_id:
        type: "integer"
        format: "int32"
        description: "effect_id integer"
        title: "get_universe_types_type_id_effect_id"
      is_default:
        type: "boolean"
        description: "is_default boolean"
        title: "get_universe_types_type_id_is_default"
    description: "dogma_effect object"
  get_universe_types_type_id_ok:
    required:
    - "description"
    - "group_id"
    - "name"
    - "published"
    - "type_id"
    properties:
      capacity:
        type: "number"
        format: "float"
        description: "capacity number"
        title: "get_universe_types_type_id_capacity"
      description:
        type: "string"
        description: "description string"
        title: "get_universe_types_type_id_description"
      dogma_attributes:
        type: "array"
        description: "dogma_attributes array"
        title: "get_universe_types_type_id_dogma_attributes"
        items:
          $ref: "#/definitions/get_universe_types_type_id_dogma_attribute"
        maxItems: 1000
      dogma_effects:
        type: "array"
        description: "dogma_effects array"
        title: "get_universe_types_type_id_dogma_effects"
        items:
          $ref: "#/definitions/get_universe_types_type_id_dogma_effect"
        maxItems: 1000
      graphic_id:
        type: "integer"
        format: "int32"
        description: "graphic_id integer"
        title: "get_universe_types_type_id_graphic_id"
      group_id:
        type: "integer"
        format: "int32"
        description: "group_id integer"
        title: "get_universe_types_type_id_group_id"
      icon_id:
        type: "integer"
        format: "int32"
        description: "icon_id integer"
        title: "get_universe_types_type_id_icon_id"
      mass:
        type: "number"
        format: "float"
        description: "mass number"
        title: "get_universe_types_type_id_mass"
      name:
        type: "string"
        description: "name string"
        title: "get_universe_types_type_id_name"
      portion_size:
        type: "integer"
        format: "int32"
        description: "portion_size integer"
        title: "get_universe_types_type_id_portion_size"
      published:
        type: "boolean"
        description: "published boolean"
        title: "get_universe_types_type_id_published"
      radius:
        type: "number"
        format: "float"
        description: "radius number"
        title: "get_universe_types_type_id_radius"
      type_id:
        type: "integer"
        format: "int32"
        description: "type_id integer"
        title: "get_universe_types_type_id_type_id"
      volume:
        type: "number"
        format: "float"
        description: "volume number"
        title: "get_universe_types_type_id_volume"
    description: "200 ok object"
  get_universe_types_type_id_not_found:
    properties:
      error:
        type: "string"
        description: "Not found message"
        title: "get_universe_types_type_id_404_not_found"
    description: "Not found"
parameters:
  Accept-Language:
    name: "Accept-Language"
    in: "header"
    description: "Language to use in the response"
    required: false
    type: "string"
    default: "en-us"
    enum:
    - "de"
    - "en-us"
    - "fr"
    - "ja"
    - "ru"
    - "ko"
    x-exportParamName: "AcceptLanguage"
  If-None-Match:
    name: "If-None-Match"
    in: "header"
    description: "ETag from a previous request. A 304 will be returned if this matches\
      \ the current ETag"
    required: false
    type: "string"
    x-exportParamName: "IfNoneMatch"
  alliance_id:
    name: "alliance_id"
    in: "path"
    description: "An EVE alliance ID"
    required: true
    type: "integer"
    minimum: 1
    format: "int32"
    x-exportParamName: "AllianceId"
  character_id:
    name: "character_id"
    in: "path"
    description: "An EVE character ID"
    required: true
    type: "integer"
    minimum: 1
    format: "int32"
    x-exportParamName: "CharacterId"
  corporation_id:
    name: "corporation_id"
    in: "path"
    description: "An EVE corporation ID"
    required: true
    type: "integer"
    minimum: 1
    format: "int32"
    x-exportParamName: "CorporationId"
  datasource:
    name: "datasource"
    in: "query"
    description: "The server name you would like data from"
    required: false
    type: "string"
    default: "tranquility"
    enum:
    - "tranquility"
    x-exportParamName: "Datasource"
  language:
    name: "language"
    in: "query"
    description: "Language to use in the response, takes precedence over Accept-Language"
    required: false
    type: "string"
    default: "en-us"
    enum:
    - "de"
    - "en-us"
    - "fr"
    - "ja"
    - "ru"
    - "ko"
    x-exportParamName: "Language"
  page:
    name: "page"
    in: "query"
    description: "Which page of results to return"
    required: false
    type: "integer"
    default: 1
    minimum: 1
    format: "int32"
    x-exportParamName: "Page"
  token:
    name: "token"
    in: "query"
    description: "Access token to use if unable to set a header"
    required: false
    type: "string"
    x-exportParamName: "Token"
